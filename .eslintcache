[{"/Users/qt/Desktop/boundce/bounce-kyc/src/index.js":"1","/Users/qt/Desktop/boundce/bounce-kyc/src/App.js":"2","/Users/qt/Desktop/boundce/bounce-kyc/src/reducer.js":"3","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/InitPage.jsx":"4","/Users/qt/Desktop/boundce/bounce-kyc/src/redux/index.js":"5","/Users/qt/Desktop/boundce/bounce-kyc/src/const.js":"6","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/index.jsx":"7","/Users/qt/Desktop/boundce/bounce-kyc/src/components/WalletConnect.js":"8","/Users/qt/Desktop/boundce/bounce-kyc/src/redux/reducer.js":"9","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/styled.js":"10","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Apply.jsx":"11","/Users/qt/Desktop/boundce/bounce-kyc/src/components/WalletItem.jsx":"12","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/Confirm.jsx":"13","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/index.jsx":"14","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/index.jsx":"15","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/PersonalInfo/index.jsx":"16","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Home/index.jsx":"17","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Detail/index.jsx":"18","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/index.jsx":"19","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/ApplyModal.js":"20","/Users/qt/Desktop/boundce/bounce-kyc/src/web3/address.js":"21","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Button.js":"22","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/index.jsx":"23","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/LearnMore/index.jsx":"24","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/index.jsx":"25","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ProjectList/index.jsx":"26","/Users/qt/Desktop/boundce/bounce-kyc/src/components/styled.js":"27","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/styled.js":"28","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/styled.js":"29","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/PersonalInfo/styled.js":"30","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Home/styled.js":"31","/Users/qt/Desktop/boundce/bounce-kyc/src/web3/index.js":"32","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Detail/styled.js":"33","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/config.js":"34","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/styled.js":"35","/Users/qt/Desktop/boundce/bounce-kyc/src/config/request_api.js":"36","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Modal.js":"37","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Card.jsx":"38","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/Support.jsx":"39","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/hooks.js":"40","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ProjectList/styled.js":"41","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/PersonalModal.jsx":"42","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/styled.js":"43","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/LearnMore/styled.js":"44","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Layout.jsx":"45","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Progress.jsx":"46","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/CardHeader.jsx":"47","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step6.jsx":"48","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step4.jsx":"49","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step3.jsx":"50","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step5.jsx":"51","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step2.jsx":"52","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step1.jsx":"53","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/index.jsx":"54","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/Crumbs.jsx":"55","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step3.jsx":"56","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step2.jsx":"57","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/TXModal.js":"58","/Users/qt/Desktop/boundce/bounce-kyc/src/hooks/useBalance.js":"59","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/time.js":"60","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/numberTransform.js":"61","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/index.jsx":"62","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/styled.js":"63","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Text.jsx":"64","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Select.jsx":"65","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Form.js":"66","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Upload.jsx":"67","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/Passage.jsx":"68","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/styled.js":"69","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/styled.js":"70","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Button.jsx":"71","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Check.jsx":"72","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Input.jsx":"73","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Form.jsx":"74","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step1.jsx":"75","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/FixedSwap/Detail.js":"76","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/FixedSwap/Hooks.js":"77","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/themeHooks.js":"78","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/form.js":"79","/Users/qt/Desktop/boundce/bounce-kyc/src/hooks/useLeftTime.js":"80","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/common.js":"81","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/PasswordMpdal.js":"82","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/AuctionTipModal.js":"83","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/TipLink.js":"84","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/BidModal.js":"85","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/message.js":"86","/Users/qt/Desktop/boundce/bounce-kyc/src/web3/common.js":"87","/Users/qt/Desktop/boundce/bounce-kyc/src/hooks.js":"88"},{"size":152,"mtime":1610992639219,"results":"89","hashOfConfig":"90"},{"size":959,"mtime":1611157951953,"results":"91","hashOfConfig":"90"},{"size":829,"mtime":1611341191436,"results":"92","hashOfConfig":"90"},{"size":2132,"mtime":1611157951969,"results":"93","hashOfConfig":"90"},{"size":372,"mtime":1610992639219,"results":"94","hashOfConfig":"90"},{"size":7407,"mtime":1611499497331,"results":"95","hashOfConfig":"90"},{"size":2253,"mtime":1611499387671,"results":"96","hashOfConfig":"90"},{"size":3534,"mtime":1611247064790,"results":"97","hashOfConfig":"90"},{"size":994,"mtime":1611247064801,"results":"98","hashOfConfig":"90"},{"size":201,"mtime":1611333753503,"results":"99","hashOfConfig":"90"},{"size":2337,"mtime":1611334437443,"results":"100","hashOfConfig":"90"},{"size":698,"mtime":1611247064791,"results":"101","hashOfConfig":"90"},{"size":1275,"mtime":1611247064796,"results":"102","hashOfConfig":"90"},{"size":816,"mtime":1611489173771,"results":"103","hashOfConfig":"90"},{"size":2116,"mtime":1611252099283,"results":"104","hashOfConfig":"90"},{"size":6402,"mtime":1611333753495,"results":"105","hashOfConfig":"90"},{"size":8314,"mtime":1611372036272,"results":"106","hashOfConfig":"90"},{"size":190,"mtime":1611111236804,"results":"107","hashOfConfig":"90"},{"size":4637,"mtime":1611340693524,"results":"108","hashOfConfig":"90"},{"size":3284,"mtime":1611254771095,"results":"109","hashOfConfig":"90"},{"size":2500,"mtime":1611500270541,"results":"110","hashOfConfig":"90"},{"size":1051,"mtime":1611162908528,"results":"111","hashOfConfig":"90"},{"size":1911,"mtime":1611488034942,"results":"112","hashOfConfig":"90"},{"size":5952,"mtime":1611488034938,"results":"113","hashOfConfig":"90"},{"size":6836,"mtime":1611488034938,"results":"114","hashOfConfig":"90"},{"size":3110,"mtime":1611493453764,"results":"115","hashOfConfig":"90"},{"size":936,"mtime":1611247064791,"results":"116","hashOfConfig":"90"},{"size":2287,"mtime":1611247064797,"results":"117","hashOfConfig":"90"},{"size":4490,"mtime":1611320281311,"results":"118","hashOfConfig":"90"},{"size":2369,"mtime":1611333753496,"results":"119","hashOfConfig":"90"},{"size":9518,"mtime":1611333753495,"results":"120","hashOfConfig":"90"},{"size":654,"mtime":1611503156065,"results":"121","hashOfConfig":"90"},{"size":81,"mtime":1611111236805,"results":"122","hashOfConfig":"90"},{"size":516,"mtime":1611372036274,"results":"123","hashOfConfig":"90"},{"size":3718,"mtime":1611247064796,"results":"124","hashOfConfig":"90"},{"size":370,"mtime":1611383431631,"results":"125","hashOfConfig":"90"},{"size":5046,"mtime":1611338938585,"results":"126","hashOfConfig":"90"},{"size":9525,"mtime":1611494474713,"results":"127","hashOfConfig":"90"},{"size":891,"mtime":1611321139974,"results":"128","hashOfConfig":"90"},{"size":5472,"mtime":1611493792602,"results":"129","hashOfConfig":"90"},{"size":968,"mtime":1611111236808,"results":"130","hashOfConfig":"90"},{"size":2596,"mtime":1611341657168,"results":"131","hashOfConfig":"90"},{"size":2635,"mtime":1611333753494,"results":"132","hashOfConfig":"90"},{"size":1560,"mtime":1611488034939,"results":"133","hashOfConfig":"90"},{"size":9706,"mtime":1611501392263,"results":"134","hashOfConfig":"90"},{"size":1178,"mtime":1611337833863,"results":"135","hashOfConfig":"90"},{"size":968,"mtime":1611111236804,"results":"136","hashOfConfig":"90"},{"size":3618,"mtime":1611488034937,"results":"137","hashOfConfig":"90"},{"size":5107,"mtime":1611488034936,"results":"138","hashOfConfig":"90"},{"size":2181,"mtime":1611488034936,"results":"139","hashOfConfig":"90"},{"size":6115,"mtime":1611488034937,"results":"140","hashOfConfig":"90"},{"size":3203,"mtime":1611488034935,"results":"141","hashOfConfig":"90"},{"size":5809,"mtime":1611488034933,"results":"142","hashOfConfig":"90"},{"size":374,"mtime":1611488034948,"results":"143","hashOfConfig":"90"},{"size":584,"mtime":1611488034945,"results":"144","hashOfConfig":"90"},{"size":5041,"mtime":1611488034941,"results":"145","hashOfConfig":"90"},{"size":4010,"mtime":1611488034940,"results":"146","hashOfConfig":"90"},{"size":3071,"mtime":1611318895036,"results":"147","hashOfConfig":"90"},{"size":866,"mtime":1611373957346,"results":"148","hashOfConfig":"90"},{"size":2477,"mtime":1611383431634,"results":"149","hashOfConfig":"90"},{"size":2258,"mtime":1611159666819,"results":"150","hashOfConfig":"90"},{"size":97,"mtime":1611333753497,"results":"151","hashOfConfig":"90"},{"size":1175,"mtime":1611333753497,"results":"152","hashOfConfig":"90"},{"size":348,"mtime":1611247064798,"results":"153","hashOfConfig":"90"},{"size":1581,"mtime":1611488034947,"results":"154","hashOfConfig":"90"},{"size":3879,"mtime":1611163422841,"results":"155","hashOfConfig":"90"},{"size":3926,"mtime":1611488034947,"results":"156","hashOfConfig":"90"},{"size":331,"mtime":1611111236809,"results":"157","hashOfConfig":"90"},{"size":10550,"mtime":1611488034948,"results":"158","hashOfConfig":"90"},{"size":1053,"mtime":1611488034943,"results":"159","hashOfConfig":"90"},{"size":665,"mtime":1611157951973,"results":"160","hashOfConfig":"90"},{"size":958,"mtime":1611333753500,"results":"161","hashOfConfig":"90"},{"size":8725,"mtime":1611488034946,"results":"162","hashOfConfig":"90"},{"size":373,"mtime":1611488034946,"results":"163","hashOfConfig":"90"},{"size":4048,"mtime":1611488034940,"results":"164","hashOfConfig":"90"},{"size":17637,"mtime":1611501448134,"results":"165","hashOfConfig":"90"},{"size":7530,"mtime":1611505597543,"results":"166","hashOfConfig":"90"},{"size":545,"mtime":1609477445110,"results":"167","hashOfConfig":"90"},{"size":155,"mtime":1610005028731,"results":"168","hashOfConfig":"90"},{"size":1099,"mtime":1609477445115,"results":"169","hashOfConfig":"90"},{"size":563,"mtime":1611162664973,"results":"170","hashOfConfig":"90"},{"size":1831,"mtime":1611163289053,"results":"171","hashOfConfig":"90"},{"size":4079,"mtime":1611162908532,"results":"172","hashOfConfig":"90"},{"size":655,"mtime":1609477445041,"results":"173","hashOfConfig":"90"},{"size":3072,"mtime":1611163839783,"results":"174","hashOfConfig":"90"},{"size":1714,"mtime":1611162591074,"results":"175","hashOfConfig":"90"},{"size":8164,"mtime":1611501272813,"results":"176","hashOfConfig":"90"},{"size":301,"mtime":1611500621778,"results":"177","hashOfConfig":"90"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"1vieohx",{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"180"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"180"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"180"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"180"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"180"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"180"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"180"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"180"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"180"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"180"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"180"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"288","usedDeprecatedRules":"180"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"180"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"180"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"180"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"180"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"180"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"180"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"180"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"180"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"329","usedDeprecatedRules":"180"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"180"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"180"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"180"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"180"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"356","usedDeprecatedRules":"180"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"180"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"180"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"180"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"180"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"180"},"/Users/qt/Desktop/boundce/bounce-kyc/src/index.js",[],["385","386"],"/Users/qt/Desktop/boundce/bounce-kyc/src/App.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/reducer.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/InitPage.jsx",["387","388","389"],"import React, { useContext, useEffect } from 'react'\nimport { WalletConnect } from \"../components/WalletConnect\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { mainContext } from \"../reducer\";\nimport { BOUNCE_SELECT_WEB3_CONTEXT } from \"../const\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { LedgerConnector } from \"@web3-react/ledger-connector\";\n\nconst injected = new InjectedConnector({\n    supportedChainIds: [1, 3, 4, 5, 42, 31337]\n});\n\nconst POLLING_INTERVAL = 12000;\nconst RPC_URLS = {\n    1: \"https://eth-mainnet.alchemyapi.io/v2/k2--UT_xVVXMOvAyoxJYqtKhlmyBbqnX\",\n    4: \"https://rinkeby.infura.io/v3/8f6d3d5d7a1442a38d9e8050c31c1884\"\n};\n\nconst walletconnect = new WalletConnectConnector({\n    rpc: { 1: RPC_URLS[1] },\n    bridge: \"https://bridge.walletconnect.org\",\n    qrcode: true,\n    pollingInterval: POLLING_INTERVAL\n});\n\nconst ledger = new LedgerConnector({\n    chainId: 1,\n    url: RPC_URLS[1],\n    pollingInterval: POLLING_INTERVAL\n});\n\nconst wallets = {\n    MetaMask: injected,\n    WalletConnect: walletconnect,\n    Ledger: ledger,\n    //TrustWallet: injected,\n    //Squarelink: squarelink,\n    //Torus: torus,\n    //Aut\n}\n\nexport const InitPage = () => {\n\n    const context = useWeb3React();\n    const { activate } = context;\n\n    const { state } = useContext(mainContext);\n\n    const {\n        showConnectModal,\n    } = state;\n\n    useEffect(() => {\n        const localContent = window && window.localStorage.getItem(BOUNCE_SELECT_WEB3_CONTEXT)\n        // console.log('wallet content', localContent)\n        if (localContent) {\n            // console.log('activate', wallets[localContent])\n            activate(wallets[localContent]);\n        }\n    }, [])\n\n    return <></>\n\n    // return (\n    //     <>\n    //         {showConnectModal && (\n    //             <div className=\"modal-show\">\n    //                 <div className=\"wrapper\">\n    //                     <WalletConnect/>\n    //                 </div>\n    //             </div>\n    //         )}\n    //         </>\n\n    // )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/redux/index.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/const.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/WalletConnect.js",["390","391","392","393"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { BOUNCE_SELECT_WEB3_CONTEXT } from \"../const\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { LedgerConnector } from \"@web3-react/ledger-connector\";\nimport { myContext } from '../redux';\nimport Confirm from '../pages/components/Modal/Confirm'\nimport WalletItem from './WalletItem'\nimport icon_matemask from '../assets/icons/matemask.svg'\nimport icon_walletconnect from '../assets/icons/walletconnect.svg'\n// import icon_ledger from '../assets/images/Ledger.png'\n\n\nconst injected = new InjectedConnector({\n    supportedChainIds: [1, 3, 4, 5, 42, 31337]\n});\n\nconst POLLING_INTERVAL = 12000;\nconst RPC_URLS = {\n    1: \"https://eth-mainnet.alchemyapi.io/v2/k2--UT_xVVXMOvAyoxJYqtKhlmyBbqnX\",\n    4: \"https://rinkeby.infura.io/v3/8f6d3d5d7a1442a38d9e8050c31c1884\"\n};\n\nconst walletconnect = new WalletConnectConnector({\n    rpc: { 1: RPC_URLS[1] },\n    bridge: \"https://bridge.walletconnect.org\",\n    qrcode: true,\n    pollingInterval: POLLING_INTERVAL\n});\n\nconst ledger = new LedgerConnector({\n    chainId: 1,\n    url: RPC_URLS[1],\n    pollingInterval: POLLING_INTERVAL\n});\n\nconst wallets = {\n    MetaMask: injected,\n    WalletConnect: walletconnect,\n    Ledger: ledger\n}\n\nexport const WalletConnect = () => {\n    const { state, dispatch } = useContext(myContext);\n    const [connectedName, setConnectedName] = useState()\n\n    const [activatingConnector, setActivatingConnector] = useState();\n    const [currentConnector] = useState();\n\n    const {\n        connector,\n        library,\n        account,\n        activate,\n        active,\n    } = useWeb3React()\n\n    useEffect(() => {\n        if (activatingConnector && activatingConnector === connector) {\n            setActivatingConnector(undefined);\n        }\n    }, [activatingConnector]);\n\n    useEffect(() => {\n        const localContent = window && window.localStorage.getItem(BOUNCE_SELECT_WEB3_CONTEXT)\n        // console.log('wallet content', localContent)\n        if (localContent) {\n            setConnectedName(localContent)\n        }\n    }, [])\n\n\n    useEffect(() => {\n        // console.log(account, account, library)\n        if (account && active && library) {\n            dispatch({ type: 'CONNECT_WALLET', value: false });\n        }\n    }, [account]);\n\n    function onConnect(currentConnector, name) {\n        setActivatingConnector(currentConnector);\n        setConnectedName(name)\n        window && window.localStorage.setItem(BOUNCE_SELECT_WEB3_CONTEXT, name)\n        activate(wallets[name]);\n    }\n\n    return (\n        <Confirm\n            title='Connect to a wallet'\n            tip=\"To participate in Bounce you first need to connect a wallet. Please select an option below. You can also connect a Ledger via your Metamask.\"\n        >\n\n            <div style={{ marginTop: 28 }}>\n                <WalletItem name='MateMask' icon={icon_matemask} onClick={() => {\n                    onConnect(currentConnector, 'MetaMask')\n                }} />\n                <WalletItem name='WalletConnect' icon={icon_walletconnect} onClick={() => {\n                    onConnect(currentConnector, 'WalletConnect')\n                }} />\n\n                {/* <WalletItem name='Ledger' icon={icon_ledger} onClick={() => {\n                    onConnect(currentConnector, 'Ledger')\n                }} /> */}\n            </div>\n        </Confirm>\n\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/redux/reducer.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Apply.jsx",["394","395","396"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Button } from \"../../components/common/Button\";\nimport bounceERC20 from '../../web3/abi/bounceERC20.json'\nimport BounceProVoting from '../../web3/abi/BounceProVoting.json'\n\nimport { ApplyModal } from \"./ApplyModal\";\nimport {\n  initStatus,\n  approveStatus,\n  pendingStatus,\n  confirmStatus,\n  successStatus,\n  errorStatus,\n  cancelStatus\n} from \"./ApplyModal\";\nimport {getContract, useActiveWeb3React} from \"../../web3\";\nimport {BOT, BOUNCE_PRO_VOTING} from \"../../web3/address\";\nimport Web3 from \"web3\";\n\nexport const Apply = () => {\n\n  const [modalStatus, setModalStatus] = useState(initStatus)\n  const { account, library, chainId, active } = useActiveWeb3React()\n\n  const onApply = async () => {\n    console.log('onApply', active)\n    setModalStatus(approveStatus);\n\n    try {\n      const tokenContract = getContract(library, bounceERC20.abi, BOT(chainId))\n      const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n\n      const result = await tokenContract.methods.approve(\n        BOUNCE_PRO_VOTING(chainId),\n        '300000000000000000',\n      )\n        .send({ from: account });\n      setModalStatus(confirmStatus);\n      if (result.status) {\n        await bounceContract.methods.create('1')\n          .send({ from: account })\n          .on('transactionHash', hash => {\n            setModalStatus(pendingStatus)\n          })\n          .on('receipt', (_, receipt) => {\n            setModalStatus(successStatus)\n          })\n          .on('error', (err, receipt) => {\n            setModalStatus(errorStatus)\n          })\n      } else {\n        setModalStatus(errorStatus)\n      }\n    } catch (err) {\n      if (err.code === 4001) {\n        setModalStatus(cancelStatus)\n      } else {\n        setModalStatus(errorStatus)\n      }\n      console.log('err', err);\n    }\n  };\n\n  const onSign = async () =>{\n    const web3 = new Web3(library.provider);\n    const sign = await web3.eth.personal.sign('0x1',account)\n    console.log('sign',sign)\n  }\n\n\n  return (\n    <div>\n      <Button onClick={onApply}>Apply</Button>\n      <ApplyModal onOK={() => {\n        setModalStatus(initStatus)\n        //history.goBack()\n      }} onDismiss={() => {\n        setModalStatus(initStatus)\n      }} modalStatus={modalStatus} />\n    </div>\n  )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/components/WalletItem.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/Confirm.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/PersonalInfo/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Home/index.jsx",["397","398"],"import React, { useState } from 'react'\nimport { HomeStyled } from './styled'\nimport lattice from '../../assets/images/lattice.svg'\nimport bule_check from '../../assets/images/bule-check.svg'\nimport bule_star from '../../assets/images/bule-star.svg'\nimport bule_people from '../../assets/images/bule-people.svg'\nimport logo_white from '../../assets/logo/logo-white.svg'\n\nimport back1 from '../../assets/images/back1.svg'\nimport back2 from '../../assets/images/back2.svg'\nimport back3 from '../../assets/images/back3.svg'\nimport back4 from '../../assets/images/back4.svg'\nimport back5 from '../../assets/images/back5.svg'\nimport back6 from '../../assets/images/back6.svg'\n\nimport medium from '../../assets/icons/index-medium.svg'\nimport twitter from '../../assets/icons/index-twitter.svg'\nimport telegram from '../../assets/icons/index-telegram.svg'\n\nimport video from '../../assets/video/index.mp4'\n\nconst CertifiedSalesSteps = [{\n    title: 'Certified sale application',\n    desc: 'Submit project information to the voting board to apply for a certified sale'\n}, {\n    title: 'Community scanning and voting',\n    desc: 'The community reviews your project for quality and approves the start of the best token sale'\n}, {\n    title: 'Multisig governance configuration',\n    desc: 'Execution upon multisignature by parties involved'\n}, {\n    title: 'Token sale activation',\n    desc: 'Your certified token sale goes live for verified user'\n}]\n\nexport default function Index() {\n    const [curCertifiedSalesSteps, setCurCertifiedSalesSteps] = useState(0)\n    const [stepIsHover, setStepIsHover] = useState(false)\n\n    return (\n        <HomeStyled>\n            <div className=\"page_wrapper page_one\">\n                <div className=\"main\">\n                    <div className=\"left\">\n                        <video\n                            width='525px'\n                            height='525px'\n                            muted\n                            src={video}\n                            autoPlay='autoPlay'\n                            loop='loop'\n                        />\n                    </div>\n\n                    <div className=\"right\">\n                        <h1>Certified crypto auction curated <span>by the community</span></h1>\n                        <p>Bounce Certified empowers the community to curate a select group of high-quality projects to conduct their public sale on the same robust and secure platform behind Bounce Finance.</p>\n                        <p><span>KYC checks</span> / <span>White list sales</span> / <span>Decentralized auction managed by community DAO</span></p>\n\n                        <button>Apply for certified sale</button>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"page_other\">\n                <div className=\"block\">\n                    <h3>Features</h3>\n                    <ul className='Features_list'>\n                        <li>\n                            <div className='bg'></div>\n                            <h4>\n                                <img src={bule_check} alt=\"\" />\n                                KYC checks\n                            </h4>\n                            <p>Know-Your-Customer tools identity verification</p>\n                        </li>\n\n                        <li>\n                            <div className='bg'></div>\n                            <h4>\n                                <img src={bule_star} alt=\"\" />\n                                White list sales\n                            </h4>\n                            <p>Exclusive customer sign-up for token auction</p>\n                        </li>\n\n                        <li>\n                            <div className='bg'></div>\n                            <h4>\n                                <img src={bule_people} alt=\"\" />\n                                Decentralized auction\n                            </h4>\n                            <p>Auction managed by community DAO</p>\n                        </li>\n                    </ul>\n                </div>\n\n\n                <div className=\"block Certified\">\n                    <h3>Certified Sales Steps</h3>\n                    <ul className=\"step_list\" >\n                        {CertifiedSalesSteps.map((item, index) => {\n                            return <li\n                                key={index}\n                                className={curCertifiedSalesSteps === index && !stepIsHover ? 'active' : ''}\n                                onMouseEnter={() => {\n                                    setCurCertifiedSalesSteps(index)\n                                }}\n                            >\n                                <h4>\n                                    <i>{index + 1}</i>\n                                    {item.title}\n                                </h4>\n                                <p>{item.desc}</p>\n                            </li>\n                        })}\n                    </ul>\n                </div>\n\n                <div className=\"utility\">\n                    <h3>Token Utility</h3>\n                    <ul className='utility_list'>\n                        <li>\n                            <div>\n                                <i>1</i>\n                                Application fee\n                            </div>\n\n                            <div>\n                                <i>3</i>\n                                BOT token holder exclusive sales\n                            </div>\n                        </li>\n                        <li>\n                            <div>\n                                <i>2</i>\n                                Project voting power\n                            </div>\n\n                            <div>\n                                <i>4</i>\n                                Transaction fee buy back and burn\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n\n\n            </div>\n\n            <div className=\"started\">\n                <div className=\"bg\"></div>\n                <div className=\"main\">\n                    <h3>Get started to apply for certified sale with Bounce</h3>\n                    <button>Get Started</button>\n                </div>\n            </div>\n\n            <div className=\"backed\">\n                <div className=\"main\">\n                    <h5>Backed by</h5>\n                    <ul>\n                        <li>\n                            <img src={back1} alt=\"\" />\n                        </li>\n                        <li>\n                            <img src={back2} alt=\"\" />\n                        </li>\n                        <li>\n                            <img src={back3} alt=\"\" />\n                        </li>\n                        <li>\n                            <img src={back4} alt=\"\" />\n                        </li>\n                        <li>\n                            <img src={back5} alt=\"\" />\n                        </li>\n                        <li>\n                            <img src={back6} alt=\"\" />\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <div className=\"footer\">\n                <div className=\"main\">\n                    <img src={logo_white} alt=\"\" />\n                    <div className=\"link\">\n                        <ul>\n                            <li>\n                                <a href=\"https://bouncefinance.medium.com/\">\n                                    <img src={medium} alt=\"\" />\n                                </a>\n                            </li>\n\n                            <li>\n                                <a href=\"https://twitter.com/bounce_finance?s=21\">\n                                    <img src={twitter} alt=\"\" />\n                                </a>\n                            </li>\n\n                            <li>\n                                <a href=\"https://t.me/bounce_finance\">\n                                    <img src={telegram} alt=\"\" />\n                                </a>\n                            </li>\n                        </ul>\n\n                        <p>Forum</p>\n                    </div>\n\n                </div>\n            </div>\n        </HomeStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Detail/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/index.jsx",["399"],"import React, { useContext, useState, useEffect } from 'react'\nimport { HeaderTabStyled } from './styled'\nimport { useWeb3React } from \"@web3-react/core\";\nimport logo_black from '../../../assets/logo/logo-black.svg'\nimport { headerMenu } from './config'\nimport { useHistory } from 'react-router-dom'\nimport PersonalModal from './PersonalModal'\nimport { myContext } from '../../../redux'\nimport { Button } from '../Table'\nimport axios from 'axios'\nimport HOST_API from '../../../config/request_api'\nimport {useActiveWeb3React} from \"../../../web3\";\n\n\nexport default function Index() {\n    const { state, dispatch } = useContext(myContext)\n    const history = useHistory()\n    const [curTab, setCurTab] = useState(history.location.pathname)\n    const { active, account } = useActiveWeb3React()\n    const [userName, setUserName] = useState('undefined')\n\n    useEffect(() => {\n        if (!account) return\n        checkKYC(account)\n    }, [account])\n\n    const renderConnectBtn = () => {\n\n        return active ? <div\n            className=\"personal ignore\"\n            onClick={() => {\n                dispatch({\n                    type: \"SHOW_PER\",\n                    value: !state.isShowPersonal\n                })\n            }}\n        ></div> : <Button\n                type='black'\n                width='130px'\n                height='36px'\n                value='Connect Wallet'\n                style={{ fontSize: 14, marginLeft: '32px' }}\n                onClick={() => {\n                    if (active === undefined) return\n                    dispatch({\n                        type: 'CONNECT_WALLET',\n                        value: true\n                    })\n                }}\n            />\n    }\n\n    const checkKYC = (account) => {\n        const params = {\n            \"accountaddress\": account\n        }\n\n        axios.post(HOST_API.queryKycByAccount, params).then(res => {\n            // console.log(res)\n            if (res.status === 200 && res.data.code === 1) {\n                const { status, username } = res.data.data\n                window.localStorage.setItem('KYC_STATUS', status)\n                setUserName(username)\n            } else {\n                window.localStorage.setItem('KYC_STATUS', 0)\n            }\n        }).catch(err => {\n            console.log(err)\n            window.localStorage.setItem('KYC_STATUS', 0)\n        })\n    }\n\n    return (\n        <HeaderTabStyled>\n            <div className=\"container\">\n                <div className=\"left\">\n                    <img src={logo_black} alt=\"bounce logo\" />\n                </div>\n                <div className=\"right\">\n                    <ul>\n                        {headerMenu.map((item, index) => {\n                            return <li\n                                key={index}\n                                className={curTab === item.route ? 'active' : ''}\n                                onClick={() => {\n                                    if (item.route) {\n                                        history.push(item.route)\n                                    } else if (item.isConfirm) {\n                                        dispatch({\n                                            type: 'MODAL',\n                                            value: {\n                                                name: 'CONFIRM',\n                                                title: 'Bounce Decentralized',\n                                                deputy: 'You will be directed to Bounce Decentralized platform',\n                                                cancel: {\n                                                    text: 'Not Now'\n                                                },\n                                                confirm: {\n                                                    text: 'Confirm',\n                                                    callback: () => {\n                                                        window.open(item.link)\n                                                    }\n                                                }\n                                            }\n                                        })\n                                    }\n                                    setCurTab(item.route)\n                                }}>\n                                <h5>{item.name}</h5>\n                            </li>\n                        })}\n                    </ul>\n                    {renderConnectBtn()}\n                </div>\n                <PersonalModal show={state.isShowPersonal} userName={userName}/>\n            </div>\n        </HeaderTabStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/ApplyModal.js",["400","401"],"import Modal, {ModalContent, ModalTitle} from \"../../components/common/Modal\";\nimport styled from 'styled-components'\nimport Lottie from \"react-lottie\";\nimport icon_success from \"../../assets/icons/icon-success.svg\";\nimport icon_error from \"../../assets/icons/icon-error.svg\";\nimport React from \"react\";\nimport bounce_loading from \"../../assets/bounce-loading.json\";\nimport {Button} from \"../../components/common/Button\";\n\nexport const FormStatus = styled.div`\n  width: 100%;\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: bounce_loading,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\n\nexport const approveStatus = {status: 1, title: 'Bounce requests wallet approval', content: 'Please manually interact with your wallet'}\nexport const confirmStatus = {status: 2, title: 'Bounce requests wallet interaction', content: 'Please open your wallet and confirm in the transaction activity to proceed your order'}\nexport const pendingStatus = {status: 3, title: 'Bounce waiting for transaction settlement', content: 'Bounce is engaging with blockchain transaction, please wait patiently for on-chain transaction settlement'}\nexport const successStatus = {status: 4, title: 'Auction successfully published', content: 'Congratulations! Your auction is live and is now listed in designated area. Please find more information about the next steps in the pool page'}\nexport const predictionSuccessStatus = {status: 4, title: 'Prediction successfully published', content: 'Congratulations! Your predcition is live and is now listed in designated area. Please find more information about the next steps in the pool page'}\nexport const errorStatus = {status: -1, title: 'Transaction failed on Bounce', content: 'Oops! Your transaction is failed for on-chain approval and settlement. Please initiate another transaction'}\nexport const cancelStatus = {status: -2, title: 'Transaction canceled on Bounce', content: 'Sorry! Your transaction is canceled. Please try again.'}\nexport const initStatus = {status: 0, title: '', content: ''}\n\n\nexport const ApplyModal = ({modalStatus, onDismiss, onOK}) =>{\n\n    const {status, title, content}  = modalStatus\n\n    return (\n        <Modal isOpen={status !== 0} onDismiss={() => {\n            onDismiss()\n        }}>\n            <ModalTitle style={{textAlign: 'center'}}>{title}</ModalTitle>\n\n            {(status === 1 || status === 2 || status === 3) &&\n            <Lottie width={200} height={200} options={defaultOptions}/>}\n\n            {(status === 4 ) &&\n            <FormStatus ><img src={icon_success}/></FormStatus>}\n\n            {(status === -1 || status === -2) &&\n            <FormStatus><img src={icon_error}/></FormStatus>}\n\n            <ModalContent style={{width: 300, textAlign: 'center'}}>{content}</ModalContent>\n            {(status === 1 || status === 2 || status === 3) && <Button width={'320px'} black>Awaiting...</Button>}\n            {status === 4 && <Button width={'320px'} black onClick={()=>{\n                onOK()\n            }}>Close</Button>}\n            {status === -1 && <Button onClick={()=>{onDismiss()}} width={'320px'} black>Try again</Button>}\n        </Modal>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/web3/address.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Button.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/index.jsx",["402"],"import React, { useState, useEffect, useContext } from 'react'\nimport { KycStyled } from './styled'\nimport image_kyc from '../../assets/images/kyc.svg'\nimport Step1 from './Step1'\nimport Step2 from './Step2'\nimport Step3 from './Step3'\nimport { useWeb3React } from '@web3-react/core'\nimport { myContext } from '../../redux'\nimport Crumbs from '../components/Exhibition/Crumbs'\n\nexport default function Index() {\n    const { active } = useWeb3React()\n    const { dispatch } = useContext(myContext)\n    const [curStep, setCurStep] = useState(1)\n    const [ReqData, setReqData] = useState({\n        country: 'china'\n    })\n\n    useEffect(() => {\n        if (!ReqData || active) {\n            return\n        }\n\n        dispatch({\n            type: 'CONNECT_WALLET',\n            value: true\n        })\n\n    }, [ReqData])\n\n    return (\n        <KycStyled>\n            <Crumbs list={[{\n                name: 'KYC'\n            }, {\n                name: 'Basic Info',\n                active: true\n            }]} />\n            <div className=\"container\">\n                <div className=\"top\">\n                    <h3>KYC</h3>\n                    <p>{curStep} / 3</p>\n                </div>\n                <div className=\"bottom\">\n                    <div className=\"left\">\n                        <img src={image_kyc} alt=\"image_kyc\" />\n                    </div>\n                    <div className=\"right\">\n                        {curStep === 1 && <Step1 curStep={curStep} setCurStep={setCurStep} ReqData={ReqData} setReqData={setReqData} />}\n                        {curStep === 2 && <Step2 curStep={curStep} setCurStep={setCurStep} ReqData={ReqData} setReqData={setReqData} />}\n                        {curStep === 3 && <Step3 curStep={curStep} setCurStep={setCurStep} ReqData={ReqData} setReqData={setReqData} />}\n                    </div>\n                </div>\n            </div>\n        </KycStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/LearnMore/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ProjectList/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/PersonalInfo/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Home/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/web3/index.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Detail/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/config.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/config/request_api.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Modal.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Card.jsx",["403","404"],"import React, {useEffect, useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport {CardStyled} from './styled'\nimport {TextInput} from '../components/Table'\nimport {Button} from '../components/Table'\nimport CardHeader from './CardHeader'\nimport Progress from './Progress'\nimport {Passage} from '../components/Exhibition'\nimport {getContract, useActiveWeb3React} from \"../../web3\";\nimport {\n  TxModal,\n  initStatus,\n  errorStatus,\n  successStatus,\n  confirmStatus,\n  pendingStatus,\n  cancelStatus\n} from \"../../components/common/TXModal\";\nimport {BOT, BOUNCE_PRO_VOTING} from \"../../web3/address\";\nimport bounceERC20 from '../../web3/abi/bounceERC20.json'\nimport BounceProVoting from '../../web3/abi/BounceProVoting.json'\nimport {numToWei, weiToNum} from \"../../utils/numberTransform\";\nimport {ModalLayout} from \"../components/Modal/styled\";\nimport Support from \"../components/Modal/Support\";\nimport BigNumber from \"bignumber.js\";\nimport {getPoolLeftTime} from \"../../utils/time\";\nimport {useTokenBalance} from \"../../hooks/useBalance\";\nimport {useStatus} from \"./hooks\";\n\n\nexport default function Card({status, poolId = 0, progress, claimFun, isVote, pool}) {\n\n  const [isSupport, setIsSupport] = useState(false)\n  const [supporting, setSupporting] = useState(false)\n  const {balance} = useTokenBalance()\n  const [bidStatus, setBidStatus] = useState(initStatus)\n  // const { dispatch } = useContext(myContext)\n  const history = useHistory()\n  const {account, library, chainId, active} = useActiveWeb3React()\n  const [value, setValue] = useState()\n\n  const {myVotes, myVotesClaimed} = useStatus(pool.id)\n  console.log('myVotesClaimed--->', myVotesClaimed)\n  const [left, setLeft] = useState({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0\n  })\n\n  let timer\n  useEffect(() => {\n    console.log('pool left', isVote, pool.status, pool.openAt)\n    if(pool){\n      timer = setInterval(() => {\n        const left = getPoolLeftTime(!isVote && status === 'Upcoming'? pool.openAt :pool.closeAt )\n        setLeft(left)\n      }, 1000)\n      return () => {\n        clearInterval(timer)\n      }\n    }\n  }, [pool])\n\n\n  const onVote = async () => {\n    setSupporting(false)\n    const tokenContract = getContract(library, bounceERC20.abi, BOT(chainId))\n    const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n    const weiAmount = numToWei(value);\n\n    setBidStatus(confirmStatus);\n    try {\n      await tokenContract.methods.approve(\n          BOUNCE_PRO_VOTING(chainId),\n          weiAmount,\n      )\n          .send({from: account});\n      bounceContract.methods.vote(pool.id, weiAmount)\n          .send({from: account})\n          .on('transactionHash', hash => {\n            setBidStatus(pendingStatus)\n          })\n          .on('receipt', (_, receipt) => {\n            console.log('bid fixed swap receipt:', receipt)\n            setBidStatus(successStatus)\n          })\n          .on('error', (err, receipt) => {\n            setBidStatus(errorStatus)\n          })\n    } catch (e) {\n      console.log('bid---->', e)\n      if (e.code === 4001) {\n        setBidStatus(cancelStatus)\n      } else {\n        setBidStatus(errorStatus)\n      }\n    }\n\n  }\n\n  const onCliam = async () => {\n    setSupporting(false)\n    const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n    setBidStatus(confirmStatus);\n    try {\n      bounceContract.methods.claim(pool.id)\n          .send({from: account})\n          .on('transactionHash', hash => {\n            setBidStatus(pendingStatus)\n          })\n          .on('receipt', (_, receipt) => {\n            console.log('bid fixed swap receipt:', receipt)\n            setBidStatus(successStatus)\n          })\n          .on('error', (err, receipt) => {\n            setBidStatus(errorStatus)\n          })\n    } catch (e) {\n      console.log('bid---->', e)\n      if (e.code === 4001) {\n        setBidStatus(cancelStatus)\n      } else {\n        setBidStatus(errorStatus)\n      }\n    }\n\n  }\n\n\n  const renderStatus = (status) => {\n    switch (status) {\n      case 'Active':\n        return <span className='Active'>Active Sales</span>\n\n      case 'Upcoming':\n        return <span className='Upcoming'>Upcoming Sales</span>\n\n      case 'Past':\n        return <span className='Past'>Past Sales</span>\n      default:\n        return <></>\n    }\n  }\n\n  const renderButton = (status) => {\n    switch (status) {\n      case 'Active':\n        return <>\n          {isVote && (\n              <>\n                <Button type='white' value='Learn More' width='168px' onClick={() => {\n                  history.push(`/learn-more/${poolId}`)\n                }}/>\n                <Button type='black' value='Support' width='168px' onClick={() => {\n                  setIsSupport(true)\n                }}/>\n              </>\n          )}\n\n          {!isVote && (\n              <>\n                <Button type='white' value='Learn More' width='168px' onClick={() => {\n                  history.push(`/learn-more/${poolId}`)\n                }}/>\n                <Button type='black' value='Join Auction' width='168px' onClick={() => {\n                  setIsSupport(true)\n                }}/>\n              </>\n          )}\n\n        </>\n\n      case 'Upcoming':\n        return <>\n          <Button type='white' value='Learn More' width='168px' onClick={() => {\n            history.push(`/learn-more/${poolId}`)\n          }}/>\n        </>\n\n      case 'Past':\n        return <>\n          <Button type='black' value='Visit Project' width='168px' onClick={() => {\n            history.push(`/certified-sales/${poolId}`)\n          }}/>\n        </>\n\n      case 'proList-Active':\n        return <>\n          <Button type='white' value='Learn More' width='168px' onClick={() => {\n            history.push(`/learn-more/${poolId}`)\n          }}/>\n          <Button type='black' value='Support' width='168px' onClick={() => {\n            setIsSupport(true)\n          }}/>\n        </>\n\n      case 'Success':\n      case 'Failed':\n        return <>\n          <Button type='white' value='Visit Project' width='168px' onClick={() => {\n            // history.push(`/learn-more/${poolId}`)\n          }}/>\n          {!myVotesClaimed && <Button type='black' value='Claim support tokens back' width='240px' onClick={() => {\n            // history.push(`/certified-sales/${poolId}`)\n            onCliam()\n          }}/>}\n        </>\n\n      default:\n        return <></>\n    }\n  }\n\n  return (\n      <CardStyled>\n        <div className=\"status\">\n          {renderStatus(pool.status)}\n          {/* <span>Active Sales</span> */}\n        </div>\n        <div className=\"main\">\n          <CardHeader title={pool && pool.proInfo && pool.proInfo.proname} socialLink={[\n            {name: 'facebook', link: '#'},\n            {name: 'telegram', link: '#'},\n            {name: 'twitter', link: '#'},\n          ]}/>\n\n          <div className=\"middle\">\n            <div className=\"left\">\n              {isVote && myVotes && new BigNumber(myVotes).isGreaterThan('0') && <span className='vote'>You Voted</span>}\n              <Passage\n                  title='Project details'\n                  desc='Active Project Name is a blockchain project.\n                            There should be some description about this active project.\n                            4 line maximum for this section.'/>\n\n              <a href=\"http://activeprojectname.com\">activeprojectname.com</a>\n\n              <Passage\n                  title='Time Left'\n                  desc={`${left.days}d : ${left.hours}h : ${left.minutes}m : ${left.seconds}s`}/>\n\n              {progress && <Progress\n                  width='480px'\n                  status={pool.status}\n                  plan={new BigNumber(pool.totalVotes).dividedBy('200000000000000000000').dividedBy('100')}\n                  value={`${weiToNum(pool.totalVotes)} BOT`}\n                  total={progress.total}\n              />}\n\n              {isSupport && status !== 'proList-Close' && <div className='support'>\n                <TextInput onValChange={(value) => {\n                  console.log('value', value)\n                  setValue(value)\n                }} placeholder={`Enter your vote amount ${weiToNum(balance)} BOT`} width='288px'/>\n                <Button disabled={new BigNumber(numToWei(value)).isGreaterThan(balance)} type='black'\n                        value={new BigNumber(numToWei(value)).isGreaterThan(balance) ? `Insufficient BOT` : 'Support'}\n                        width='180px' onClick={() => {\n                  setSupporting(true)\n                }}/>\n              </div>}\n            </div>\n\n            <div className=\"right\">\n              <Passage\n                  title='Auction Type'\n                  desc='Fixed-swap auction'/>\n\n              <Passage\n                  title='Participant'\n                  desc='Public'/>\n\n              <Passage\n                  title='Requirement'\n                  desc='KYC'/>\n            </div>\n          </div>\n\n          {!isSupport && <div className=\"bottom\">\n            {renderButton(pool.status)}\n          </div>}\n        </div>\n\n        <TxModal modalStatus={bidStatus} onDismiss={() => {\n          setBidStatus(initStatus)\n        }}/>\n\n        {supporting && (\n            <ModalLayout className='layout' onClick={(e) => {\n              e.stopPropagation()\n            }}>\n              <Support onConfirm={onVote} cancel={() => setSupporting(false)} amount={value}/>\n            </ModalLayout>\n        )}\n      </CardStyled>\n  )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/Support.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/hooks.js",["405","406","407","408","409","410"],"import axios from 'axios';\nimport API from '../../config/request_api'\nimport { useEffect, useState } from 'react';\nimport { getContract, useActiveWeb3React } from \"../../web3\";\nimport BounceProVoting from \"../../web3/abi/BounceProVoting.json\";\nimport BouncePro from \"../../web3/abi/BouncePro.json\";\nimport { BOUNCE_PRO_VOTING, BOUNCE_PRO } from \"../../web3/address\";\n\nconst getProjectInfo = async (proId) => {\n  const params = {\n    id: parseInt(proId)\n  }\n\n  try {\n    const res = await axios.post(API.queryProInfoById, params)\n    if (res.status === 200) {\n      // console.log(res.data)\n      return {\n        code: 1,\n        ...res.data.data\n      }\n    }\n  } catch (error) {\n    return {\n      list: {\n        code: 0,\n        msg: `projectId:${proId}. The request is in error.`,\n        err: error\n      }\n    }\n  }\n}\n\nexport const useVoteList = () => {\n  const [list, setList] = useState()\n  const {active, library, chainId} = useActiveWeb3React();\n\n  const fetchList = () => {\n    let pools = []\n    try {\n      const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n      bounceContract.methods.getPoolCount().call().then(res => {\n        for (let i = 0; i < res; i++) {\n          bounceContract.methods.pools(i).call().then(async poolRes => {\n            const pool = poolRes\n            pool.id = i\n            pool.totalVotes = await bounceContract.methods.totalVotes(i).call()\n            poolRes.votePassed = await bounceContract.methods.votePassed(i).call()\n\n            if (poolRes.votePassed) {\n              pool.status = 'Success'\n            } else {\n              const closeAt = new Date(poolRes.closeAt * 1000)\n              const closed = closeAt - new Date()\n              pool.status = closed > 0 ? 'Active' : 'Failed'\n            }\n            // console.log('pool', pool)\n            pool.proInfo = await getProjectInfo(pool.projectId)\n            pools = pools.concat(pool)\n            setList(pools)\n          })\n        }\n      })\n    } catch (e) {\n      console.log('fetchList error', e)\n    }\n  }\n\n  useEffect(() => {\n    if (active) {\n      fetchList()\n    }\n  }, [active])\n\n  return { list }\n}\n\nexport const usePoolList = () => {\n  const [list, setList] = useState()\n  const {active, library, chainId} = useActiveWeb3React();\n\n  const fetchList = () => {\n    let pools = []\n    try {\n      const bounceContract = getContract(library, BouncePro.abi, BOUNCE_PRO(chainId))\n      bounceContract.methods.getPoolCount().call().then(res => {\n        for (let i = 0; i < res; i++) {\n          bounceContract.methods.pools(i).call().then(async poolRes => {\n            console.log('pool--->', poolRes)\n            const pool = poolRes\n            pool.id = i\n            const isOpen = new Date() - poolRes.openAt*1000 > 0\n            if (!isOpen) {\n              pool.status = 'Upcoming'\n            } else {\n              const closeAt = new Date(poolRes.closeAt * 1000)\n              const closed = closeAt - new Date()\n              pool.status = closed > 0 ? 'Active' : 'Failed'\n            }\n            // console.log('pool', pool)\n            pool.proInfo = await getProjectInfo(pool.projectId)\n            console.log('pool',pool)\n            pools = pools.concat(pool)\n            setList(pools)\n          })\n        }\n      })\n    } catch (e) {\n      console.log('fetchList error', e)\n    }\n  }\n\n  useEffect(() => {\n    if (active) {\n      fetchList()\n    }\n  }, [active])\n\n  return { list }\n}\n\nexport const useStatus = (id) => {\n  const {active, library, chainId, account} = useActiveWeb3React();\n  const [myVotes, setMyVotes] = useState()\n  const [myVotesClaimed, setMyVotesClaimed] = useState(true)\n\n  const fetchStatus = () => {\n    try {\n      const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n      bounceContract.methods.myVotes(account, id).call().then(res =>{\n        console.log('myVotes', res)\n        setMyVotes(res)\n      })\n      bounceContract.methods.myVotesClaimed(account, id).call().then(res =>{\n        console.log('myVotesClaimed', myVotesClaimed)\n        setMyVotesClaimed(res)\n      })\n    } catch (e) {\n      console.log('fetch vote status error', e)\n    }\n  }\n\n  useEffect(() => {\n    if (active) {\n      fetchStatus()\n    }\n  }, [active])\n\n  return { myVotes, myVotesClaimed }\n}\n\n\n\nexport const useVoteListByPoolId = (poolId) => {\n  const [poolInfo, setPoolInfo] = useState({})\n  const { active, library, chainId } = useActiveWeb3React();\n\n  const fetchList = () => {\n    try {\n      const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n      bounceContract.methods.pools(poolId).call().then(async poolRes => {\n        const pool = poolRes\n        pool.id = poolId\n        pool.totalVotes = await bounceContract.methods.totalVotes(poolId).call()\n        poolRes.votePassed = await bounceContract.methods.votePassed(poolId).call()\n\n        if (poolRes.votePassed) {\n          pool.status = 'Success'\n        } else {\n          const closeAt = new Date(poolRes.closeAt * 1000)\n          const closed = closeAt - new Date()\n          pool.status = closed > 0 ? 'Active' : 'Failed'\n        }\n        // console.log('pool', pool)\n        pool.proInfo = await getProjectInfo(pool.projectId)\n        setPoolInfo(pool)\n      })\n    } catch (e) {\n      console.log('fetchList error', e)\n    }\n  }\n\n  useEffect(() => {\n    if (active) {\n      fetchList()\n    }\n  }, [active])\n\n  return poolInfo\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ProjectList/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/PersonalModal.jsx",["411"],"import React, {useContext, useEffect} from 'react'\nimport { PerModalStyled } from './styled'\nimport { useHistory } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport copy_icon from '../../../assets/icons/copy-black.svg'\nimport bule_check from '../../../assets/images/bule-check.svg'\nimport {mainContext} from \"../../../reducer\";\n\nexport default function PersonalModal({ show = false, userName }) {\n    const history = useHistory()\n    const { account } = useWeb3React()\n    const KYC_STATUS = window.localStorage.getItem('KYC_STATUS') || 0\n    const { state } = useContext(mainContext);\n\n    const { authToken } = state;\n    useEffect(() => {\n        // console.log(KYC_STATUS)\n    }, [account])\n\n    const handelClickLi = (type) => {\n        if (!type) return\n        switch (type) {\n            case 'kyc':\n                return history.push('/kyc')\n            case 'PersonalInfo':\n                return history.push('/PersonalInfo')\n            case 'applySale':\n                return history.push('/applySale')\n            default:\n                return\n        }\n    }\n\n\n    return (\n        show && <PerModalStyled>\n            <div className=\"account\">\n                <div className='account_name'>\n                    <h5>{userName}</h5>\n                    {KYC_STATUS === '1' && <img src={bule_check} alt=\"\" />}\n                </div>\n                <div className=\"account_address\">\n                    <p>{account || '0x00'} </p>\n                    <CopyToClipboard\n                        text={account}\n                        onCopy={() => { }}>\n                        <img className='ignore' src={copy_icon} alt=\"\" />\n                    </CopyToClipboard>\n                </div>\n            </div>\n            <ul>\n                {KYC_STATUS !== '1' && <li\n                    onClick={() => {\n                        handelClickLi('kyc')\n                    }}\n                >\n                    <i className='kyc'></i>\n                    <span>KYC</span>\n                </li>}\n\n                <li onClick={() => {\n                    handelClickLi('PersonalInfo')\n                }}>\n                    <i className='pi'></i>\n                    <span>Personal Info</span>\n                </li>\n\n                <li\n                    onClick={() => { handelClickLi('applySale') }}\n                >\n                    <i className='acs'></i>\n                    <span>Apply Certified Sale</span>\n                </li>\n            </ul>\n        </PerModalStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/LearnMore/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Layout.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Progress.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/CardHeader.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step6.jsx",["412","413"],"import React, { useEffect, useState } from 'react'\nimport { Step6Styled } from './styled'\nimport { TextInput, TextAreaInput, Button, Upload } from '../components/Table'\n\nconst requireList = ['contactemail', 'additionalinfo', 'prologourl']\n\nexport default function Step6 ({ setCurStep, setTitle, step6Data, setStep6Data, handelSubmit }) {\n    const [isNext, setIsNext] = useState(false)\n\n    useEffect(() => {\n        setTitle({\n            title: 'Auction',\n            crumbsList: [{\n                name: 'Apply Certified Sales'\n            }, {\n                name: 'General information',\n                onClick: () => { return setCurStep(1) }\n            }, {\n                name: 'Details',\n                onClick: () => { return setCurStep(2) }\n            }, {\n                name: 'Team',\n                onClick: () => { return setCurStep(3) }\n            }, {\n                name: 'Token metrics',\n                onClick: () => { return setCurStep(4) }\n            }, {\n                name: 'Auction',\n                onClick: () => { return setCurStep(5) }\n            }, {\n                name: 'Additional information',\n                active: true\n            }]\n        })\n    }, [])\n\n    useEffect(() => {\n        const arr = requireList.filter(item => {\n            return !step6Data[item]\n        })\n        if (arr.length === 0) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [step6Data])\n\n    const handelInputChange = (key, data) => {\n        const obj = { ...step6Data }\n        if (data.isRequire && !data.isError) {\n            obj[key] = data.value\n        } else {\n            obj[key] = null\n        }\n        setStep6Data(obj)\n    }\n\n    return (\n        <Step6Styled>\n            <TextInput\n                label='Contact email'\n                placeholder='Enter your Contact email'\n                width='600px'\n                defaultVal={step6Data.contactemail}\n                isRequire={true}\n                REG_rule={{\n                    reg: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n                    msg: 'Please enter a valid email address'\n                }}\n                onValueChange={(val) => {\n                    handelInputChange('contactemail', val)\n                }}\n            />\n\n            <TextInput\n                label='Additional information'\n                placeholder='Enter amount of token'\n                width='600px'\n                defaultVal={step6Data.additionalinfo}\n                isRequire={true}\n                maxLength={200}\n                onValueChange={(val) => {\n                    handelInputChange('additionalinfo', val)\n                }}\n            />\n\n            <Upload\n                name='Project logo'\n                width='600px'\n                desc='Supports JPG, PNG, JPEG2000, GIF, no more than 100MB, 262*262 Reccomended'\n                successCallBack={(path) => {\n                    handelInputChange('prologourl', {\n                        isRequire: true,\n                        isError: false,\n                        value: path\n                    })\n                }} />\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\n                    setCurStep(5)\n                }} />\n                <Button type='black' value='Submit' width='164px' disabled={!isNext} onClick={() => {\n                    handelSubmit && handelSubmit()\n                }} />\n            </div>\n        </Step6Styled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step4.jsx",["414","415"],"import React, { useEffect, useState } from 'react'\nimport { Step4Styled } from './styled'\nimport { TextInput, TextAreaInput, Button } from '../components/Table'\n\nconst requireList = ['totalsupply', 'circulatingsupply', 'tokenticketer', 'tokencontractaddress', 'tokendistribution', 'tokenlookupschedule']\n\nexport default function Step4 ({ setCurStep, setTitle, step4Data, setStep4Data }) {\n    const [isNext, setIsNext] = useState(false)\n\n    useEffect(() => {\n        setTitle({\n            title: 'Token metrics',\n            crumbsList: [{\n                name: 'Apply Certified Sales'\n            }, {\n                name: 'General information',\n                onClick: () => { return setCurStep(1) }\n            }, {\n                name: 'Details',\n                onClick: () => { return setCurStep(2) }\n            }, {\n                name: 'Team',\n                onClick: () => { return setCurStep(3) }\n            }, {\n                name: 'Token metrics',\n                active: true\n            }]\n        })\n    }, [])\n\n    useEffect(() => {\n        const arr = requireList.filter(item => {\n            return !step4Data[item]\n        })\n        if (arr.length === 0) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [step4Data])\n\n    const handelInputChange = (key, data) => {\n        const obj = { ...step4Data }\n        if (data.isRequire && !data.isError) {\n            obj[key] = data.value\n        } else {\n            obj[key] = null\n        }\n        setStep4Data(obj)\n    }\n\n    return (\n        <Step4Styled>\n            <TextInput\n                label='Total supply'\n                placeholder='Enter your Total supply'\n                width='600px'\n                defaultVal={step4Data.totalsupply}\n                isRequire={true}\n                isNumber={true}\n                REG_rule={{\n                    reg: /^[1-9]\\d*|0$/,\n                    mag: 'Please enter a positive integer'\n                }}\n                onValueChange={(val) => {\n                    handelInputChange('totalsupply', val)\n                }}\n            />\n\n            <TextInput\n                label='Initial circulating supply'\n                placeholder='Enter initial circulating supply'\n                width='600px'\n                defaultVal={step4Data.circulatingsupply}\n                isRequire={true}\n                isNumber={true}\n                REG_rule={{\n                    reg: /^[1-9]\\d*|0$/,\n                    mag: 'Please enter a positive integer'\n                }}\n                onValueChange={(val) => {\n                    handelInputChange('circulatingsupply', val)\n                }}\n            />\n\n            <TextInput\n                label='Token ticketer'\n                placeholder='Enter token ticketer'\n                width='600px'\n                defaultVal={step4Data.tokenticketer}\n                isRequire={true}\n                upperCase={true}\n                onValueChange={(val) => {\n                    handelInputChange('tokenticketer', val)\n                }}\n            />\n\n            <TextInput\n                label='Token contract address'\n                placeholder='Paste token contract address'\n                width='600px'\n                maxLength={42}\n                defaultVal={step4Data.tokencontractaddress}\n                isRequire={true}\n                REG_rule={{\n                    reg: /[0x|0X][\\S]{41}/,\n                    msg: 'Please enter a positive integer Please enter a valid contract address'\n                }}\n                onValueChange={(val) => {\n                    handelInputChange('tokencontractaddress', val)\n                }}\n            />\n\n\n            <TextInput\n                label='Token distribution'\n                placeholder='describe your token distribution max 300 character'\n                width='600px'\n                minHeight='80px'\n                maxLength={300}\n                defaultVal={step4Data.tokendistribution}\n                isRequire={true}\n                onValueChange={(val) => {\n                    handelInputChange('tokendistribution', val)\n                }}\n            />\n\n            <TextInput\n                label='Token lockup schedule'\n                placeholder='describe your token lockup schedule max 300 character'\n                width='600px'\n                minHeight='80px'\n                maxLength={300}\n                defaultVal={step4Data.tokenlookupschedule}\n                isRequire={true}\n                onValueChange={(val) => {\n                    handelInputChange('tokenlookupschedule', val)\n                }}\n            />\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\n                    setCurStep(3)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(5)\n                    console.log(step4Data)\n                }} />\n            </div>\n        </Step4Styled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step3.jsx",["416"],"import React, { useEffect, useState } from 'react'\nimport { Step3Styled } from './styled'\nimport { TextInput, Button } from '../components/Table'\n\nconst requireList = ['teambio']\n\nexport default function Step3 ({ setCurStep, setTitle, step3Data, setStep3Data }) {\n    const [isNext, setIsNext] = useState(false)\n\n    useEffect(() => {\n        setTitle({\n            title: 'Team',\n            crumbsList: [{\n                name: 'Apply Certified Sales'\n            }, {\n                name: 'General information',\n                onClick: () => { return setCurStep(1) }\n            }, {\n                name: 'Details',\n                onClick: () => { return setCurStep(2) }\n            }, {\n                name: 'Team',\n                active: true\n            }]\n        })\n    }, [])\n\n    useEffect(() => {\n        const arr = requireList.filter(item => {\n            return !step3Data[item]\n        })\n        if (arr.length === 0) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [step3Data])\n\n    const handelInputChange = (key, data) => {\n        const obj = { ...step3Data }\n        if (data.isRequire && !data.isError) {\n            obj[key] = data.value\n        } else {\n            obj[key] = null\n        }\n        setStep3Data(obj)\n    }\n\n    return (\n        <Step3Styled>\n            <TextInput\n                label='Team'\n                placeholder='Enter short bio about your team'\n                width='600px'\n                minHeight='140px'\n                marginTop='0px'\n                maxLength={500}\n                isRequire={true}\n                defaultVal={step3Data.teambio}\n                onValueChange={(val) => {\n                    handelInputChange('teambio', val)\n                }}\n            />\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\n                    setCurStep(2)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(4)\n                }} />\n            </div>\n        </Step3Styled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step5.jsx",["417"],"import React, { useEffect, useState } from 'react'\nimport { Step5Styled } from './styled'\nimport { TextInput, TimeInput, Radio, Select, Button } from '../components/Table'\n\nconst requireList = ['auctiontype', 'amountoftoken', 'pricepertoken', 'allocationperwallet', 'auctiontime', 'teamwallet', 'ifkyc', 'ifwhitelist']\n\nexport default function Step5 ({ setCurStep, setTitle, step5Data, setStep5Data }) {\n    const [isNext, setIsNext] = useState(false)\n\n    useEffect(() => {\n        setTitle({\n            title: 'Auction',\n            crumbsList: [{\n                name: 'Apply Certified Sales'\n            }, {\n                name: 'General information',\n                onClick: () => { return setCurStep(1) }\n            }, {\n                name: 'Details',\n                onClick: () => { return setCurStep(2) }\n            }, {\n                name: 'Team',\n                onClick: () => { return setCurStep(3) }\n            }, {\n                name: 'Token metrics',\n                onClick: () => { return setCurStep(4) }\n            }, {\n                name: 'Auction',\n                active: true\n            }]\n        })\n    }, [])\n\n    useEffect(() => {\n        const arr = requireList.filter(item => {\n            return step5Data[item] === null\n        })\n        if (arr.length === 0) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [step5Data])\n\n    const handelInputChange = (key, data) => {\n        const obj = { ...step5Data }\n        if (data.isRequire && !data.isError) {\n            obj[key] = data.value\n        } else {\n            obj[key] = null\n        }\n        setStep5Data(obj)\n    }\n\n    return (\n        <Step5Styled>\n\n            <Select\n                label='Auction type'\n                width='600px'\n                options={[\n                    { name: 'Fixed swap auction' },\n                    { name: 'Sealed-bid auction' },\n                    { name: 'Dutch auction' },\n                ]}\n                onChange={(val) => {\n                    handelInputChange('auctiontype', {\n                        isRequire: true,\n                        isError: false,\n                        value: val.name\n                    })\n                }}\n            />\n\n            <TextInput\n                label='Amount of tokens for auction'\n                placeholder='Enter the amount of token you want to auction'\n                width='600px'\n                defaultVal={step5Data.amountoftoken}\n                isRequire={true}\n                isNumber={true}\n                onValueChange={(val) => {\n                    handelInputChange('amountoftoken', {\n                        isRequire: true,\n                        isError: false,\n                        value: val.value\n                    })\n                }}\n            />\n\n            <TextInput\n                label='Price per token'\n                placeholder='Enter price per token'\n                width='600px'\n                defaultVal={step5Data.pricepertoken}\n                isRequire={true}\n                isNumber={true}\n                unit='USDT'\n                onValueChange={(val) => {\n                    handelInputChange('pricepertoken', val)\n                }}\n            />\n\n            <Radio\n                label='Allocation per wallet'\n                options={[\n                    { name: 'No limits' },\n                    { name: 'ETH' },\n                ]}\n                onChange={(val) => {\n                    handelInputChange('allocationperwallet', {\n                        isRequire: true,\n                        isError: false,\n                        value: val.name\n                    })\n                }}\n            />\n\n            <TimeInput\n                label='Auction time'\n                width='600px'\n                onChange={(time) => {\n                    handelInputChange('auctiontime', {\n                        isRequire: true,\n                        isError: false,\n                        value: String(time.seconds)\n                    })\n                }}\n            />\n\n\n\n            <TextInput\n                label='Team wallet to receive auction fund'\n                placeholder='Enter team wallet address to receive fund'\n                width='600px'\n                defaultVal={step5Data.teamwallet}\n                isRequire={true}\n                onValueChange={(val) => {\n                    handelInputChange('teamwallet', val)\n                }}\n            />\n\n            <div className=\"select_group\">\n                <Select\n                    label='KYC'\n                    width='294px'\n                    options={[\n                        { name: 'Yes', value: 1 },\n                        { name: 'No', value: 0 },\n                    ]}\n                    onChange={(val) => {\n                        handelInputChange('ifkyc', {\n                            isRequire: true,\n                            isError: false,\n                            value: val.value\n                        })\n                    }}\n                />\n\n                <Select\n                    label='Whitelisting'\n                    width='294px'\n                    options={[\n                        { name: 'Yes', value: 1 },\n                        { name: 'No', value: 0 },\n                    ]}\n                    onChange={(val) => {\n                        handelInputChange('ifwhitelist', {\n                            isRequire: true,\n                            isError: false,\n                            value: val.value\n                        })\n                    }}\n                />\n            </div>\n\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\n                    setCurStep(4)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(6)\n                    console.log(step5Data)\n                }} />\n            </div>\n        </Step5Styled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step2.jsx",["418"],"import React, { useEffect, useState } from 'react'\nimport { Step2Styled } from './styled'\nimport { TextInput, Button } from '../components/Table'\n\n\nconst requireList = ['prosummary', 'techhighlight']\n\nexport default function Step2 ({ setCurStep, setTitle, step2Data, setStep2Data }) {\n\n\n    const [isNext, setIsNext] = useState(false)\n\n    const wrapperToUpperCase = (str) => {\n        return String(str).toUpperCase()\n    }\n\n    useEffect(() => {\n        setTitle({\n            title: 'Details',\n            crumbsList: [{\n                name: 'Apply Certified Sales'\n            }, {\n                name: 'General information',\n                onClick: () => { return setCurStep(1) }\n            }, {\n                name: 'Details',\n                active: true\n            }]\n        })\n    }, [])\n\n    useEffect(() => {\n        const arr = requireList.filter(item => {\n            return !step2Data[item]\n        })\n        if (arr.length === 0) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [step2Data])\n\n    const handelInputChange = (key, data) => {\n        const obj = { ...step2Data }\n        if (data.isRequire && !data.isError) {\n            obj[key] = data.value\n        } else {\n            obj[key] = null\n        }\n        setStep2Data(obj)\n    }\n\n    return (\n        <Step2Styled>\n            <TextInput\n                label='Project Summary'\n                placeholder='Enter your project Summary (Limit to 100 characters)'\n                width='600px'\n                marginTop='0px'\n                defaultVal={step2Data.prosummary}\n                isRequire={true}\n                maxLength={100}\n                onValueChange={(val) => {\n                    handelInputChange('prosummary', val)\n                }}\n            />\n\n            <TextInput\n                label='Technical highlight'\n                placeholder='Enter your project Technical highlight(Limit to 500 characters)'\n                width='600px'\n                maxLength={500}\n                defaultVal={step2Data.techhighlight}\n                isRequire={true}\n                onValueChange={(val) => {\n                    handelInputChange('techhighlight', val)\n                }}\n            />\n\n            <TextInput\n                label='Architecture'\n                placeholder='Enter your architecture'\n                width='600px'\n                defaultVal={step2Data.architecture}\n                isRequire={false}\n                maxLength={500}\n                onValueChange={(val) => {\n                    handelInputChange('architecture', val)\n                }}\n            />\n\n            <ul className='add_append'>\n                {/* 添加附件 */}\n                <li>{wrapperToUpperCase('Add attachments')}</li>\n            </ul>\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\n                    setCurStep(1)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(3)\n                }} />\n            </div>\n        </Step2Styled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step1.jsx",["419","420","421","422","423","424","425","426","427","428"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Step1Styled } from './styled'\nimport { TextInput, Button } from '../components/Table'\n\nconst SocialConfig = ['Twitter', 'Medium', 'Telegram', 'Facebook']\nconst requireList = ['proname', 'prowebsite', 'protheme', 'whitepaperlink', 'githublink']\n\n\nexport default function Step1 ({ setCurStep, setTitle, step1Data, setStep1Data }) {\n    const history = useHistory()\n    const [socialLink, setSocialLink] = useState([])\n    const [isNext, setIsNext] = useState(false)\n\n    const wrapperToUpperCase = (str) => {\n        return String(str).toUpperCase()\n    }\n\n    useEffect(() => {\n        setTitle({\n            title: 'General information',\n            crumbsList: [{\n                name: 'Apply Certified Sales'\n            }, {\n                name: 'General information',\n                active: true\n            }]\n        })\n    }, [])\n\n    useEffect(() => {\n        const arr = requireList.filter(item => {\n            return step1Data[item] === null || step1Data[item] === ''\n        })\n        if (arr.length === 0) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [step1Data])\n\n    const handelClickAdd = (item) => {\n        const list = [...socialLink]\n        if (!list.includes(item)) {\n            list.push(item)\n        } else {\n            const index = socialLink.indexOf(item)\n            list.splice(index, 1)\n        }\n        setSocialLink(list)\n    }\n\n    const handelInputChange = (key, data) => {\n        const obj = { ...step1Data }\n        if (data.isRequire && !data.isError) {\n            obj[key] = data.value\n        } else {\n            obj[key] = null\n        }\n        setStep1Data(obj)\n    }\n\n    return (\n        <Step1Styled>\n            <p className='tip'><span>Please note.</span> The submission fee to apply certified sales is 0.3 BOT tokens</p>\n\n            <TextInput\n                label='Project name'\n                placeholder='Enter your project name'\n                defaultVal={step1Data.proname}\n                isRequire={true}\n                width='600px'\n                onValueChange={(val) => {\n                    handelInputChange('proname', val)\n                }}\n                maxLength={20}\n            />\n\n            <TextInput\n                label='Project website'\n                placeholder='Enter your project website'\n                defaultVal={step1Data.prowebsite}\n                isRequire={true}\n                width='600px'\n                onValueChange={(val) => {\n                    handelInputChange('prowebsite', val)\n                }}\n                maxLength={100}\n                REG_rule={{\n                    reg: /http(s)?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/,\n                    msg: 'Please enter a valid website address'\n                }}\n            />\n\n            <TextInput\n                label='Theme'\n                placeholder='For Example: Defi , Public Chain'\n                defaultVal={step1Data.protheme}\n                isRequire={true}\n                width='600px'\n                onValueChange={(val) => {\n                    handelInputChange('protheme', val)\n                }}\n            />\n\n            <TextInput\n                label='Whitepaper link'\n                placeholder=' Enter your whitepaper link'\n                defaultVal={step1Data.whitepaperlink}\n                isRequire={true}\n                width='600px'\n                REG_rule={{\n                    reg: /http(s)?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/,\n                    msg: 'Please enter a standard Whitepaper link'\n                }}\n                maxLength={100}\n                onValueChange={(val) => {\n                    handelInputChange('whitepaperlink', val)\n                }}\n            />\n\n            <TextInput\n                label='Github link'\n                placeholder='Paste github link'\n                defaultVal={step1Data.githublink}\n                isRequire={true}\n                width='600px'\n                maxLength={100}\n                REG_rule={{\n                    reg: /http(s)?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/,\n                    msg: 'Please enter a standard GitHub address'\n                }}\n\n                onValueChange={(val) => {\n                    handelInputChange('githublink', val)\n                }}\n            />\n\n\n            {socialLink.map((item, index) => {\n                return <TextInput\n                    key={index}\n                    label={`${item} link`}\n                    placeholder={`Paste ${item} link`}\n                    defaultVal={step1Data[item]}\n                    width='600px'\n                    onValueChange={(val) => {\n                        const name = String(item).toLowerCase()\n                        handelInputChange(name, val)\n                    }}\n                />\n            })}\n\n\n            <ul className='add_append'>\n                {SocialConfig.map((item, index) => {\n                    return <li\n                        className={socialLink.includes(item) ? 'soc_active' : ''}\n                        key={index}\n                        onClick={() => {\n                            handelClickAdd(item)\n                        }}\n                    >{wrapperToUpperCase(`Add ${item}`)}</li>\n                })}\n            </ul>\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Cancel' width='164px' onClick={() => {\n                    history.goBack(-1)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(2)\n                }} />\n            </div>\n        </Step1Styled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/Crumbs.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step3.jsx",["429","430"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { TextInput, Form, Button, Upload } from '../components/Table'\nimport axios from 'axios'\nimport { useWeb3React } from '@web3-react/core'\nimport API_HOST from '../../config/request_api'\nimport { myContext } from '../../redux'\nimport Web3 from \"web3\";\nimport icon_plaint from '../../assets/images/plaint.svg'\n\nexport default function Step1({ curStep, setCurStep, ReqData, setReqData }) {\n    const history = useHistory()\n    const { dispatch } = useContext(myContext)\n    const { active, account, library } = useWeb3React()\n    const [data, setData] = useState({})\n    const [isNext, setIsNext] = useState(false)\n\n    useEffect(() => {\n        console.log(data, isNext)\n        const requiredList = ['idcardno', 'idcardfronturl', 'idcardbackurl']\n        const data_2 = requiredList.filter(item => {\n            if (!data[item]) {\n                return item\n            }\n        })\n\n        if (data_2.length === 0) {\n            setReqData(data)\n            return setIsNext(true)\n        } else {\n            return setIsNext(false)\n        }\n    }, [data])\n\n    const handelValChange = (key, val, required = false) => {\n        const data_2 = data\n        if (required && val === '') {\n            data_2[key] = null\n        } else {\n            data_2[key] = val || ''\n        }\n        setData({ ...ReqData, ...data_2 })\n    }\n\n\n    const handelSubmit = async () => {\n        // console.log(ReqData)\n        ReqData.bounceid = 0\n        ReqData.accountaddress = account\n        ReqData.status = 1  // 代表提交审核，审核中状态\n        const web3 = new Web3(library.provider);\n        const sign = await web3.eth.personal.sign('Welcome to Bounce!', account)\n        console.log('sign', sign)\n        axios.post(API_HOST.KYC, ReqData).then(res => {\n            if (res.status === 200 && res.data.code === 1) {\n                dispatch({\n                    type: 'MODAL',\n                    value: {\n                        name: 'CONFIRM',\n                        title: 'Message',\n                        deputy: 'The information review has been submitted successfully. Please wait for the approval of the review',\n                        confirm: {\n                            text: 'Confirm',\n                            callback: () => {\n                                dispatch({\n                                    type: 'MODAL',\n                                    value: null\n                                })\n                                history.push('/')\n                            }\n                        }\n                    }\n                })\n            } else {\n                dispatch({\n                    type: 'MODAL',\n                    value: {\n                        name: 'CONFIRM',\n                        title: 'Message',\n                        deputy: 'Your application is under review and will be reviewed within one working day. Please do not submit it twice',\n                        confirm: {\n                            text: 'Confirm',\n                            callback: () => {\n                                dispatch({\n                                    type: 'MODAL',\n                                    value: null\n                                })\n                                history.push('/')\n                            }\n                        }\n                    }\n                })\n            }\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    return (\n        <Form title={'ID confirmation'} marginTop='24px'>\n            <div className=\"tip\" style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginTop: 8\n            }}>\n                <img src={icon_plaint} alt=\"\" />\n                <p style={{\n                    fontSize: 12,\n                    marginLeft: 6\n                }}>This information is used to identity verification only, and will be kept secure by Bounce</p>\n            </div>\n\n            <TextInput\n             label='Passport Number'\n              placeholder='Enter your passport number'\n              isRequire={true}\n              onValueChange={(data) => {\n                handelValChange('idcardno', data.value)\n                console.log(data)\n            }} />\n            <Upload name='idcardfronturl' successCallBack={(path) => {\n                handelValChange('idcardfronturl', path || null)\n            }} />\n            <Upload name='idcardbackurl' successCallBack={(path) => {\n                handelValChange('idcardbackurl', path || null)\n            }} />\n            <div className=\"btn_group\">\n                <Button type='white' value='Back' width='164px' onClick={() => {\n                    setCurStep(curStep - 1)\n                }} />\n                <Button type='black' value='Verify' width='164px' disabled={!isNext || !active} onClick={handelSubmit} />\n            </div>\n        </Form>\n    )\n}","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step2.jsx",["431"],"import React, { useState, useEffect } from 'react'\nimport { TextInput, Form, Button, Select } from '../components/Table'\nimport country from '../../config/country.json'\n\n\nexport default function Step2({ curStep, setCurStep, ReqData, setReqData }) {\n\n    const [isNext, setIsNext] = useState(false)\n\n    const requiredList = ['1_residentialaddr', '2_countryother']\n    const requiredList_json = requiredList\n        .sort((a1, a2) => {\n            return parseInt(a1) - parseInt(a2)\n        }).toString()\n    const [checkList, setCheckList] = useState([])\n\n    useEffect(() => {\n        const checkList_json = checkList.sort((a1, a2) => {\n            return parseInt(a1) - parseInt(a2)\n        }).toString()\n\n        console.log(checkList_json, requiredList_json)\n\n        if (checkList_json === requiredList_json) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [checkList])\n\n    const handelValChange = (key, val) => {\n        const data = { ...ReqData }\n        data[key] = val\n        setReqData(data)\n    }\n\n    const checkValue = (data) => {\n        if (!data) return\n        if (data.isRequire) {\n            const arrList = [...checkList]\n            if (!data.isError && data.value !== '') {\n                if (!arrList.includes(data.name)) {\n                    arrList.push(data.name)\n                }\n            } else {\n                if (arrList.includes(data.name)) {\n                    const index = arrList.indexOf(data.name)\n                    arrList.splice(index, 1)\n                }\n            }\n            setCheckList(arrList)\n        }\n    }\n\n    return (\n        <Form title={'Residental Address'}>\n            {/* <TextInput label='Country / Region'  onValChange={(val) => {\n                handelValChange('country', val)\n            }} /> */}\n            <Select\n                label='Country / Region'\n                width='600px'\n                options={country}\n                isRequire={true}\n\n                onChange={(val) => {\n                    handelValChange('country', val)\n                }}\n\n            />\n\n\n            <TextInput\n                label='Address'\n                placeholder='Enter your Address'\n                name='1_residentialaddr'\n                defaultVal={ReqData && ReqData.residentialaddr}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('residentialaddr', data.value)\n                }}\n                isRequire={true}\n            // REG_rule={[{\n            //     reg: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n            //     msg: 'The residential address is incorrect'\n            // }]}\n            />\n            <TextInput\n                label='Postal Code'\n                placeholder='Enter your Postal Code'\n                width='294px'\n                name='idtype'\n                defaultVal={ReqData && ReqData.idtype}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('idtype', data.value)\n                }}\n            />\n            <TextInput\n                label='City'\n                placeholder='Enter your city'\n                width='294px'\n                isRequire={true}\n                name='2_countryother'\n                defaultVal={ReqData && ReqData.countryother}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('countryother', data.value)\n                }}\n            />\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Back' width='164px' onClick={() => {\n                    setCurStep(curStep - 1)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(curStep + 1)\n                }} />\n            </div>\n        </Form>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/TXModal.js",["432","433"],"import Modal, {ModalContent, ModalTitle} from \"./Modal\";\nimport Lottie from \"react-lottie\";\nimport {FormStatus} from \"./Form\";\nimport icon_success from \"../../assets/icons/icon-success.svg\";\nimport icon_error from \"../../assets/icons/icon-error.svg\";\nimport {Button} from \"./Button\";\nimport React from \"react\";\nimport bounce_loading from \"../../assets/bounce-loading.json\";\n\nexport const confirmStatus = {status: 1, title: 'Bounce requests wallet interaction', content: 'Please open your wallet and confirm in the transaction activity to proceed your order'}\nexport const pendingStatus = {status: 2, title: 'Bounce waiting for transaction settlement', content: 'Bounce is engaging with blockchain transaction, please wait patiently for on-chain transaction settlement'}\nexport const claimSuccessStatus = {status: 3, title: 'Settlement', content: 'Thanks for using Bounce Finance to create your auction. Your last auction is settled and you can create another one.'}\nexport const voteSuccessStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully participated in this prediction. Please come back to check results when the prediction pool is closed'}\nexport const successStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully participated in this auction. To proceed to next step, please read more instructions on auction in the bounce documentation'}\nexport const errorStatus = {status: -1, title: 'Transaction failed on Bounce', content: 'Oops! Your transaction is failed for on-chain approval and settlement. Please initiate another transaction'}\nexport const cancelStatus = {status: -2, title: 'Transaction canceled on Bounce', content: 'Sorry! Your transaction is canceled. Please try again'}\nexport const initStatus = {status: 0, title: '', content: ''}\n\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: bounce_loading,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\n\nexport const TxModal = ({modalStatus, onDismiss}) =>{\n\n    const {status, title, content} = modalStatus\n    return (\n        <Modal isOpen={status !== 0} onDismiss={() => {\n            onDismiss()\n        }}>\n            <ModalTitle style={{textAlign: 'center'}}>{title}</ModalTitle>\n\n            {(status === 1 || status === 2) &&\n            <Lottie width={200} height={200} options={defaultOptions}/>}\n\n            {(status === 3 ) &&\n            <FormStatus ><img src={icon_success}/></FormStatus>}\n\n            {(status === -1 || status === -2) &&\n            <FormStatus><img src={icon_error}/></FormStatus>}\n\n            <ModalContent style={{width: 300, textAlign: 'center'}}>{content}</ModalContent>\n            {(status === 1 || status === 2) && <Button width={'320px'} black>Awaiting...</Button>}\n            {status === 3 && <Button width={'320px'} black onClick={()=>{\n              window.location.reload()\n            }}>Close</Button>}\n            {status === -1 && <Button onClick={()=>{onDismiss()}} width={'320px'} black>Try again</Button>}\n        </Modal>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/hooks/useBalance.js",["434"],"import {getContract, useActiveWeb3React} from \"../web3\";\nimport {useEffect, useState} from \"react\";\nimport bounceERC20 from \"../web3/abi/bounceERC20.json\";\nimport {BOT} from \"../web3/address\";\n\nexport const useTokenBalance = (address) => {\n  const { active, account, library, chainId } = useActiveWeb3React();\n  const [balance, setBalance] = useState(null)\n\n\n  useEffect(() => {\n\n    async function getBalance() {\n      try {\n        const tokenContract = getContract(library, bounceERC20.abi, address ? address : BOT(chainId))\n        const balance = await tokenContract.methods.balanceOf(account).call()\n        setBalance(balance)\n      } catch (e) {\n        console.log('useTokenBalance:', e)\n        setBalance(null)\n      }\n    }\n\n    if (active) {\n      getBalance()\n    } else {\n      setBalance(null)\n    }\n\n  }, [active, account])\n\n\n  return { balance }\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/time.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/utils/numberTransform.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Text.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Select.jsx",["435"],"import React, { useState, useEffect } from 'react'\nimport { SelectStyled } from './styled'\nimport icon_down from '../../../assets/icons/down.svg'\n\nexport const Select = ({ isRequire, label, width, options = [], onChange }) => {\n    const [isPull, setIsPull] = useState(false)\n    const [selOption, setSelOption] = useState(0)\n\n    useEffect(() => {\n        if (options.length === 0) return\n        onChange && onChange(options[selOption])\n    }, [selOption])\n\n    return (\n        <SelectStyled\n            width={width}\n        >\n            {label && <p>{label}\n                {isRequire && <span>*</span>}\n            </p>}\n\n            <div className='sel_wrapper'>\n                <div className=\"input\" onClick={() => {\n                    setIsPull(!isPull)\n                }}>\n                    <span>{options[selOption] ? options[selOption].name : ''}</span>\n                    <img className={isPull ? 'up' : 'down'} src={icon_down} alt=\"\" />\n                </div>\n                {isPull && <ul className='options'>\n                    {options.map((item, index) => {\n                        return <li\n                            key={index}\n                            className={index === selOption ? 'active' : ''}\n                            onClick={() => {\n                                setSelOption(index)\n                                setIsPull(false)\n                            }}>\n                            {item.name}\n                        </li>\n                    })}\n                </ul>}\n            </div>\n        </SelectStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Form.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Upload.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/Passage.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Button.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Check.jsx",["436"],"import React, { useState, useEffect } from 'react'\nimport { RadioStyled } from './styled'\nimport icon_radio from '../../../assets/images/radio.svg'\nimport icon_radio_sel from '../../../assets/images/radio_sel.svg'\n\nexport const Radio = ({ label, width, onChange, options = [], defaultIndex = 0 }) => {\n    const [curSel, setCurSel] = useState(defaultIndex)\n\n    useEffect(() => {\n        onChange && onChange(options[curSel])\n    }, [curSel])\n\n    return (\n        <RadioStyled width={width}>\n            {label && <p>{label}</p>}\n\n            <ul>\n                {options.map((item, index) => {\n                    return <li key={index} onClick={() => {\n                        setCurSel(index)\n                    }}>\n                        <img src={curSel === index ? icon_radio_sel : icon_radio} alt=\"\" />\n                        <span>{item.name}</span>\n                    </li>\n                })}\n            </ul>\n        </RadioStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Input.jsx",["437","438"],"import React, { useEffect, useState } from 'react'\nimport { InputStyled, InputAreaStyled, TimeInputStyled } from './styled'\n\nexport const TextInput = ({ unit, upperCase, name, isNumber, isName, REG_rule, maxLength, disabled, defaultVal, placeholder, width, minHeight, marginTop, label, onChange, onValChange, onValueChange, isRequire = false }) => {\n    const [val, setVal] = useState('')\n    const [isError, setIsError] = useState(false)\n    const [errMsg, setErrMsg] = useState('')\n    const [sHeight, setSHeight] = useState('48px')\n\n    useEffect(() => {\n        if (!defaultVal) return\n        setVal(defaultVal)\n    }, [defaultVal])\n\n    useEffect(() => {\n        onValueChange && onValueChange({\n            name: name,\n            value: val,\n            isError: isError,\n            errMsg: errMsg,\n            isRequire: isRequire ? isRequire : false\n        })\n\n\n        if (isRequire && val === '') {\n            onValChange && onValChange(null)\n        } else {\n            onValChange && onValChange(val)\n        }\n\n    }, [val, isError])\n\n    const regMatch = (val) => {\n        if (REG_rule) {\n            const reg = new RegExp(REG_rule.reg)\n            if (!reg.test(val)) {\n                setErrMsg(REG_rule.msg)\n                setIsError(true)\n            } else {\n                setErrMsg('')\n                setIsError(false)\n            }\n\n        } else {\n            setErrMsg('')\n            setIsError(false)\n        }\n\n\n    }\n\n    const wrapperName = (str) => {\n        let reg = /[0-9]+/g;\n        let str1 = str.replace(reg, \"\");\n        if (str1 === '') return ''\n        let arr = str1.toLowerCase().split(\" \");\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = arr[i][0].toUpperCase() + arr[i].substring(1, arr[i].length);\n        }\n        return arr.join(\" \");\n    }\n\n    const wrapperNumber = (str) => {\n        let reg = /[\\D]+/g;\n        let str1 = str.replace(reg, \"\");\n        return str1\n    }\n\n    const wrapperUpperCase = (str) => {\n        let reg = /[a-zA-Z]+/g;\n        let str1 = str.replace(reg, (v) => {\n            return v.toUpperCase()\n        });\n        return str1\n    }\n\n\n    return (\n        <InputStyled\n            width={width}\n            height={sHeight}\n            marginTop={marginTop}\n        >\n            {label && <p>\n                {label}\n                {isRequire && <span className='require'>*</span>}\n            </p>}\n\n            <div className=\"input_area\">\n                <textarea\n                    name={name}\n                    style={{ resize: 'none', height: sHeight, minHeight: minHeight }}\n                    className={`${val !== '' ? 'isComplete' : ''} ${isError ? 'Error' : ''}`}\n                    value={val}\n                    // height\n                    placeholder={placeholder}\n                    disabled={disabled}\n                    maxLength={maxLength || 30}\n                    onChange={(e) => {\n                        const height = e.target.scrollHeight\n                        if ((height - 1) + 'px' !== sHeight) {\n                            console.log((height - 1) + 'px')\n                            setSHeight((height - 1) + 'px')\n                        }\n\n                        let val = String(e.target.value).trim()\n                        if (isName) {\n                            val = wrapperName(val)\n                        }\n\n                        if (isNumber) {\n                            val = wrapperNumber(val)\n                        }\n\n                        if (upperCase) {\n                            val = wrapperUpperCase(val)\n                        }\n                        regMatch(val)\n                        setVal(val)\n                        onChange && onChange(e)\n                    }}\n                    onBlur={(e) => {\n                        let val = String(e.target.value).trim()\n                        if (isRequire && val === '') {\n                            setIsError(true)\n                            setErrMsg('Please fill in this field')\n                        } else if (!isError) {\n                            setIsError(false)\n                            setErrMsg('')\n                        }\n                    }}\n                ></textarea>\n\n                {unit && <p className='unit'>{unit}</p>}\n            </div>\n            {isError && <p className=\"error_msg\">{errMsg}</p>}\n        </InputStyled>\n    )\n}\n\nexport const TextAreaInput = ({ REG_rule, name, defaultVal, placeholder, width, height, marginTop, label, onChange, onValChange, isRequire }) => {\n    const [val, setVal] = useState('')\n\n    useEffect(() => {\n        if (!defaultVal) return\n        setVal(defaultVal)\n    }, [defaultVal])\n\n    const regMatch = (val) => {\n        if (REG_rule) {\n            console.log(REG_rule)\n        }\n        return true\n    }\n\n    return (\n        <InputAreaStyled\n            width={width}\n            height={height}\n            marginTop={marginTop}\n        >\n            {label && <p>\n                {label}\n            </p>}\n            <textarea\n                name={name}\n                cols=\"30\"\n                rows=\"10\"\n                value={val}\n                placeholder={placeholder}\n                onChange={(e) => {\n                    const val = String(e.target.value).trim()\n                    if (!regMatch(val)) return\n                    setVal(val)\n                    if (isRequire && val === '') {\n                        onValChange && onValChange(null)\n                    } else {\n                        onValChange && onValChange(val)\n                    }\n                    onChange && onChange(e)\n                }}\n            />\n        </InputAreaStyled>\n    )\n}\n\nexport const TimeInput = ({ label, width, marginTop, onChange }) => {\n    const [days, setDays] = useState('')\n    const [hours, setHours] = useState('')\n    const [minutes, setMinutes] = useState('')\n    const [isError, setIsError] = useState(false)\n\n    useEffect(() => {\n        if (days === '' && hours === '' && minutes === '') return\n        const err = getSeconds(days, hours, minutes) < 60 * 5 ? true : false\n\n        setIsError(err)\n\n        const obj = {\n            days: days === '' ? 0 : days,\n            hours: hours === '' ? 0 : hours,\n            minutes: minutes === '' ? 0 : minutes,\n            seconds: getSeconds(days, hours, minutes),\n            timestamp: getSeconds(days, hours, minutes) * 1000,\n            isRequire: true,\n            isError: err\n        }\n\n\n        onChange && onChange(obj)\n    }, [days, hours, minutes])\n\n    const getSeconds = (days = 0, hours = 0, minutes = 0) => {\n        const s1 = days * 24 * 60 * 60\n        const s2 = hours * 60 * 60\n        const s3 = minutes * 60\n\n        return s1 + s2 + s3\n    }\n\n    return <TimeInputStyled\n        width={width}\n        marginTop={marginTop}\n    >\n        {label && <p>\n            {label}\n            {<span className='require'>*</span>}\n        </p>}\n\n        <div className=\"input_box\">\n            <input type=\"number\" name='Days' placeholder='Days' value={days} onChange={(e) => {\n                let val = String(e.target.value).trim()\n                val = parseFloat(val).toString()\n                if (val !== 'NaN') {\n                    if (val > 6) {\n                        val = 6\n                    } else if (val < 1) {\n                        val = 0\n                    }\n                    setDays(val)\n                } else {\n                    setDays(0)\n                }\n            }} />\n            <input type=\"number\" name='Hours' placeholder='Hours' value={hours} onChange={(e) => {\n                let val = String(e.target.value).trim()\n                val = parseFloat(val).toString()\n                if (val !== 'NaN') {\n                    if (val > 23) {\n                        val = 24\n                    } else if (val < 1) {\n                        val = 0\n                    }\n                    setHours(val)\n                } else {\n                    setHours(0)\n                }\n            }} />\n            <input type=\"number\" name='Minutes' placeholder='Minutes' value={minutes} onChange={(e) => {\n                let val = String(e.target.value).trim()\n                val = parseFloat(val).toString()\n                if (val !== 'NaN') {\n                    if (val > 58) {\n                        val = 59\n                    } else if (val < 1) {\n                        val = 0\n                    }\n                    setMinutes(val)\n                } else {\n                    setMinutes(0)\n                }\n            }} />\n        </div>\n\n        {isError && <p className=\"error_msg\">5 minutes minimum input</p>}\n    </TimeInputStyled>\n}","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Form.jsx",["439"],"import React, { useEffect } from 'react'\nimport { FormStyled } from './styled'\n\nexport const Form = ({ title, width, children, marginTop }) => {\n    return (\n        <FormStyled width={width} marginTop={marginTop}>\n            {title && <h5>{title}</h5>}\n\n            <div className=\"children\">\n                {children}\n            </div>\n        </FormStyled>\n    )\n}\n\n\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step1.jsx",["440","441","442"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { TextInput, Form, Button } from '../components/Table'\n\nexport default function Step1({ curStep, setCurStep, ReqData, setReqData }) {\n    const history = useHistory()\n    const [isNext, setIsNext] = useState(false)\n\n    const requiredList = ['1_username', '3_lastname', '4_birthday']\n    const requiredList_json = requiredList\n        .sort((a1, a2) => {\n            return parseInt(a1) - parseInt(a2)\n        }).toString()\n    const [checkList, setCheckList] = useState([])\n\n\n    useEffect(() => {\n        const checkList_json = checkList.sort((a1, a2) => {\n            return parseInt(a1) - parseInt(a2)\n        }).toString()\n\n        if (checkList_json === requiredList_json) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [checkList])\n\n    const handelValChange = (key, val) => {\n        const data = { ...ReqData }\n        data[key] = val\n        setReqData(data)\n    }\n\n    const checkValue = (data) => {\n        if (!data) return\n        if (data.isRequire) {\n            const arrList = [...checkList]\n            if (!data.isError && data.value !== '') {\n                if (!arrList.includes(data.name)) {\n                    arrList.push(data.name)\n                }\n            } else {\n                if (arrList.includes(data.name)) {\n                    const index = arrList.indexOf(data.name)\n                    arrList.splice(index, 1)\n                }\n            }\n            setCheckList(arrList)\n        }\n    }\n\n\n    return (\n        <Form title={'Basic Info'}>\n            <TextInput\n                label='First Name'\n                width='294px'\n                placeholder='Enter first name'\n                name='1_username'\n                defaultVal={ReqData && ReqData.username}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('username', data.value)\n                }}\n                isRequire={true}\n                isName={true}\n            />\n            <TextInput\n                label='Middle Name (if applicable)'\n                width='294px'\n                placeholder='Enter middle name'\n                name='2_middlename'\n                defaultVal={ReqData && ReqData.middlename}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('middlename', data.value)\n                }}\n                isName={true}\n            />\n            <TextInput\n                label='Last Name'\n                placeholder='Enter last name'\n                name='3_lastname'\n                defaultVal={ReqData && ReqData.lastname}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('lastname', data.value)\n                }}\n                isRequire={true}\n                isName={true}\n            />\n\n\n            <TextInput\n                label='Date of Birth'\n                placeholder='2021-1-1'\n                name='4_birthday'\n                isRequire={true}\n                defaultVal={ReqData && ReqData.birthday}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('birthday', data.value)\n                }}\n                REG_rule={{\n                    reg: /^((19[2-9]\\d{1})|(20((0[0-2])|(1[0-8]))))\\-((0?[1-9])|(1[0-2]))\\-((0?[1-9])|([1-2][0-9])|30|31)$/,\n                    msg: 'Incorrect birth date format (yyyy-mm-dd) Or under the age of 18'\n                }}\n            />\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Cancel' width='164px' onClick={() => {\n                    history.goBack(-1)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(curStep + 1)\n                }} />\n            </div>\n        </Form>\n    )\n}","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/FixedSwap/Detail.js",["443","444","445","446","447","448"],"import React, {useState, useEffect, useContext} from 'react';\nimport {\n    Address,\n    ITextR,\n    LayoutFrame, LineDivider,\n    OText2, OText5,\n    Pool,\n    Progress,\n    renderTime\n} from \"../../components/common/Layout\";\nimport icon_return from '../../assets/images/icon-return.svg'\nimport {usePoolDetail} from \"./Hooks\";\nimport BigNumber from \"bignumber.js\";\nimport {fromWei, getProgress, numToWei, weiDiv, weiToNum, weiToNumber} from \"../../utils/numberTransform\";\nimport classNames from \"classnames\";\nimport {useParams} from 'react-router-dom';\nimport {Form, Input} from \"../../components/common/Form\";\nimport icon_max from \"../../assets/icons/icon-max.svg\";\nimport {Button} from \"../../components/common/Button\";\nimport {useEthBalance, useTokenBalance, useTokenList} from \"../../web3/common\";\nimport {getContract, useActiveWeb3React} from \"../../web3\";\nimport fixSwap from \"../../web3/abi/BouncePro.json\";\nimport {BOUNCE_PRO} from \"../../web3/address\";\nimport Web3 from 'web3'\nimport {useHistory} from 'react-router-dom'\nimport {\n    BidModal,\n    initStatus,\n    errorStatus,\n    confirmStatus,\n    pendingStatus,\n    cancelStatus,\n    claimSuccessStatus\n} from \"../../components/common/BidModal\";\nimport {useLeftTime} from \"../../hooks/useLeftTime\";\nimport {mainContext} from \"../../reducer\";\nimport {useIsXSDown} from '../../utils/themeHooks';\nimport bounceERC20 from \"../../web3/abi/bounceERC20.json\";\nimport {AuctionTipModal} from \"../../components/common/AuctionTipModal\";\nimport Modal from \"../../components/common/Modal\";\nimport {Message} from \"../../components/common/message\";\nimport {TipLink} from \"../../components/common/TipLink\";\nimport {CREATOR_CLAIMED_MESSAGE} from \"../../const\";\nimport {validateForm} from \"../../utils/form\";\nimport {isGreaterThan} from \"../../utils/common\";\n\nconst {BN, toWei} = Web3.utils\n\nconst bidSuccessStatus = {\n    status: 3,\n    title: 'Congratulations!',\n    content: 'You have successfully bidded and your swapped tokens are automatically sent to your wallet. You can now make more bids.'\n}\n\n\nexport const FSPoolDetail = () => {\n    const { poolId } = useParams()\n    const history = useHistory()\n    const {state} = useContext(mainContext);\n    const {ethPrice, BOTPrice, BTCPrice} = state\n    const {id} = useParams();\n    const {account, library, chainId} = useActiveWeb3React()\n    const {balance} = useTokenBalance()\n    const tokenOptions = useTokenList()\n    const {setTime, leftTime} = useLeftTime()\n    const [bidAmount, setBidAmount] = useState()\n    const [bidStatus, setBidStatus] = useState(initStatus)\n    const [showTip, setShowTip] = useState()\n    const [errors, setErrors] = useState({amount: ''})\n\n    const isXSDown = useIsXSDown();\n\n    const {name, address, symbol, decimals, limit, time, fromBidAmount, fromAmount, toAmount, status, isMine, toBidAmount, onlyBOT, claimed, toSymbol, toAddress, toDecimals, joinStatus} = usePoolDetail(id)\n\n    const {ethBalance} = useEthBalance(toAddress)\n\n    useEffect(() => {\n        if (onlyBOT && isGreaterThan(toWei('0.1'), balance) && !bidAmount) {\n            errors.amount='Sorry! You are not qualified as bot holder.'\n            setErrors(errors)\n        }\n    }, [onlyBOT, balance, bidAmount, account])\n\n    let timer = null\n    useEffect(() => {\n        timer = setInterval(() => {\n            const date = new Date(time * 1000);\n            const now = new Date();\n            const lefttime = date - now;\n            if (lefttime >= 1000) {\n                setTime(lefttime)\n            } else if (0 < lefttime && lefttime < 1000) {\n                window.location.reload()\n            } else {\n                clearInterval(timer)\n            }\n        }, (1000));\n        return () => {\n            clearInterval(timer)\n        }\n    }, [setTime, time]);\n\n\n    const onBid = async () => {\n        setShowTip(false)\n        let tokenContract\n\n        if (toAddress) {\n            tokenContract = getContract(library, bounceERC20.abi, toAddress)\n        }\n        const bounceContract = getContract(library, fixSwap.abi, BOUNCE_PRO(chainId))\n        const weiAmount = numToWei(bidAmount, toDecimals);\n\n        setBidStatus(confirmStatus);\n        try {\n            if (toAddress) {\n                await tokenContract.methods.approve(\n                    BOUNCE_PRO(chainId),\n                    weiAmount,\n                )\n                    .send({from: account});\n                setBidStatus(confirmStatus);\n            }\n            bounceContract.methods.fixPoolSwapV2(\n                id,\n                weiAmount)\n                .send({from: account, value: toAddress ? 0 : weiAmount})\n                .on('transactionHash', hash => {\n                    setBidStatus(pendingStatus)\n                })\n                .on('receipt', (_, receipt) => {\n                    setBidStatus(bidSuccessStatus)\n                })\n                .on('error', (err, receipt) => {\n                    setBidStatus(errorStatus)\n                })\n        } catch (e) {\n            if (e.code === 4001) {\n                setBidStatus(cancelStatus)\n            } else {\n                setBidStatus(errorStatus)\n            }\n        }\n\n    }\n\n\n    console.log('poolid--->', poolId)\n\n\n    const onClaim = async () => {\n        const bounceContract = getContract(library, fixSwap.abi, BOUNCE_PRO(chainId))\n        setBidStatus(confirmStatus);\n        try {\n            bounceContract.methods.fixPoolWithdraw()\n                .send({from: account})\n                .on('transactionHash', hash => {\n                    setBidStatus(pendingStatus)\n                })\n                .on('receipt', (_, receipt) => {\n                    console.log('bid fixed swap receipt:', receipt)\n                    setBidStatus(claimSuccessStatus)\n                })\n                .on('error', (err, receipt) => {\n                    setBidStatus(errorStatus)\n                })\n        } catch (e) {\n            if (e.code === 4001) {\n                setBidStatus(cancelStatus)\n            } else {\n                setBidStatus(errorStatus)\n            }\n        }\n\n    }\n\n    const loadPrice = (toAddress) => {\n        const toToken = tokenOptions.find(item => {\n            return toAddress.toLowerCase() === item.key.toLowerCase()\n        })\n        switch (toToken.symbol) {\n            case 'USDT':\n                return '1'\n\n            case 'BOT':\n                return BOTPrice\n\n            case 'WBTC':\n                return BTCPrice\n            default:\n                return ethPrice\n\n        }\n    }\n\n    const handleChange = async event => {\n        event.preventDefault();\n        const {name, value} = event.target;\n        switch (name) {\n            case \"amount\":\n                errors.amount = ''\n                const amountValue = value.replace(/[^\\d.]/g, '')\n                setBidAmount(amountValue)\n                console.log('wei amount', numToWei(amountValue, decimals))\n                if (!ethBalance || (ethBalance && isGreaterThan(numToWei(amountValue, decimals), ethBalance))) {\n                    errors.amount = 'you do not have enough balance'\n                }\n                if (limit &&  isGreaterThan(limit, '0')  && isGreaterThan(numToWei(amountValue, toDecimals), limit)) {\n                    errors.amount = 'maximum allocation per wallet is ' + weiToNum(limit, toDecimals)\n                }\n                break\n            default:\n        }\n        console.log('final errors', errors)\n        setErrors(errors)\n    };\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log('handleSubmit', event)\n        if (validateForm(errors)) {\n            setShowTip(true)\n        }\n    }\n\n    return (\n        <LayoutFrame style={{\n            marginTop: 27,\n            paddingBottom: 56,\n            paddingLeft: isXSDown ? '20px' : '0',\n            paddingRight: isXSDown ? '20px' : '0'\n        }}>\n            {isMine ?\n                <>\n                    {status === 'Live' && (\n                        <Message type={'success'}\n                                 content={'The auction is still live, please wait patiently until your auction is filled or closed.'}/>\n                    )}\n                    {status === 'Filled' && (\n                        <Message type={'success'}\n                                 content={'Congratulations! Your auction is complete. All your tokens are auctioned and your fund is automatically sent to your wallet.'}/>\n                    )}\n                    {status === 'Closed' && !claimed && (\n                        <Message type={'error'}\n                                 content={'Unfortunately, your pool is not fully filled and closed. Please claim back the unswapped tokens manually.'}/>\n                    )}\n                    {status === 'Closed' && claimed && (\n                        <Message type={'success'}\n                                 content={CREATOR_CLAIMED_MESSAGE}/>\n                    )}\n                </>\n                : null}\n\n\n            {!isMine ?\n                <>\n                    {status === 'Live' && joinStatus && (\n                        <Message type={'success'}\n                                 content={'You have successfully bidded and your swapped tokens are automatically sent to your wallet. You can now make more bids.'}/>\n                    )}\n                    {status !== 'Live' && (\n                        <Message content={'This auction is finished, please visit other live auctions.'}/>\n                    )}\n                </>\n                : null}\n\n\n            <Pool.Return onClick={() => {\n                history.goBack()\n            }} src={icon_return}/>\n            <LayoutFrame width={'1072px'} style={{padding: '32px 0', margin: 'auto', marginTop: 0}}>\n                <Pool.Mode>Fixed-Swap</Pool.Mode>\n                <Pool.Header><span>{name}</span></Pool.Header>\n                <Address style={{wordBreak: isXSDown ? 'break-all' : 'normal'}}>{address}</Address>\n                <Pool.Content style={{marginTop: 40}}>\n\n                    <Pool.Content width={isXSDown ? '100%' : '456px'} style={{marginTop: 0}}>\n\n                        <Pool.Content width={isXSDown ? '100%' : '456px'}\n                                      style={{marginTop: 0, flexDirection: 'column'}}>\n                            <Pool.Status style={{width: 'fit-content'}} className={classNames('status', status)}><i\n                                className={status}/>{status}</Pool.Status>\n                            <ITextR style={{\n                                marginTop: 8,\n                                textAlign: 'left'\n                            }}>{`Participant: ${onlyBOT ? 'BOT holder' : 'Public'}`}</ITextR>\n                        </Pool.Content>\n\n                        <Pool.Block style={{width: '100%'}}>\n                            <span>Fixed Swap Ratio</span>\n                            <span>{fromAmount && toAmount && `1 ${toSymbol} = ${(weiDiv(fromWei(fromAmount, decimals), fromWei(toAmount, toDecimals)))} ${symbol && symbol}`}</span>\n                        </Pool.Block>\n\n                        <Pool.Block style={{width: isXSDown ? '100%' : '200px'}}>\n                            <span>Price,$</span>\n                            <span>{(toAmount && fromAmount) && new BigNumber(weiDiv(fromWei(toAmount, toDecimals), fromWei(fromAmount, decimals))).multipliedBy(chainId === 56 ? '29' : toAddress ? loadPrice(toAddress) : ethPrice).toFixed(6).toString()}</span>\n                        </Pool.Block>\n\n                        <Pool.Block style={{width: isXSDown ? '100%' : '200px'}}>\n                            <span>Maximum Allocation per wallet</span>\n                            <span>{limit && (limit == 0 ? 'No limit' : `${weiToNumber(limit)} ${toSymbol}`)}</span>\n                        </Pool.Block>\n\n                        <OText5 style={{\n                            width: 480,\n                            marginTop: 40,\n                            fontSize: 12,\n                            fontFamily: 'IBM Plex Mono',\n                            fontWeight: 500\n                        }}>Auction\n                            progress: {toBidAmount && weiToNumber(toBidAmount, toDecimals)} {toSymbol}\n                            <span\n                                style={{opacity: .3}}> / {toAmount && weiToNumber(toAmount, toDecimals)} {toSymbol}</span>\n                        </OText5>\n                        {fromBidAmount && fromAmount && (\n                            <Progress style={{marginTop: 16}} height={'5px'}\n                                      className={classNames('progress', toBidAmount === toAmount ? 'Filled' : status)}>\n                                <Progress.Value style={{width: `${getProgress(toBidAmount, toAmount)}%`}}\n                                                className={classNames('progress-value', toBidAmount === toAmount ? 'Filled' : status)}/>\n                            </Progress>\n                        )}\n\n                    </Pool.Content>\n\n                    <Pool.Content width={'auto'}\n                                  style={{\n                                      height: 'fit-content',\n                                      width: isXSDown ? '100%' : '480px',\n                                      flexDirection: 'column',\n                                      padding: isXSDown ? '48px 20px' : '48px 56px',\n                                      justifyContent: 'center',\n                                      marginTop: 0,\n                                      backgroundColor: 'rgba(248, 248, 251, 1)'\n                                  }}>\n\n                        {isMine ? (\n                            <>\n                                <OText2 style={{textAlign: 'center', marginTop: 8}}>My Pool</OText2>\n                                {renderTime(leftTime)}\n                                <Pool.Meta>\n                                    <div>Total amount:</div>\n                                    <div>{`${toAmount && weiToNumber(toAmount, toDecimals)} ${toSymbol}`}</div>\n                                </Pool.Meta>\n\n                                <Pool.Meta>\n                                    <div>Successful bid amount:</div>\n                                    <div>{toBidAmount && `${weiToNumber(toBidAmount, toDecimals)} ${toSymbol}`}</div>\n                                </Pool.Meta>\n\n                                {(status === 'Closed' && !claimed) ?\n                                    <Button black onClick={onClaim}>Claim your unswapped tokens</Button> : null}\n\n                            </>\n                        ) : (\n                            <form id=\"bid-fs-form\" onSubmit={handleSubmit}>\n                                <OText2 style={{textAlign: 'center', marginTop: 0, fontSize: 26}}>Join The Pool</OText2>\n                                {renderTime(leftTime)}\n                                <LineDivider style={{marginTop: 0}}/>\n                                <Pool.topInfo>\n                                    <span>Your Bid Amount</span>\n                                    <span>{`Balance: ${ethBalance ? weiToNumber(ethBalance, toDecimals) : '--'}`} {toSymbol}</span>\n                                </Pool.topInfo>\n                                <Form\n                                    error={errors.amount}\n                                    top={'0px'} width={'100%'}\n                                    input={<Input\n                                        style={{\n                                            padding: '8px 0',\n                                            color: '#1F191B',\n                                            fontSize: 16,\n                                            lineHeight: '20px',\n                                            fontFamily: 'Helvetica Neue',\n                                            fontWeight: \"bold\"\n                                        }}\n                                        name={'amount'}\n                                        placeholder={'Bid Amount'}\n                                        disabled={onlyBOT && isGreaterThan(toWei('0.1'), balance  )}\n                                        value={bidAmount}\n                                        onChange={handleChange}\n                                    />} name={' '} addonAfter={(<img onClick={() => {\n                                    console.log('set max amount', ethBalance)\n                                    setBidAmount(fromWei(ethBalance, toDecimals))\n                                }} src={icon_max}/>)}\n                                />\n\n                                <Button\n                                    style={{marginTop: 50}}\n                                    disabled={status !== 'Live' || !validateForm(errors) || !bidAmount}\n                                    black\n                                >Go\n                                </Button>\n\n                                <TipLink/>\n                            </form>\n                        )}\n\n                    </Pool.Content>\n\n                </Pool.Content>\n\n\n            </LayoutFrame>\n\n\n            <BidModal modalStatus={bidStatus} onDismiss={() => {\n                setBidStatus(initStatus)\n            }}/>\n\n            <Modal\n                closeable\n                isOpen={showTip}\n                onDismiss={() => {\n                    setShowTip(false)\n                }}\n                maxWidth={'450px'}\n            >\n                <AuctionTipModal type={0} auction={onBid}/>\n            </Modal>\n\n        </LayoutFrame>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/FixedSwap/Hooks.js",["449","450","451","452","453","454","455","456","457"],"/Users/qt/Desktop/boundce/bounce-kyc/src/utils/themeHooks.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/utils/form.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/hooks/useLeftTime.js",["458"],"import {useEffect, useState} from \"react\";\n\nexport const useLeftTime = () => {\n    const initRenderTime = {\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n    }\n\n    const [time, setTime] = useState();\n    const [leftTime, setLeftTime] = useState(initRenderTime);\n\n    const calcuTime = ()=>{\n        if (time) {\n            let leftd = Math.floor(time / (1000 * 60 * 60 * 24));\n            let lefth = Math.floor(time / (1000 * 60 * 60) % 24);\n            let leftm = Math.floor(time / (1000 * 60) % 60);\n            let lefts = Math.floor(time / 1000 % 60);\n            const left = {\n                days: leftd < 0 ? 0 : leftd,\n                hours: lefth < 0 ? 0 : lefth,\n                minutes: leftm < 0 ? 0 : leftm,\n                seconds: lefts < 0 ? 0 : lefts,\n            };\n            setLeftTime(left);\n            if (left < 0) {\n                setLeftTime(initRenderTime);\n            }\n        } else {\n            setLeftTime(initRenderTime);\n        }\n    }\n\n\n    useEffect(()=>{\n        calcuTime()\n    }, [time])\n\n    return {setTime, leftTime}\n}","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/common.js",["459"],"import Web3 from \"web3\";\n\nconst {numberToHex} = Web3.utils\n\nconst BigNumber = require('bignumber.js');\n\nexport const getTime = (day, hour, min) => {\n  let time = 0;\n  if ( day ) {\n    time += 24 * 60 * 60 * day;\n  }\n  if ( hour ) {\n    time += 60* 60 * hour;\n  }\n  if ( min ) {\n    time += 60 * min;\n  }\n  return time;\n}\n\nexport const isGreaterThan = (value1, value2) => {\n  return   new BigNumber(value1).isGreaterThan(new BigNumber(value2))\n}\n\n\nexport const isEqualTo = (value1, value2) => {\n  return   new BigNumber(value1).isEqualTo(new BigNumber(value2))\n}\n\n","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/PasswordMpdal.js",["460","461","462"],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/AuctionTipModal.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/TipLink.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/BidModal.js",["463","464"],"import Modal, {ModalContent, ModalTitle} from \"./Modal\";\nimport Lottie from \"react-lottie\";\nimport {FormStatus} from \"./Form\";\nimport icon_success from \"../../assets/icons/icon-success.svg\";\nimport icon_error from \"../../assets/icons/icon-error.svg\";\nimport {Button} from \"./Button\";\nimport React from \"react\";\nimport bounce_loading from \"../../assets/bounce-loading.json\";\n\nexport const confirmStatus = {status: 1, title: 'Bounce requests wallet interaction', content: 'Please open your wallet and confirm in the transaction activity to proceed your order'}\nexport const pendingStatus = {status: 2, title: 'Bounce waiting for transaction settlement', content: 'Bounce is engaging with blockchain transaction, please wait patiently for on-chain transaction settlement'}\nexport const claimSuccessStatus = {status: 3, title: 'Settlement', content: 'Thanks for using Bounce Finance to create your auction. Your last auction is settled and you can create another one.'}\nexport const voteSuccessStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully participated in this prediction. Please come back to check results when the prediction pool is closed'}\nexport const successStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully participated in this auction. To proceed to next step, please read more instructions on auction in the bounce documentation'}\nexport const errorStatus = {status: -1, title: 'Transaction failed on Bounce', content: 'Oops! Your transaction is failed for on-chain approval and settlement. Please initiate another transaction'}\nexport const cancelStatus = {status: -2, title: 'Transaction canceled on Bounce', content: 'Sorry! Your transaction is canceled. Please try again'}\nexport const initStatus = {status: 0, title: '', content: ''}\n\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: bounce_loading,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\n\nexport const BidModal = ({modalStatus, onDismiss}) =>{\n\n    const {status, title, content} = modalStatus\n    return (\n        <Modal isOpen={status !== 0} onDismiss={() => {\n            onDismiss()\n        }}>\n            <ModalTitle style={{textAlign: 'center'}}>{title}</ModalTitle>\n\n            {(status === 1 || status === 2) &&\n            <Lottie width={200} height={200} options={defaultOptions}/>}\n\n            {(status === 3 ) &&\n            <FormStatus ><img src={icon_success}/></FormStatus>}\n\n            {(status === -1 || status === -2) &&\n            <FormStatus><img src={icon_error}/></FormStatus>}\n\n            <ModalContent style={{width: 300, textAlign: 'center'}}>{content}</ModalContent>\n            {(status === 1 || status === 2) && <Button width={'320px'} black>Awaiting...</Button>}\n            {status === 3 && <Button width={'320px'} black onClick={()=>{\n              window.location.reload()\n            }}>Close</Button>}\n            {status === -1 && <Button onClick={()=>{onDismiss()}} width={'320px'} black>Try again</Button>}\n        </Modal>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/message.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/web3/common.js",["465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487"],"import React, { useContext, useEffect, useState } from 'react';\nimport bounceERC20 from '../web3/abi/bounceERC20.json'\nimport { useActiveWeb3React } from \"./index\";\nimport { getContract } from \"../web3\";\nimport { getBotAddress, getUSDTAddress, getWBTCAddress, getYFIAddress } from \"./address\";\nimport { isGreaterThan } from \"../utils/common\";\nimport BigNumber from \"bignumber.js\";\nimport Web3 from 'web3'\nimport { mainContext } from '../reducer'\nimport { HANDLE_SHOW_CONNECT_MODAL } from \"../const\";\nimport { weiToNum } from \"../utils/numberTransform\";\nimport { TokenFrame } from \"../components/common/Layout\";\nimport icon_usdt from '../assets/icons/icon-usdt.png'\nimport bounce_token from '../assets/icons/bounce_token.png'\nimport wbtc_icon from '../assets/icons/wbtc_icon.png'\nimport yfi_icon from '../assets/icons/yfi_icon.png'\nimport icon_eth from '../assets/icons/icon_eth.svg'\nimport {useActivePlatform} from \"../hooks\";\n\n\nconst { toWei } = Web3.utils\n\n\n\n\nexport const useTokenList = () => {\n  const { chainId } = useActiveWeb3React();\n  const { Psymbol } = useActivePlatform()\n\n  return [{\n    key: '0x0000000000000000000000000000000000000000',\n    value: <TokenFrame><img src={icon_eth} /><span>{Psymbol}</span></TokenFrame>,\n    symbol: Psymbol,\n    decimals: '18'\n\n  }, {\n    key: getUSDTAddress(chainId),\n    value: <TokenFrame><img src={icon_usdt} /><span>USDT</span></TokenFrame>,\n    symbol: 'USDT',\n    decimals: '6'\n  }, {\n    key: getBotAddress(chainId),\n    value: <TokenFrame><img src={bounce_token} /><span>BOT</span></TokenFrame>,\n    symbol: 'BOT',\n    decimals: '18'\n  }, {\n    key: getWBTCAddress(chainId),\n    value: <TokenFrame><img src={wbtc_icon} /><span>WBTC</span></TokenFrame>,\n    symbol: 'WBTC',\n    decimals: '8'\n  }, {\n    key: getYFIAddress(chainId),\n    value: <TokenFrame><img src={yfi_icon} /><span>YFI</span></TokenFrame>,\n    symbol: 'YFI',\n    decimals: '18'\n  }]\n}\n\n\nexport const getIndexList = (count) => {\n  let poolIdList = [];\n  for (let i = 0; i < count; i++) {\n    poolIdList[i] = count - i - 1;\n  }\n  return poolIdList\n}\n\n\nexport const useEthBalance = (token) => {\n  const { active, account, library, chainId } = useActiveWeb3React();\n  const [ethBalance, setEthBalance] = useState(null)\n\n\n  useEffect(() => {\n    console.log('token---->', token)\n\n    if (active) {\n      if (token) {\n        const tokenContract = getContract(library, bounceERC20.abi, token)\n        tokenContract.methods.balanceOf(account).call().then(res => {\n          console.log('token balance', res)\n          setEthBalance(res)\n        })\n      } else {\n        const web3 = new Web3(library.provider)\n        web3.eth.getBalance(account)\n          .then(balance => {\n            console.log('eth balance', balance)\n            console.log(ethBalance)\n            setEthBalance(balance)\n          })\n      }\n\n    } else {\n      setEthBalance(null)\n    }\n\n  }, [active, token])\n\n  return { ethBalance }\n}\n\nexport const useTokenBalance = (address) => {\n  const { active, account, library, chainId } = useActiveWeb3React();\n  const [balance, setBalance] = useState(null)\n\n\n  useEffect(() => {\n\n    async function getBalance() {\n      try {\n        const tokenContract = getContract(library, bounceERC20.abi, address ? address : getBotAddress(chainId))\n        const balance = await tokenContract.methods.balanceOf(account).call()\n        setBalance(balance)\n      } catch (e) {\n        console.log('useTokenBalance:', e)\n        setBalance(null)\n      }\n    }\n\n    if (active) {\n      getBalance()\n    } else {\n      setBalance(null)\n    }\n\n  }, [active, account])\n\n\n  return { balance }\n}\n\n\n\nexport const useStoreHandleForm = (poolAdress, tokenAdress) => {\n  const { active, account, library, chainId } = useActiveWeb3React();\n  const { state, dispatch } = useContext(mainContext);\n\n\n  const [name, setName] = useState()\n  const [address, setAddress] = useState()\n  const [token, settToken] = useState({ symbol: null, decimals: null, balance: null })\n  const [participant, setParticipant] = useState()\n  const [password, setPassword] = useState()\n  const [ratio, setRatio] = useState()\n  const [level, setLevel] = useState()\n  const [minAmount, setMinAmount] = useState()\n  const [maxAmount, setMaxAmount] = useState()\n  const [times, setTimes] = useState()\n  const [amount, setAmount] = useState()\n  const [onlyBot, setOnlyBot] = useState(true)\n  const [days, setDays] = useState()\n  const [hours, setHours] = useState()\n  const [minutes, setMinutes] = useState()\n  const [limit, setLimit] = useState()\n  const [startPrice, setStartPrice] = useState()\n  const [reservePrice, setReservePrice] = useState()\n  const [balance, setBalance] = useState('0')\n  const [nftType, setNFTType] = useState()\n\n  const [nftID, setNFTID] = useState()\n\n\n  const [nft, setNFT] = useState()\n\n\n  const [addressError, setAddressError] = useState(false)\n  const [amountError, setAmountError] = useState(false)\n  const [ratioError, setRatioError] = useState(false)\n  const [timeError, setTimeError] = useState(false)\n  const [nameError, setNameError] = useState(false)\n  const [idError, setIDError] = useState(false)\n  const [startPriceError, setStartPriceError] = useState(false)\n  const [reservePricePriceError, setReservePricePriceError] = useState(false)\n\n\n  const [check, setCheck] = useState(null)\n\n\n  useEffect(() => {\n    if (!active) {\n      dispatch({ type: HANDLE_SHOW_CONNECT_MODAL, showConnectModal: true });\n    }\n  }, [active])\n\n  useEffect(() => {\n    const initToken = { symbol: null, decimals: null, balance: null }\n\n    async function getTokenInfo() {\n      try {\n        console.log('account:', account)\n        const tokenContract = getContract(library, bounceERC20.abi, address)\n        console.log('tokenContract:', tokenContract)\n        const balance = await tokenContract.methods.balanceOf(account).call()\n        setBalance(balance)\n        console.log('balance:', balance)\n        const symbol = await tokenContract.methods.symbol().call()\n        console.log('symbol:', symbol)\n        const decimals = await tokenContract.methods.decimals().call()\n        console.log('decimals:', decimals)\n        setAddressError(false)\n        settToken({ balance, symbol, decimals })\n      } catch (e) {\n        console.log('getTokenInfo error:', e)\n        settToken(initToken)\n        setAddressError('Address is invalid')\n      }\n    }\n\n    if (address) {\n      if (!nftType) {\n        getTokenInfo()\n      }\n    } else {\n      settToken(initToken)\n    }\n\n  }, [address])\n\n\n  function checkAmount() {\n    if (amount === '') {\n      setAmountError('Amount is required')\n    } else if (isGreaterThan(amount, weiToNum(balance, token.decimals))) {\n      setAmountError('Insufficient balance')\n    } else {\n      setAmountError(null)\n    }\n  }\n\n  function checkRatio() {\n    if (ratio === '') {\n      setRatioError('Ratio is required')\n    } else {\n      setRatioError(null)\n    }\n  }\n\n\n  useEffect(() => {\n    console.log('balance & amount:', amount, balance)\n    checkAmount()\n  }, [amount, token])\n\n\n  useEffect(() => {\n    checkRatio()\n  }, [ratio])\n\n\n  useEffect(() => {\n    if (amount, ratio) {\n      setLevel(new BigNumber(amount).dividedBy(new BigNumber(ratio)))\n    }\n  }, [amount, ratio])\n\n  function checkName() {\n    if (name === '') {\n      setNameError('Pool name is required')\n    } else {\n      setNameError(null)\n    }\n  }\n\n  useEffect(() => {\n    checkName()\n  }, [name])\n\n\n  useEffect(() => {\n    console.log('check:')\n    checkName()\n    checkRatio()\n    checkAmount()\n  }, [check])\n\n  return {\n    address, setAddress, addressError,\n    token,\n    amount, setAmount, amountError,setAmountError,\n    ratio, setRatio, ratioError,\n    times, setTimes,\n    minAmount, setMinAmount,\n    maxAmount, setMaxAmount,\n    level, setLevel,\n    name, setName, nameError,\n    onlyBot, setOnlyBot,\n    password, setPassword,\n    limit, setLimit,\n    days, setDays,\n    hours, setHours,\n    minutes, setMinutes,\n    timeError,\n    check, setCheck,\n    startPrice, setStartPrice, startPriceError,\n    reservePrice, setReservePrice, reservePricePriceError,\n    nftType, setNFTType,\n    nftID, setNFTID, idError, setIDError,\n    nft, setNFT\n  }\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/hooks.js",[],{"ruleId":"488","replacedBy":"489"},{"ruleId":"490","replacedBy":"491"},{"ruleId":"492","severity":1,"message":"493","line":2,"column":10,"nodeType":"494","messageId":"495","endLine":2,"endColumn":23},{"ruleId":"492","severity":1,"message":"496","line":51,"column":9,"nodeType":"494","messageId":"495","endLine":51,"endColumn":25},{"ruleId":"497","severity":1,"message":"498","line":61,"column":8,"nodeType":"499","endLine":61,"endColumn":10,"suggestions":"500"},{"ruleId":"492","severity":1,"message":"501","line":45,"column":13,"nodeType":"494","messageId":"495","endLine":45,"endColumn":18},{"ruleId":"492","severity":1,"message":"502","line":46,"column":12,"nodeType":"494","messageId":"495","endLine":46,"endColumn":25},{"ruleId":"497","severity":1,"message":"503","line":63,"column":8,"nodeType":"499","endLine":63,"endColumn":29,"suggestions":"504"},{"ruleId":"497","severity":1,"message":"505","line":79,"column":8,"nodeType":"499","endLine":79,"endColumn":17,"suggestions":"506"},{"ruleId":"492","severity":1,"message":"507","line":1,"column":17,"nodeType":"494","messageId":"495","endLine":1,"endColumn":27},{"ruleId":"492","severity":1,"message":"508","line":1,"column":29,"nodeType":"494","messageId":"495","endLine":1,"endColumn":38},{"ruleId":"492","severity":1,"message":"509","line":64,"column":9,"nodeType":"494","messageId":"495","endLine":64,"endColumn":15},{"ruleId":"492","severity":1,"message":"510","line":3,"column":8,"nodeType":"494","messageId":"495","endLine":3,"endColumn":15},{"ruleId":"492","severity":1,"message":"511","line":38,"column":25,"nodeType":"494","messageId":"495","endLine":38,"endColumn":39},{"ruleId":"492","severity":1,"message":"512","line":3,"column":10,"nodeType":"494","messageId":"495","endLine":3,"endColumn":22},{"ruleId":"513","severity":1,"message":"514","line":51,"column":26,"nodeType":"515","endLine":51,"endColumn":51},{"ruleId":"513","severity":1,"message":"514","line":54,"column":25,"nodeType":"515","endLine":54,"endColumn":48},{"ruleId":"497","severity":1,"message":"516","line":29,"column":8,"nodeType":"499","endLine":29,"endColumn":17,"suggestions":"517"},{"ruleId":"492","severity":1,"message":"518","line":39,"column":37,"nodeType":"494","messageId":"495","endLine":39,"endColumn":43},{"ruleId":"497","severity":1,"message":"519","line":55,"column":15,"nodeType":"520","endLine":58,"endColumn":15},{"ruleId":"521","severity":1,"message":"522","line":44,"column":55,"nodeType":"523","messageId":"524","endLine":61,"endColumn":12},{"ruleId":"497","severity":1,"message":"525","line":73,"column":6,"nodeType":"499","endLine":73,"endColumn":14,"suggestions":"526"},{"ruleId":"521","severity":1,"message":"522","line":88,"column":55,"nodeType":"523","messageId":"524","endLine":105,"endColumn":12},{"ruleId":"497","severity":1,"message":"525","line":117,"column":6,"nodeType":"499","endLine":117,"endColumn":14,"suggestions":"527"},{"ruleId":"497","severity":1,"message":"528","line":147,"column":6,"nodeType":"499","endLine":147,"endColumn":14,"suggestions":"529"},{"ruleId":"497","severity":1,"message":"525","line":187,"column":6,"nodeType":"499","endLine":187,"endColumn":14,"suggestions":"530"},{"ruleId":"492","severity":1,"message":"531","line":16,"column":13,"nodeType":"494","messageId":"495","endLine":16,"endColumn":22},{"ruleId":"492","severity":1,"message":"532","line":3,"column":21,"nodeType":"494","messageId":"495","endLine":3,"endColumn":34},{"ruleId":"497","severity":1,"message":"533","line":35,"column":8,"nodeType":"499","endLine":35,"endColumn":10,"suggestions":"534"},{"ruleId":"492","severity":1,"message":"532","line":3,"column":21,"nodeType":"494","messageId":"495","endLine":3,"endColumn":34},{"ruleId":"497","severity":1,"message":"533","line":29,"column":8,"nodeType":"499","endLine":29,"endColumn":10,"suggestions":"535"},{"ruleId":"497","severity":1,"message":"533","line":26,"column":8,"nodeType":"499","endLine":26,"endColumn":10,"suggestions":"536"},{"ruleId":"497","severity":1,"message":"533","line":32,"column":8,"nodeType":"499","endLine":32,"endColumn":10,"suggestions":"537"},{"ruleId":"497","severity":1,"message":"533","line":30,"column":8,"nodeType":"499","endLine":30,"endColumn":10,"suggestions":"538"},{"ruleId":"497","severity":1,"message":"539","line":29,"column":8,"nodeType":"499","endLine":29,"endColumn":10,"suggestions":"540"},{"ruleId":"541","severity":1,"message":"542","line":90,"column":49,"nodeType":"543","messageId":"544","endLine":90,"endColumn":50,"suggestions":"545"},{"ruleId":"541","severity":1,"message":"546","line":90,"column":67,"nodeType":"543","messageId":"544","endLine":90,"endColumn":68,"suggestions":"547"},{"ruleId":"541","severity":1,"message":"548","line":90,"column":69,"nodeType":"543","messageId":"544","endLine":90,"endColumn":70,"suggestions":"549"},{"ruleId":"541","severity":1,"message":"542","line":113,"column":49,"nodeType":"543","messageId":"544","endLine":113,"endColumn":50,"suggestions":"550"},{"ruleId":"541","severity":1,"message":"546","line":113,"column":67,"nodeType":"543","messageId":"544","endLine":113,"endColumn":68,"suggestions":"551"},{"ruleId":"541","severity":1,"message":"548","line":113,"column":69,"nodeType":"543","messageId":"544","endLine":113,"endColumn":70,"suggestions":"552"},{"ruleId":"541","severity":1,"message":"542","line":130,"column":49,"nodeType":"543","messageId":"544","endLine":130,"endColumn":50,"suggestions":"553"},{"ruleId":"541","severity":1,"message":"546","line":130,"column":67,"nodeType":"543","messageId":"544","endLine":130,"endColumn":68,"suggestions":"554"},{"ruleId":"541","severity":1,"message":"548","line":130,"column":69,"nodeType":"543","messageId":"544","endLine":130,"endColumn":70,"suggestions":"555"},{"ruleId":"556","severity":1,"message":"557","line":21,"column":49,"nodeType":"523","messageId":"558","endLine":21,"endColumn":51},{"ruleId":"497","severity":1,"message":"559","line":33,"column":8,"nodeType":"499","endLine":33,"endColumn":14,"suggestions":"560"},{"ruleId":"497","severity":1,"message":"561","line":29,"column":8,"nodeType":"499","endLine":29,"endColumn":19,"suggestions":"562"},{"ruleId":"513","severity":1,"message":"514","line":42,"column":26,"nodeType":"515","endLine":42,"endColumn":51},{"ruleId":"513","severity":1,"message":"514","line":45,"column":25,"nodeType":"515","endLine":45,"endColumn":48},{"ruleId":"497","severity":1,"message":"563","line":30,"column":6,"nodeType":"499","endLine":30,"endColumn":23,"suggestions":"564"},{"ruleId":"497","severity":1,"message":"565","line":12,"column":8,"nodeType":"499","endLine":12,"endColumn":19,"suggestions":"566"},{"ruleId":"497","severity":1,"message":"565","line":11,"column":8,"nodeType":"499","endLine":11,"endColumn":16,"suggestions":"567"},{"ruleId":"497","severity":1,"message":"568","line":31,"column":8,"nodeType":"499","endLine":31,"endColumn":22,"suggestions":"569"},{"ruleId":"497","severity":1,"message":"570","line":211,"column":8,"nodeType":"499","endLine":211,"endColumn":30,"suggestions":"571"},{"ruleId":"492","severity":1,"message":"508","line":1,"column":17,"nodeType":"494","messageId":"495","endLine":1,"endColumn":26},{"ruleId":"497","severity":1,"message":"561","line":27,"column":8,"nodeType":"499","endLine":27,"endColumn":19,"suggestions":"572"},{"ruleId":"541","severity":1,"message":"573","line":106,"column":68,"nodeType":"543","messageId":"544","endLine":106,"endColumn":69,"suggestions":"574"},{"ruleId":"541","severity":1,"message":"573","line":106,"column":90,"nodeType":"543","messageId":"544","endLine":106,"endColumn":91,"suggestions":"575"},{"ruleId":"492","severity":1,"message":"576","line":47,"column":8,"nodeType":"494","messageId":"495","endLine":47,"endColumn":10},{"ruleId":"497","severity":1,"message":"577","line":82,"column":8,"nodeType":"499","endLine":82,"endColumn":46,"suggestions":"578"},{"ruleId":"497","severity":1,"message":"519","line":86,"column":17,"nodeType":"520","endLine":97,"endColumn":19},{"ruleId":"579","severity":1,"message":"580","line":302,"column":52,"nodeType":"581","messageId":"582","endLine":302,"endColumn":54},{"ruleId":"583","severity":1,"message":"584","line":360,"column":33,"nodeType":"515","endLine":360,"endColumn":47},{"ruleId":"513","severity":1,"message":"514","line":381,"column":65,"nodeType":"515","endLine":384,"endColumn":52},{"ruleId":"492","severity":1,"message":"501","line":17,"column":13,"nodeType":"494","messageId":"495","endLine":17,"endColumn":18},{"ruleId":"492","severity":1,"message":"585","line":20,"column":18,"nodeType":"494","messageId":"495","endLine":20,"endColumn":25},{"ruleId":"492","severity":1,"message":"586","line":23,"column":21,"nodeType":"494","messageId":"495","endLine":23,"endColumn":31},{"ruleId":"492","severity":1,"message":"587","line":28,"column":23,"nodeType":"494","messageId":"495","endLine":28,"endColumn":35},{"ruleId":"492","severity":1,"message":"588","line":31,"column":22,"nodeType":"494","messageId":"495","endLine":31,"endColumn":33},{"ruleId":"492","severity":1,"message":"589","line":45,"column":11,"nodeType":"494","messageId":"495","endLine":45,"endColumn":24},{"ruleId":"497","severity":1,"message":"590","line":66,"column":8,"nodeType":"499","endLine":66,"endColumn":19,"suggestions":"591"},{"ruleId":"592","severity":1,"message":"593","line":176,"column":19,"nodeType":"594","messageId":"595","endLine":176,"endColumn":20},{"ruleId":"497","severity":1,"message":"596","line":183,"column":8,"nodeType":"499","endLine":183,"endColumn":34,"suggestions":"597"},{"ruleId":"497","severity":1,"message":"598","line":38,"column":8,"nodeType":"499","endLine":38,"endColumn":14,"suggestions":"599"},{"ruleId":"492","severity":1,"message":"600","line":3,"column":8,"nodeType":"494","messageId":"495","endLine":3,"endColumn":19},{"ruleId":"492","severity":1,"message":"588","line":14,"column":22,"nodeType":"494","messageId":"495","endLine":14,"endColumn":33},{"ruleId":"513","severity":1,"message":"514","line":24,"column":17,"nodeType":"515","endLine":24,"endColumn":38},{"ruleId":"513","severity":1,"message":"514","line":34,"column":30,"nodeType":"515","endLine":38,"endColumn":61},{"ruleId":"513","severity":1,"message":"514","line":42,"column":26,"nodeType":"515","endLine":42,"endColumn":51},{"ruleId":"513","severity":1,"message":"514","line":45,"column":25,"nodeType":"515","endLine":45,"endColumn":48},{"ruleId":"492","severity":1,"message":"601","line":21,"column":9,"nodeType":"494","messageId":"495","endLine":21,"endColumn":14},{"ruleId":"513","severity":1,"message":"514","line":32,"column":24,"nodeType":"515","endLine":32,"endColumn":46},{"ruleId":"513","severity":1,"message":"514","line":38,"column":24,"nodeType":"515","endLine":38,"endColumn":47},{"ruleId":"513","severity":1,"message":"514","line":43,"column":24,"nodeType":"515","endLine":43,"endColumn":50},{"ruleId":"513","severity":1,"message":"514","line":48,"column":24,"nodeType":"515","endLine":48,"endColumn":47},{"ruleId":"513","severity":1,"message":"514","line":53,"column":24,"nodeType":"515","endLine":53,"endColumn":46},{"ruleId":"492","severity":1,"message":"602","line":70,"column":37,"nodeType":"494","messageId":"495","endLine":70,"endColumn":44},{"ruleId":"497","severity":1,"message":"603","line":98,"column":6,"nodeType":"499","endLine":98,"endColumn":21,"suggestions":"604"},{"ruleId":"497","severity":1,"message":"563","line":127,"column":6,"nodeType":"499","endLine":127,"endColumn":23,"suggestions":"605"},{"ruleId":"492","severity":1,"message":"602","line":136,"column":37,"nodeType":"494","messageId":"495","endLine":136,"endColumn":44},{"ruleId":"492","severity":1,"message":"501","line":137,"column":11,"nodeType":"494","messageId":"495","endLine":137,"endColumn":16},{"ruleId":"492","severity":1,"message":"606","line":143,"column":10,"nodeType":"494","messageId":"495","endLine":143,"endColumn":21},{"ruleId":"492","severity":1,"message":"607","line":143,"column":23,"nodeType":"494","messageId":"495","endLine":143,"endColumn":37},{"ruleId":"492","severity":1,"message":"608","line":170,"column":21,"nodeType":"494","messageId":"495","endLine":170,"endColumn":33},{"ruleId":"492","severity":1,"message":"609","line":173,"column":27,"nodeType":"494","messageId":"495","endLine":173,"endColumn":45},{"ruleId":"492","severity":1,"message":"610","line":174,"column":34,"nodeType":"494","messageId":"495","endLine":174,"endColumn":59},{"ruleId":"497","severity":1,"message":"611","line":184,"column":6,"nodeType":"499","endLine":184,"endColumn":14,"suggestions":"612"},{"ruleId":"497","severity":1,"message":"613","line":218,"column":6,"nodeType":"499","endLine":218,"endColumn":15,"suggestions":"614"},{"ruleId":"497","severity":1,"message":"615","line":243,"column":6,"nodeType":"499","endLine":243,"endColumn":21,"suggestions":"616"},{"ruleId":"497","severity":1,"message":"617","line":248,"column":6,"nodeType":"499","endLine":248,"endColumn":13,"suggestions":"618"},{"ruleId":"592","severity":1,"message":"593","line":252,"column":15,"nodeType":"594","messageId":"595","endLine":252,"endColumn":16},{"ruleId":"497","severity":1,"message":"619","line":267,"column":6,"nodeType":"499","endLine":267,"endColumn":12,"suggestions":"620"},{"ruleId":"497","severity":1,"message":"621","line":275,"column":6,"nodeType":"499","endLine":275,"endColumn":13,"suggestions":"622"},"no-native-reassign",["623"],"no-negated-in-lhs",["624"],"no-unused-vars","'WalletConnect' is defined but never used.","Identifier","unusedVar","'showConnectModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.","ArrayExpression",["625"],"'state' is assigned a value but never used.","'connectedName' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'connector'. Either include it or remove the dependency array.",["626"],"React Hook useEffect has missing dependencies: 'active', 'dispatch', and 'library'. Either include them or remove the dependency array.",["627"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'onSign' is assigned a value but never used.","'lattice' is defined but never used.","'setStepIsHover' is assigned a value but never used.","'useWeb3React' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'active' and 'dispatch'. Either include them or remove the dependency array.",["628"],"'active' is assigned a value but never used.","Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pools', 'pools', 'pools'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has a missing dependency: 'fetchList'. Either include it or remove the dependency array.",["629"],["630"],"React Hook useEffect has a missing dependency: 'fetchStatus'. Either include it or remove the dependency array.",["631"],["632"],"'authToken' is assigned a value but never used.","'TextAreaInput' is defined but never used.","React Hook useEffect has missing dependencies: 'setCurStep' and 'setTitle'. Either include them or remove the dependency array. If 'setTitle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["633"],["634"],["635"],["636"],["637"],"React Hook useEffect has a missing dependency: 'setTitle'. Either include it or remove the dependency array. If 'setTitle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["638"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["639","640"],"Unnecessary escape character: \\+.",["641","642"],"Unnecessary escape character: \\%.",["643","644"],["645","646"],["647","648"],["649","650"],["651","652"],["653","654"],["655","656"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'isNext' and 'setReqData'. Either include them or remove the dependency array. If 'setReqData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["657"],"React Hook useEffect has a missing dependency: 'requiredList_json'. Either include it or remove the dependency array.",["658"],"React Hook useEffect has missing dependencies: 'address', 'chainId', and 'library'. Either include them or remove the dependency array.",["659"],"React Hook useEffect has missing dependencies: 'onChange' and 'options'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["660"],["661"],"React Hook useEffect has missing dependencies: 'errMsg', 'isRequire', 'name', 'onValChange', and 'onValueChange'. Either include them or remove the dependency array. If 'onValueChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["662"],"React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["663"],["664"],"Unnecessary escape character: \\-.",["665","666"],["667","668"],"'BN' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'errors'. Either include it or remove the dependency array. You can also do a functional update 'setErrors(e => ...)' if you only need 'errors' in the 'setErrors' call.",["669"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component topInfo must be in PascalCase or SCREAMING_SNAKE_CASE","'setName' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'setFromTotal' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'checkMyFSPool' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'queryTokenBalance'. Either include it or remove the dependency array.",["670"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'getFSPoolDetail'. Either include them or remove the dependency array.",["671"],"React Hook useEffect has a missing dependency: 'calcuTime'. Either include it or remove the dependency array.",["672"],"'numberToHex' is assigned a value but never used.","'toWei' is assigned a value but never used.","'chainId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'account', 'ethBalance', and 'library'. Either include them or remove the dependency array.",["673"],["674"],"'participant' is assigned a value but never used.","'setParticipant' is assigned a value but never used.","'setTimeError' is assigned a value but never used.","'setStartPriceError' is assigned a value but never used.","'setReservePricePriceError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["675"],"React Hook useEffect has missing dependencies: 'account', 'library', and 'nftType'. Either include them or remove the dependency array.",["676"],"React Hook useEffect has missing dependencies: 'balance' and 'checkAmount'. Either include them or remove the dependency array.",["677"],"React Hook useEffect has a missing dependency: 'checkRatio'. Either include it or remove the dependency array.",["678"],"React Hook useEffect has a missing dependency: 'checkName'. Either include it or remove the dependency array.",["679"],"React Hook useEffect has missing dependencies: 'checkAmount', 'checkName', and 'checkRatio'. Either include them or remove the dependency array.",["680"],"no-global-assign","no-unsafe-negation",{"desc":"681","fix":"682"},{"desc":"683","fix":"684"},{"desc":"685","fix":"686"},{"desc":"687","fix":"688"},{"desc":"689","fix":"690"},{"desc":"689","fix":"691"},{"desc":"692","fix":"693"},{"desc":"689","fix":"694"},{"desc":"695","fix":"696"},{"desc":"695","fix":"697"},{"desc":"695","fix":"698"},{"desc":"695","fix":"699"},{"desc":"695","fix":"700"},{"desc":"701","fix":"702"},{"messageId":"703","fix":"704","desc":"705"},{"messageId":"706","fix":"707","desc":"708"},{"messageId":"703","fix":"709","desc":"705"},{"messageId":"706","fix":"710","desc":"708"},{"messageId":"703","fix":"711","desc":"705"},{"messageId":"706","fix":"712","desc":"708"},{"messageId":"703","fix":"713","desc":"705"},{"messageId":"706","fix":"714","desc":"708"},{"messageId":"703","fix":"715","desc":"705"},{"messageId":"706","fix":"716","desc":"708"},{"messageId":"703","fix":"717","desc":"705"},{"messageId":"706","fix":"718","desc":"708"},{"messageId":"703","fix":"719","desc":"705"},{"messageId":"706","fix":"720","desc":"708"},{"messageId":"703","fix":"721","desc":"705"},{"messageId":"706","fix":"722","desc":"708"},{"messageId":"703","fix":"723","desc":"705"},{"messageId":"706","fix":"724","desc":"708"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"735","fix":"736"},{"desc":"737","fix":"738"},{"desc":"727","fix":"739"},{"messageId":"703","fix":"740","desc":"705"},{"messageId":"706","fix":"741","desc":"708"},{"messageId":"703","fix":"742","desc":"705"},{"messageId":"706","fix":"743","desc":"708"},{"desc":"744","fix":"745"},{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},{"desc":"729","fix":"754"},{"desc":"755","fix":"756"},{"desc":"757","fix":"758"},{"desc":"759","fix":"760"},{"desc":"761","fix":"762"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},"Update the dependencies array to be: [activate]",{"range":"767","text":"768"},"Update the dependencies array to be: [activatingConnector, connector]",{"range":"769","text":"770"},"Update the dependencies array to be: [account, active, dispatch, library]",{"range":"771","text":"772"},"Update the dependencies array to be: [ReqData, active, dispatch]",{"range":"773","text":"774"},"Update the dependencies array to be: [active, fetchList]",{"range":"775","text":"776"},{"range":"777","text":"776"},"Update the dependencies array to be: [active, fetchStatus]",{"range":"778","text":"779"},{"range":"780","text":"776"},"Update the dependencies array to be: [setCurStep, setTitle]",{"range":"781","text":"782"},{"range":"783","text":"782"},{"range":"784","text":"782"},{"range":"785","text":"782"},{"range":"786","text":"782"},"Update the dependencies array to be: [setTitle]",{"range":"787","text":"788"},"removeEscape",{"range":"789","text":"790"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"791","text":"792"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"793","text":"790"},{"range":"794","text":"792"},{"range":"795","text":"790"},{"range":"796","text":"792"},{"range":"797","text":"790"},{"range":"798","text":"792"},{"range":"799","text":"790"},{"range":"800","text":"792"},{"range":"801","text":"790"},{"range":"802","text":"792"},{"range":"803","text":"790"},{"range":"804","text":"792"},{"range":"805","text":"790"},{"range":"806","text":"792"},{"range":"807","text":"790"},{"range":"808","text":"792"},"Update the dependencies array to be: [data, isNext, setReqData]",{"range":"809","text":"810"},"Update the dependencies array to be: [checkList, requiredList_json]",{"range":"811","text":"812"},"Update the dependencies array to be: [active, account, library, address, chainId]",{"range":"813","text":"814"},"Update the dependencies array to be: [onChange, options, selOption]",{"range":"815","text":"816"},"Update the dependencies array to be: [curSel, onChange, options]",{"range":"817","text":"818"},"Update the dependencies array to be: [val, isError, onValueChange, name, errMsg, isRequire, onValChange]",{"range":"819","text":"820"},"Update the dependencies array to be: [days, hours, minutes, onChange]",{"range":"821","text":"822"},{"range":"823","text":"812"},{"range":"824","text":"790"},{"range":"825","text":"792"},{"range":"826","text":"790"},{"range":"827","text":"792"},"Update the dependencies array to be: [onlyBOT, balance, bidAmount, account, errors]",{"range":"828","text":"829"},"Update the dependencies array to be: [queryTokenBalance, toAddress]",{"range":"830","text":"831"},"Update the dependencies array to be: [active, chainId, account, getFSPoolDetail, dispatch]",{"range":"832","text":"833"},"Update the dependencies array to be: [calcuTime, time]",{"range":"834","text":"835"},"Update the dependencies array to be: [account, active, ethBalance, library, token]",{"range":"836","text":"837"},{"range":"838","text":"814"},"Update the dependencies array to be: [active, dispatch]",{"range":"839","text":"840"},"Update the dependencies array to be: [account, address, library, nftType]",{"range":"841","text":"842"},"Update the dependencies array to be: [amount, balance, checkAmount, token]",{"range":"843","text":"844"},"Update the dependencies array to be: [checkRatio, ratio]",{"range":"845","text":"846"},"Update the dependencies array to be: [checkName, name]",{"range":"847","text":"848"},"Update the dependencies array to be: [check, checkAmount, checkName, checkRatio]",{"range":"849","text":"850"},[1795,1797],"[activate]",[1942,1963],"[activatingConnector, connector]",[2430,2439],"[account, active, dispatch, library]",[805,814],"[ReqData, active, dispatch]",[2137,2145],"[active, fetchList]",[3439,3447],[4274,4282],"[active, fetchStatus]",[5441,5449],[1203,1205],"[setCurStep, setTitle]",[1033,1035],[787,789],[1148,1150],[800,802],[941,943],"[setTitle]",[2779,2780],"",[2779,2779],"\\",[2797,2798],[2797,2797],[2799,2800],[2799,2799],[3578,3579],[3578,3578],[3596,3597],[3596,3596],[3598,3599],[3598,3598],[4189,4190],[4189,4189],[4207,4208],[4207,4207],[4209,4210],[4209,4209],[1168,1174],"[data, isNext, setReqData]",[907,918],"[checkList, requiredList_json]",[822,839],"[active, account, library, address, chainId]",[446,457],"[onChange, options, selOption]",[433,441],"[curSel, onChange, options]",[1037,1051],"[val, isError, onValueChange, name, errMsg, isRequire, onValChange]",[6551,6573],"[days, hours, minutes, onChange]",[876,887],[3467,3468],[3467,3467],[3489,3490],[3489,3489],[3185,3223],"[onlyBOT, balance, bidAmount, account, errors]",[2658,2669],"[queryTokenBalance, toAddress]",[7022,7048],"[active, chainId, account, getFSPoolDetail, dispatch]",[1058,1064],"[calcuTime, time]",[2885,2900],"[account, active, ethBalance, library, token]",[3568,3585],[5433,5441],"[active, dispatch]",[6481,6490],"[account, address, library, nftType]",[6999,7014],"[amount, balance, checkAmount, token]",[7060,7067],"[checkRatio, ratio]",[7397,7403],"[checkName, name]",[7509,7516],"[check, checkAmount, checkName, checkRatio]"]
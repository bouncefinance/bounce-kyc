[{"/Users/qt/Desktop/boundce/bounce-kyc/src/index.js":"1","/Users/qt/Desktop/boundce/bounce-kyc/src/App.js":"2","/Users/qt/Desktop/boundce/bounce-kyc/src/reducer.js":"3","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/InitPage.jsx":"4","/Users/qt/Desktop/boundce/bounce-kyc/src/redux/index.js":"5","/Users/qt/Desktop/boundce/bounce-kyc/src/const.js":"6","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/index.jsx":"7","/Users/qt/Desktop/boundce/bounce-kyc/src/components/WalletConnect.js":"8","/Users/qt/Desktop/boundce/bounce-kyc/src/redux/reducer.js":"9","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/styled.js":"10","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/FixedSwap/Detail.js":"11","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Apply.jsx":"12","/Users/qt/Desktop/boundce/bounce-kyc/src/components/WalletItem.jsx":"13","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/Confirm.jsx":"14","/Users/qt/Desktop/boundce/bounce-kyc/src/web3/common.js":"15","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/FixedSwap/Hooks.js":"16","/Users/qt/Desktop/boundce/bounce-kyc/src/web3/address.js":"17","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/index.jsx":"18","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/TipLink.js":"19","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/BidModal.js":"20","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/message.js":"21","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/form.js":"22","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Form.js":"23","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/common.js":"24","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Button.js":"25","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/numberTransform.js":"26","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Modal.js":"27","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/AuctionTipModal.js":"28","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/index.jsx":"29","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/themeHooks.js":"30","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Home/index.jsx":"31","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/index.jsx":"32","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/PersonalInfo/index.jsx":"33","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ProjectList/index.jsx":"34","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Detail/index.jsx":"35","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/index.jsx":"36","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/LearnMore/index.jsx":"37","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/index.jsx":"38","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Layout.jsx":"39","/Users/qt/Desktop/boundce/bounce-kyc/src/components/styled.js":"40","/Users/qt/Desktop/boundce/bounce-kyc/src/web3/index.js":"41","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/styled.js":"42","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/ApplyModal.js":"43","/Users/qt/Desktop/boundce/bounce-kyc/src/hooks.js":"44","/Users/qt/Desktop/boundce/bounce-kyc/src/hooks/useLeftTime.js":"45","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/hooks.js":"46","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ProjectList/styled.js":"47","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Detail/styled.js":"48","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/TXModal.js":"49","/Users/qt/Desktop/boundce/bounce-kyc/src/hooks/useBalance.js":"50","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/styled.js":"51","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/config.js":"52","/Users/qt/Desktop/boundce/bounce-kyc/src/config/request_api.js":"53","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/LearnMore/styled.js":"54","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/Support.jsx":"55","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Card.jsx":"56","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Progress.jsx":"57","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/PersonalModal.jsx":"58","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/Crumbs.jsx":"59","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/CardHeader.jsx":"60","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step6.jsx":"61","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step5.jsx":"62","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step4.jsx":"63","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step3.jsx":"64","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/index.jsx":"65","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/index.jsx":"66","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/time.js":"67","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/styled.js":"68","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/styled.js":"69","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/styled.js":"70","/Users/qt/Desktop/boundce/bounce-kyc/src/config/utils/BOT_FUN.js":"71","/Users/qt/Desktop/boundce/bounce-kyc/src/config/utils/END_FUN.js":"72","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Select.jsx":"73","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Text.jsx":"74","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Upload.jsx":"75","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Button.jsx":"76","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Check.jsx":"77","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Form.jsx":"78","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Input.jsx":"79","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/Passage.jsx":"80","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/styled.js":"81","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/PersonalInfo/styled.js":"82","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step2.jsx":"83","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step1.jsx":"84","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Home/styled.js":"85","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/styled.js":"86","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step3.jsx":"87","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step2.jsx":"88","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step1.jsx":"89","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/SaleCard.jsx":"90"},{"size":152,"mtime":1610992639219,"results":"91","hashOfConfig":"92"},{"size":959,"mtime":1611157951953,"results":"93","hashOfConfig":"92"},{"size":829,"mtime":1611341191436,"results":"94","hashOfConfig":"92"},{"size":2132,"mtime":1611157951969,"results":"95","hashOfConfig":"92"},{"size":372,"mtime":1610992639219,"results":"96","hashOfConfig":"92"},{"size":7407,"mtime":1611499497331,"results":"97","hashOfConfig":"92"},{"size":2399,"mtime":1611557492201,"results":"98","hashOfConfig":"92"},{"size":3174,"mtime":1611632267375,"results":"99","hashOfConfig":"92"},{"size":979,"mtime":1611673533501,"results":"100","hashOfConfig":"92"},{"size":201,"mtime":1611333753503,"results":"101","hashOfConfig":"92"},{"size":17637,"mtime":1611501448134,"results":"102","hashOfConfig":"92"},{"size":2337,"mtime":1611334437443,"results":"103","hashOfConfig":"92"},{"size":698,"mtime":1611247064791,"results":"104","hashOfConfig":"92"},{"size":1275,"mtime":1611247064796,"results":"105","hashOfConfig":"92"},{"size":3366,"mtime":1611632199821,"results":"106","hashOfConfig":"92"},{"size":7530,"mtime":1611505597543,"results":"107","hashOfConfig":"92"},{"size":2500,"mtime":1611569939411,"results":"108","hashOfConfig":"92"},{"size":2646,"mtime":1611671546267,"results":"109","hashOfConfig":"92"},{"size":655,"mtime":1609477445041,"results":"110","hashOfConfig":"92"},{"size":3023,"mtime":1611632611087,"results":"111","hashOfConfig":"92"},{"size":1714,"mtime":1611162591074,"results":"112","hashOfConfig":"92"},{"size":155,"mtime":1610005028731,"results":"113","hashOfConfig":"92"},{"size":3879,"mtime":1611163422841,"results":"114","hashOfConfig":"92"},{"size":563,"mtime":1611162664973,"results":"115","hashOfConfig":"92"},{"size":1051,"mtime":1611162908528,"results":"116","hashOfConfig":"92"},{"size":2258,"mtime":1611159666819,"results":"117","hashOfConfig":"92"},{"size":5046,"mtime":1611338938585,"results":"118","hashOfConfig":"92"},{"size":4079,"mtime":1611162908532,"results":"119","hashOfConfig":"92"},{"size":1911,"mtime":1611488034942,"results":"120","hashOfConfig":"92"},{"size":545,"mtime":1609477445110,"results":"121","hashOfConfig":"92"},{"size":8553,"mtime":1611557492189,"results":"122","hashOfConfig":"92"},{"size":2113,"mtime":1611673018331,"results":"123","hashOfConfig":"92"},{"size":7227,"mtime":1611671546268,"results":"124","hashOfConfig":"92"},{"size":3638,"mtime":1611671546269,"results":"125","hashOfConfig":"92"},{"size":190,"mtime":1611111236804,"results":"126","hashOfConfig":"92"},{"size":6475,"mtime":1611671546265,"results":"127","hashOfConfig":"92"},{"size":10030,"mtime":1611636175637,"results":"128","hashOfConfig":"92"},{"size":4967,"mtime":1611673403269,"results":"129","hashOfConfig":"92"},{"size":9706,"mtime":1611558139180,"results":"130","hashOfConfig":"92"},{"size":936,"mtime":1611247064791,"results":"131","hashOfConfig":"92"},{"size":654,"mtime":1611503156065,"results":"132","hashOfConfig":"92"},{"size":2287,"mtime":1611247064797,"results":"133","hashOfConfig":"92"},{"size":3433,"mtime":1611567552195,"results":"134","hashOfConfig":"92"},{"size":301,"mtime":1611500621778,"results":"135","hashOfConfig":"92"},{"size":1099,"mtime":1609477445115,"results":"136","hashOfConfig":"92"},{"size":5540,"mtime":1611671546267,"results":"137","hashOfConfig":"92"},{"size":968,"mtime":1611111236808,"results":"138","hashOfConfig":"92"},{"size":81,"mtime":1611111236805,"results":"139","hashOfConfig":"92"},{"size":3414,"mtime":1611567552225,"results":"140","hashOfConfig":"92"},{"size":897,"mtime":1611633021198,"results":"141","hashOfConfig":"92"},{"size":3974,"mtime":1611567059440,"results":"142","hashOfConfig":"92"},{"size":552,"mtime":1611567059432,"results":"143","hashOfConfig":"92"},{"size":482,"mtime":1611629128079,"results":"144","hashOfConfig":"92"},{"size":1560,"mtime":1611488034939,"results":"145","hashOfConfig":"92"},{"size":891,"mtime":1611321139974,"results":"146","hashOfConfig":"92"},{"size":11877,"mtime":1611629128080,"results":"147","hashOfConfig":"92"},{"size":1216,"mtime":1611516867890,"results":"148","hashOfConfig":"92"},{"size":5682,"mtime":1611674298406,"results":"149","hashOfConfig":"92"},{"size":584,"mtime":1611488034945,"results":"150","hashOfConfig":"92"},{"size":1103,"mtime":1611557492187,"results":"151","hashOfConfig":"92"},{"size":3581,"mtime":1611671546263,"results":"152","hashOfConfig":"92"},{"size":7560,"mtime":1611671546263,"results":"153","hashOfConfig":"92"},{"size":5153,"mtime":1611677728509,"results":"154","hashOfConfig":"92"},{"size":2162,"mtime":1611671546260,"results":"155","hashOfConfig":"92"},{"size":370,"mtime":1611557492199,"results":"156","hashOfConfig":"92"},{"size":97,"mtime":1611333753497,"results":"157","hashOfConfig":"92"},{"size":2477,"mtime":1611383431634,"results":"158","hashOfConfig":"92"},{"size":5417,"mtime":1611636175639,"results":"159","hashOfConfig":"92"},{"size":1175,"mtime":1611333753497,"results":"160","hashOfConfig":"92"},{"size":2635,"mtime":1611333753494,"results":"161","hashOfConfig":"92"},{"size":484,"mtime":1611671546254,"results":"162","hashOfConfig":"92"},{"size":390,"mtime":1611671546255,"results":"163","hashOfConfig":"92"},{"size":2078,"mtime":1611636175642,"results":"164","hashOfConfig":"92"},{"size":348,"mtime":1611247064798,"results":"165","hashOfConfig":"92"},{"size":3924,"mtime":1611507613071,"results":"166","hashOfConfig":"92"},{"size":665,"mtime":1611157951973,"results":"167","hashOfConfig":"92"},{"size":1087,"mtime":1611557492195,"results":"168","hashOfConfig":"92"},{"size":373,"mtime":1611488034946,"results":"169","hashOfConfig":"92"},{"size":9292,"mtime":1611671546274,"results":"170","hashOfConfig":"92"},{"size":331,"mtime":1611111236809,"results":"171","hashOfConfig":"92"},{"size":10485,"mtime":1611636095126,"results":"172","hashOfConfig":"92"},{"size":2369,"mtime":1611333753496,"results":"173","hashOfConfig":"92"},{"size":3257,"mtime":1611671546260,"results":"174","hashOfConfig":"92"},{"size":6106,"mtime":1611671546258,"results":"175","hashOfConfig":"92"},{"size":9643,"mtime":1611557492192,"results":"176","hashOfConfig":"92"},{"size":1053,"mtime":1611488034943,"results":"177","hashOfConfig":"92"},{"size":5486,"mtime":1611671546267,"results":"178","hashOfConfig":"92"},{"size":4108,"mtime":1611636175641,"results":"179","hashOfConfig":"92"},{"size":4048,"mtime":1611488034940,"results":"180","hashOfConfig":"92"},{"size":12134,"mtime":1611636175638,"results":"181","hashOfConfig":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"1vieohx",{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"184"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"184"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"184"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"184"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"184"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"184"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"184"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"184"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"184"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"184"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"184"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"184"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"184"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"184"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"184"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"184"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"184"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"184"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"184"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"184"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"325","usedDeprecatedRules":"184"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"184"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"331","messages":"332","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333","usedDeprecatedRules":"184"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352","usedDeprecatedRules":"184"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"184"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"184"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"184"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"184"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"184"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"386","usedDeprecatedRules":"184"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"184"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"184"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"184"},"/Users/qt/Desktop/boundce/bounce-kyc/src/index.js",[],["396","397"],"/Users/qt/Desktop/boundce/bounce-kyc/src/App.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/reducer.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/InitPage.jsx",["398","399","400"],"import React, { useContext, useEffect } from 'react'\nimport { WalletConnect } from \"../components/WalletConnect\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { mainContext } from \"../reducer\";\nimport { BOUNCE_SELECT_WEB3_CONTEXT } from \"../const\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { LedgerConnector } from \"@web3-react/ledger-connector\";\n\nconst injected = new InjectedConnector({\n    supportedChainIds: [1, 3, 4, 5, 42, 31337]\n});\n\nconst POLLING_INTERVAL = 12000;\nconst RPC_URLS = {\n    1: \"https://eth-mainnet.alchemyapi.io/v2/k2--UT_xVVXMOvAyoxJYqtKhlmyBbqnX\",\n    4: \"https://rinkeby.infura.io/v3/8f6d3d5d7a1442a38d9e8050c31c1884\"\n};\n\nconst walletconnect = new WalletConnectConnector({\n    rpc: { 1: RPC_URLS[1] },\n    bridge: \"https://bridge.walletconnect.org\",\n    qrcode: true,\n    pollingInterval: POLLING_INTERVAL\n});\n\nconst ledger = new LedgerConnector({\n    chainId: 1,\n    url: RPC_URLS[1],\n    pollingInterval: POLLING_INTERVAL\n});\n\nconst wallets = {\n    MetaMask: injected,\n    WalletConnect: walletconnect,\n    Ledger: ledger,\n    //TrustWallet: injected,\n    //Squarelink: squarelink,\n    //Torus: torus,\n    //Aut\n}\n\nexport const InitPage = () => {\n\n    const context = useWeb3React();\n    const { activate } = context;\n\n    const { state } = useContext(mainContext);\n\n    const {\n        showConnectModal,\n    } = state;\n\n    useEffect(() => {\n        const localContent = window && window.localStorage.getItem(BOUNCE_SELECT_WEB3_CONTEXT)\n        // console.log('wallet content', localContent)\n        if (localContent) {\n            // console.log('activate', wallets[localContent])\n            activate(wallets[localContent]);\n        }\n    }, [])\n\n    return <></>\n\n    // return (\n    //     <>\n    //         {showConnectModal && (\n    //             <div className=\"modal-show\">\n    //                 <div className=\"wrapper\">\n    //                     <WalletConnect/>\n    //                 </div>\n    //             </div>\n    //         )}\n    //         </>\n\n    // )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/redux/index.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/const.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/WalletConnect.js",["401","402"],"import React, { useContext, useEffect, useState } from 'react';\nimport { useWeb3React } from \"@web3-react/core\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { BOUNCE_SELECT_WEB3_CONTEXT } from \"../const\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { LedgerConnector } from \"@web3-react/ledger-connector\";\nimport { myContext } from '../redux';\nimport Confirm from '../pages/components/Modal/Confirm'\nimport WalletItem from './WalletItem'\nimport icon_matemask from '../assets/icons/matemask.svg'\nimport icon_walletconnect from '../assets/icons/walletconnect.svg'\n// import icon_ledger from '../assets/images/Ledger.png'\n\n\nconst injected = new InjectedConnector({\n    supportedChainIds: [1, 3, 4, 5, 42, 31337]\n});\n\nconst POLLING_INTERVAL = 12000;\nconst RPC_URLS = {\n    1: \"https://eth-mainnet.alchemyapi.io/v2/k2--UT_xVVXMOvAyoxJYqtKhlmyBbqnX\",\n    4: \"https://rinkeby.infura.io/v3/8f6d3d5d7a1442a38d9e8050c31c1884\"\n};\n\nconst walletconnect = new WalletConnectConnector({\n    rpc: { 1: RPC_URLS[1] },\n    bridge: \"https://bridge.walletconnect.org\",\n    qrcode: true,\n    pollingInterval: POLLING_INTERVAL\n});\n\nconst ledger = new LedgerConnector({\n    chainId: 1,\n    url: RPC_URLS[1],\n    pollingInterval: POLLING_INTERVAL\n});\n\nconst wallets = {\n    MetaMask: injected,\n    WalletConnect: walletconnect,\n    Ledger: ledger\n}\n\nexport const WalletConnect = () => {\n    const { dispatch } = useContext(myContext);\n\n    const [activatingConnector, setActivatingConnector] = useState();\n    const [currentConnector] = useState();\n\n    const {\n        connector,\n        library,\n        account,\n        activate,\n        active,\n    } = useWeb3React()\n\n    useEffect(() => {\n        if (activatingConnector && activatingConnector === connector) {\n            setActivatingConnector(undefined);\n        }\n    }, [activatingConnector]);\n\n\n    useEffect(() => {\n        // console.log(account, account, library)\n        if (account && active && library) {\n            dispatch({ type: 'CONNECT_WALLET', value: false });\n        }\n    }, [account]);\n\n    function onConnect(currentConnector, name) {\n        setActivatingConnector(currentConnector);\n        window && window.localStorage.setItem(BOUNCE_SELECT_WEB3_CONTEXT, name)\n        activate(wallets[name]);\n    }\n\n    return (\n        <Confirm\n            title='Connect to a wallet'\n            tip=\"To participate in Bounce you first need to connect a wallet. Please select an option below. You can also connect a Ledger via your Metamask.\"\n        >\n\n            <div style={{ marginTop: 28 }}>\n                <WalletItem name='MetaMask' icon={icon_matemask} onClick={() => {\n                    onConnect(currentConnector, 'MetaMask')\n                }} />\n                <WalletItem name='WalletConnect' icon={icon_walletconnect} onClick={() => {\n                    onConnect(currentConnector, 'WalletConnect')\n                }} />\n\n                {/* <WalletItem name='Ledger' icon={icon_ledger} onClick={() => {\n                    onConnect(currentConnector, 'Ledger')\n                }} /> */}\n            </div>\n        </Confirm>\n\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/redux/reducer.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/FixedSwap/Detail.js",["403","404","405","406","407","408"],"import React, {useState, useEffect, useContext} from 'react';\nimport {\n    Address,\n    ITextR,\n    LayoutFrame, LineDivider,\n    OText2, OText5,\n    Pool,\n    Progress,\n    renderTime\n} from \"../../components/common/Layout\";\nimport icon_return from '../../assets/images/icon-return.svg'\nimport {usePoolDetail} from \"./Hooks\";\nimport BigNumber from \"bignumber.js\";\nimport {fromWei, getProgress, numToWei, weiDiv, weiToNum, weiToNumber} from \"../../utils/numberTransform\";\nimport classNames from \"classnames\";\nimport {useParams} from 'react-router-dom';\nimport {Form, Input} from \"../../components/common/Form\";\nimport icon_max from \"../../assets/icons/icon-max.svg\";\nimport {Button} from \"../../components/common/Button\";\nimport {useEthBalance, useTokenBalance, useTokenList} from \"../../web3/common\";\nimport {getContract, useActiveWeb3React} from \"../../web3\";\nimport fixSwap from \"../../web3/abi/BouncePro.json\";\nimport {BOUNCE_PRO} from \"../../web3/address\";\nimport Web3 from 'web3'\nimport {useHistory} from 'react-router-dom'\nimport {\n    BidModal,\n    initStatus,\n    errorStatus,\n    confirmStatus,\n    pendingStatus,\n    cancelStatus,\n    claimSuccessStatus\n} from \"../../components/common/BidModal\";\nimport {useLeftTime} from \"../../hooks/useLeftTime\";\nimport {mainContext} from \"../../reducer\";\nimport {useIsXSDown} from '../../utils/themeHooks';\nimport bounceERC20 from \"../../web3/abi/bounceERC20.json\";\nimport {AuctionTipModal} from \"../../components/common/AuctionTipModal\";\nimport Modal from \"../../components/common/Modal\";\nimport {Message} from \"../../components/common/message\";\nimport {TipLink} from \"../../components/common/TipLink\";\nimport {CREATOR_CLAIMED_MESSAGE} from \"../../const\";\nimport {validateForm} from \"../../utils/form\";\nimport {isGreaterThan} from \"../../utils/common\";\n\nconst {BN, toWei} = Web3.utils\n\nconst bidSuccessStatus = {\n    status: 3,\n    title: 'Congratulations!',\n    content: 'You have successfully bidded and your swapped tokens are automatically sent to your wallet. You can now make more bids.'\n}\n\n\nexport const FSPoolDetail = () => {\n    const { poolId } = useParams()\n    const history = useHistory()\n    const {state} = useContext(mainContext);\n    const {ethPrice, BOTPrice, BTCPrice} = state\n    const {id} = useParams();\n    const {account, library, chainId} = useActiveWeb3React()\n    const {balance} = useTokenBalance()\n    const tokenOptions = useTokenList()\n    const {setTime, leftTime} = useLeftTime()\n    const [bidAmount, setBidAmount] = useState()\n    const [bidStatus, setBidStatus] = useState(initStatus)\n    const [showTip, setShowTip] = useState()\n    const [errors, setErrors] = useState({amount: ''})\n\n    const isXSDown = useIsXSDown();\n\n    const {name, address, symbol, decimals, limit, time, fromBidAmount, fromAmount, toAmount, status, isMine, toBidAmount, onlyBOT, claimed, toSymbol, toAddress, toDecimals, joinStatus} = usePoolDetail(id)\n\n    const {ethBalance} = useEthBalance(toAddress)\n\n    useEffect(() => {\n        if (onlyBOT && isGreaterThan(toWei('0.1'), balance) && !bidAmount) {\n            errors.amount='Sorry! You are not qualified as bot holder.'\n            setErrors(errors)\n        }\n    }, [onlyBOT, balance, bidAmount, account])\n\n    let timer = null\n    useEffect(() => {\n        timer = setInterval(() => {\n            const date = new Date(time * 1000);\n            const now = new Date();\n            const lefttime = date - now;\n            if (lefttime >= 1000) {\n                setTime(lefttime)\n            } else if (0 < lefttime && lefttime < 1000) {\n                window.location.reload()\n            } else {\n                clearInterval(timer)\n            }\n        }, (1000));\n        return () => {\n            clearInterval(timer)\n        }\n    }, [setTime, time]);\n\n\n    const onBid = async () => {\n        setShowTip(false)\n        let tokenContract\n\n        if (toAddress) {\n            tokenContract = getContract(library, bounceERC20.abi, toAddress)\n        }\n        const bounceContract = getContract(library, fixSwap.abi, BOUNCE_PRO(chainId))\n        const weiAmount = numToWei(bidAmount, toDecimals);\n\n        setBidStatus(confirmStatus);\n        try {\n            if (toAddress) {\n                await tokenContract.methods.approve(\n                    BOUNCE_PRO(chainId),\n                    weiAmount,\n                )\n                    .send({from: account});\n                setBidStatus(confirmStatus);\n            }\n            bounceContract.methods.fixPoolSwapV2(\n                id,\n                weiAmount)\n                .send({from: account, value: toAddress ? 0 : weiAmount})\n                .on('transactionHash', hash => {\n                    setBidStatus(pendingStatus)\n                })\n                .on('receipt', (_, receipt) => {\n                    setBidStatus(bidSuccessStatus)\n                })\n                .on('error', (err, receipt) => {\n                    setBidStatus(errorStatus)\n                })\n        } catch (e) {\n            if (e.code === 4001) {\n                setBidStatus(cancelStatus)\n            } else {\n                setBidStatus(errorStatus)\n            }\n        }\n\n    }\n\n\n    console.log('poolid--->', poolId)\n\n\n    const onClaim = async () => {\n        const bounceContract = getContract(library, fixSwap.abi, BOUNCE_PRO(chainId))\n        setBidStatus(confirmStatus);\n        try {\n            bounceContract.methods.fixPoolWithdraw()\n                .send({from: account})\n                .on('transactionHash', hash => {\n                    setBidStatus(pendingStatus)\n                })\n                .on('receipt', (_, receipt) => {\n                    console.log('bid fixed swap receipt:', receipt)\n                    setBidStatus(claimSuccessStatus)\n                })\n                .on('error', (err, receipt) => {\n                    setBidStatus(errorStatus)\n                })\n        } catch (e) {\n            if (e.code === 4001) {\n                setBidStatus(cancelStatus)\n            } else {\n                setBidStatus(errorStatus)\n            }\n        }\n\n    }\n\n    const loadPrice = (toAddress) => {\n        const toToken = tokenOptions.find(item => {\n            return toAddress.toLowerCase() === item.key.toLowerCase()\n        })\n        switch (toToken.symbol) {\n            case 'USDT':\n                return '1'\n\n            case 'BOT':\n                return BOTPrice\n\n            case 'WBTC':\n                return BTCPrice\n            default:\n                return ethPrice\n\n        }\n    }\n\n    const handleChange = async event => {\n        event.preventDefault();\n        const {name, value} = event.target;\n        switch (name) {\n            case \"amount\":\n                errors.amount = ''\n                const amountValue = value.replace(/[^\\d.]/g, '')\n                setBidAmount(amountValue)\n                console.log('wei amount', numToWei(amountValue, decimals))\n                if (!ethBalance || (ethBalance && isGreaterThan(numToWei(amountValue, decimals), ethBalance))) {\n                    errors.amount = 'you do not have enough balance'\n                }\n                if (limit &&  isGreaterThan(limit, '0')  && isGreaterThan(numToWei(amountValue, toDecimals), limit)) {\n                    errors.amount = 'maximum allocation per wallet is ' + weiToNum(limit, toDecimals)\n                }\n                break\n            default:\n        }\n        console.log('final errors', errors)\n        setErrors(errors)\n    };\n\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        console.log('handleSubmit', event)\n        if (validateForm(errors)) {\n            setShowTip(true)\n        }\n    }\n\n    return (\n        <LayoutFrame style={{\n            marginTop: 27,\n            paddingBottom: 56,\n            paddingLeft: isXSDown ? '20px' : '0',\n            paddingRight: isXSDown ? '20px' : '0'\n        }}>\n            {isMine ?\n                <>\n                    {status === 'Live' && (\n                        <Message type={'success'}\n                                 content={'The auction is still live, please wait patiently until your auction is filled or closed.'}/>\n                    )}\n                    {status === 'Filled' && (\n                        <Message type={'success'}\n                                 content={'Congratulations! Your auction is complete. All your tokens are auctioned and your fund is automatically sent to your wallet.'}/>\n                    )}\n                    {status === 'Closed' && !claimed && (\n                        <Message type={'error'}\n                                 content={'Unfortunately, your pool is not fully filled and closed. Please claim back the unswapped tokens manually.'}/>\n                    )}\n                    {status === 'Closed' && claimed && (\n                        <Message type={'success'}\n                                 content={CREATOR_CLAIMED_MESSAGE}/>\n                    )}\n                </>\n                : null}\n\n\n            {!isMine ?\n                <>\n                    {status === 'Live' && joinStatus && (\n                        <Message type={'success'}\n                                 content={'You have successfully bidded and your swapped tokens are automatically sent to your wallet. You can now make more bids.'}/>\n                    )}\n                    {status !== 'Live' && (\n                        <Message content={'This auction is finished, please visit other live auctions.'}/>\n                    )}\n                </>\n                : null}\n\n\n            <Pool.Return onClick={() => {\n                history.goBack()\n            }} src={icon_return}/>\n            <LayoutFrame width={'1072px'} style={{padding: '32px 0', margin: 'auto', marginTop: 0}}>\n                <Pool.Mode>Fixed-Swap</Pool.Mode>\n                <Pool.Header><span>{name}</span></Pool.Header>\n                <Address style={{wordBreak: isXSDown ? 'break-all' : 'normal'}}>{address}</Address>\n                <Pool.Content style={{marginTop: 40}}>\n\n                    <Pool.Content width={isXSDown ? '100%' : '456px'} style={{marginTop: 0}}>\n\n                        <Pool.Content width={isXSDown ? '100%' : '456px'}\n                                      style={{marginTop: 0, flexDirection: 'column'}}>\n                            <Pool.Status style={{width: 'fit-content'}} className={classNames('status', status)}><i\n                                className={status}/>{status}</Pool.Status>\n                            <ITextR style={{\n                                marginTop: 8,\n                                textAlign: 'left'\n                            }}>{`Participant: ${onlyBOT ? 'BOT holder' : 'Public'}`}</ITextR>\n                        </Pool.Content>\n\n                        <Pool.Block style={{width: '100%'}}>\n                            <span>Fixed Swap Ratio</span>\n                            <span>{fromAmount && toAmount && `1 ${toSymbol} = ${(weiDiv(fromWei(fromAmount, decimals), fromWei(toAmount, toDecimals)))} ${symbol && symbol}`}</span>\n                        </Pool.Block>\n\n                        <Pool.Block style={{width: isXSDown ? '100%' : '200px'}}>\n                            <span>Price,$</span>\n                            <span>{(toAmount && fromAmount) && new BigNumber(weiDiv(fromWei(toAmount, toDecimals), fromWei(fromAmount, decimals))).multipliedBy(chainId === 56 ? '29' : toAddress ? loadPrice(toAddress) : ethPrice).toFixed(6).toString()}</span>\n                        </Pool.Block>\n\n                        <Pool.Block style={{width: isXSDown ? '100%' : '200px'}}>\n                            <span>Maximum Allocation per wallet</span>\n                            <span>{limit && (limit == 0 ? 'No limit' : `${weiToNumber(limit)} ${toSymbol}`)}</span>\n                        </Pool.Block>\n\n                        <OText5 style={{\n                            width: 480,\n                            marginTop: 40,\n                            fontSize: 12,\n                            fontFamily: 'IBM Plex Mono',\n                            fontWeight: 500\n                        }}>Auction\n                            progress: {toBidAmount && weiToNumber(toBidAmount, toDecimals)} {toSymbol}\n                            <span\n                                style={{opacity: .3}}> / {toAmount && weiToNumber(toAmount, toDecimals)} {toSymbol}</span>\n                        </OText5>\n                        {fromBidAmount && fromAmount && (\n                            <Progress style={{marginTop: 16}} height={'5px'}\n                                      className={classNames('progress', toBidAmount === toAmount ? 'Filled' : status)}>\n                                <Progress.Value style={{width: `${getProgress(toBidAmount, toAmount)}%`}}\n                                                className={classNames('progress-value', toBidAmount === toAmount ? 'Filled' : status)}/>\n                            </Progress>\n                        )}\n\n                    </Pool.Content>\n\n                    <Pool.Content width={'auto'}\n                                  style={{\n                                      height: 'fit-content',\n                                      width: isXSDown ? '100%' : '480px',\n                                      flexDirection: 'column',\n                                      padding: isXSDown ? '48px 20px' : '48px 56px',\n                                      justifyContent: 'center',\n                                      marginTop: 0,\n                                      backgroundColor: 'rgba(248, 248, 251, 1)'\n                                  }}>\n\n                        {isMine ? (\n                            <>\n                                <OText2 style={{textAlign: 'center', marginTop: 8}}>My Pool</OText2>\n                                {renderTime(leftTime)}\n                                <Pool.Meta>\n                                    <div>Total amount:</div>\n                                    <div>{`${toAmount && weiToNumber(toAmount, toDecimals)} ${toSymbol}`}</div>\n                                </Pool.Meta>\n\n                                <Pool.Meta>\n                                    <div>Successful bid amount:</div>\n                                    <div>{toBidAmount && `${weiToNumber(toBidAmount, toDecimals)} ${toSymbol}`}</div>\n                                </Pool.Meta>\n\n                                {(status === 'Closed' && !claimed) ?\n                                    <Button black onClick={onClaim}>Claim your unswapped tokens</Button> : null}\n\n                            </>\n                        ) : (\n                            <form id=\"bid-fs-form\" onSubmit={handleSubmit}>\n                                <OText2 style={{textAlign: 'center', marginTop: 0, fontSize: 26}}>Join The Pool</OText2>\n                                {renderTime(leftTime)}\n                                <LineDivider style={{marginTop: 0}}/>\n                                <Pool.topInfo>\n                                    <span>Your Bid Amount</span>\n                                    <span>{`Balance: ${ethBalance ? weiToNumber(ethBalance, toDecimals) : '--'}`} {toSymbol}</span>\n                                </Pool.topInfo>\n                                <Form\n                                    error={errors.amount}\n                                    top={'0px'} width={'100%'}\n                                    input={<Input\n                                        style={{\n                                            padding: '8px 0',\n                                            color: '#1F191B',\n                                            fontSize: 16,\n                                            lineHeight: '20px',\n                                            fontFamily: 'Helvetica Neue',\n                                            fontWeight: \"bold\"\n                                        }}\n                                        name={'amount'}\n                                        placeholder={'Bid Amount'}\n                                        disabled={onlyBOT && isGreaterThan(toWei('0.1'), balance  )}\n                                        value={bidAmount}\n                                        onChange={handleChange}\n                                    />} name={' '} addonAfter={(<img onClick={() => {\n                                    console.log('set max amount', ethBalance)\n                                    setBidAmount(fromWei(ethBalance, toDecimals))\n                                }} src={icon_max}/>)}\n                                />\n\n                                <Button\n                                    style={{marginTop: 50}}\n                                    disabled={status !== 'Live' || !validateForm(errors) || !bidAmount}\n                                    black\n                                >Go\n                                </Button>\n\n                                <TipLink/>\n                            </form>\n                        )}\n\n                    </Pool.Content>\n\n                </Pool.Content>\n\n\n            </LayoutFrame>\n\n\n            <BidModal modalStatus={bidStatus} onDismiss={() => {\n                setBidStatus(initStatus)\n            }}/>\n\n            <Modal\n                closeable\n                isOpen={showTip}\n                onDismiss={() => {\n                    setShowTip(false)\n                }}\n                maxWidth={'450px'}\n            >\n                <AuctionTipModal type={0} auction={onBid}/>\n            </Modal>\n\n        </LayoutFrame>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Apply.jsx",["409","410","411"],"import React, { useContext, useEffect, useState } from 'react'\nimport { Button } from \"../../components/common/Button\";\nimport bounceERC20 from '../../web3/abi/bounceERC20.json'\nimport BounceProVoting from '../../web3/abi/BounceProVoting.json'\n\nimport { ApplyModal } from \"./ApplyModal\";\nimport {\n  initStatus,\n  approveStatus,\n  pendingStatus,\n  confirmStatus,\n  successStatus,\n  errorStatus,\n  cancelStatus\n} from \"./ApplyModal\";\nimport {getContract, useActiveWeb3React} from \"../../web3\";\nimport {BOT, BOUNCE_PRO_VOTING} from \"../../web3/address\";\nimport Web3 from \"web3\";\n\nexport const Apply = () => {\n\n  const [modalStatus, setModalStatus] = useState(initStatus)\n  const { account, library, chainId, active } = useActiveWeb3React()\n\n  const onApply = async () => {\n    console.log('onApply', active)\n    setModalStatus(approveStatus);\n\n    try {\n      const tokenContract = getContract(library, bounceERC20.abi, BOT(chainId))\n      const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n\n      const result = await tokenContract.methods.approve(\n        BOUNCE_PRO_VOTING(chainId),\n        '300000000000000000',\n      )\n        .send({ from: account });\n      setModalStatus(confirmStatus);\n      if (result.status) {\n        await bounceContract.methods.create('1')\n          .send({ from: account })\n          .on('transactionHash', hash => {\n            setModalStatus(pendingStatus)\n          })\n          .on('receipt', (_, receipt) => {\n            setModalStatus(successStatus)\n          })\n          .on('error', (err, receipt) => {\n            setModalStatus(errorStatus)\n          })\n      } else {\n        setModalStatus(errorStatus)\n      }\n    } catch (err) {\n      if (err.code === 4001) {\n        setModalStatus(cancelStatus)\n      } else {\n        setModalStatus(errorStatus)\n      }\n      console.log('err', err);\n    }\n  };\n\n  const onSign = async () =>{\n    const web3 = new Web3(library.provider);\n    const sign = await web3.eth.personal.sign('0x1',account)\n    console.log('sign',sign)\n  }\n\n\n  return (\n    <div>\n      <Button onClick={onApply}>Apply</Button>\n      <ApplyModal onOK={() => {\n        setModalStatus(initStatus)\n        //history.goBack()\n      }} onDismiss={() => {\n        setModalStatus(initStatus)\n      }} modalStatus={modalStatus} />\n    </div>\n  )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/components/WalletItem.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/Confirm.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/web3/common.js",["412","413"],"import React, { useEffect, useState } from 'react';\nimport bounceERC20 from '../web3/abi/bounceERC20.json'\nimport { useActiveWeb3React } from \"./index\";\nimport { getContract } from \"../web3\";\nimport { getBotAddress, getUSDTAddress, getWBTCAddress, getYFIAddress } from \"./address\";\nimport Web3 from 'web3'\nimport { TokenFrame } from \"../components/common/Layout\";\nimport icon_usdt from '../assets/icons/icon-usdt.png'\nimport bounce_token from '../assets/icons/bounce_token.png'\nimport wbtc_icon from '../assets/icons/wbtc_icon.png'\nimport yfi_icon from '../assets/icons/yfi_icon.png'\nimport icon_eth from '../assets/icons/icon_eth.svg'\nimport {useActivePlatform} from \"../hooks\";\n\nexport const useTokenList = () => {\n  const { chainId } = useActiveWeb3React();\n  const { Psymbol } = useActivePlatform()\n\n  return [{\n    key: '0x0000000000000000000000000000000000000000',\n    value: <TokenFrame><img alt=\"\" src={icon_eth} /><span>{Psymbol}</span></TokenFrame>,\n    symbol: Psymbol,\n    decimals: '18'\n\n  }, {\n    key: getUSDTAddress(chainId),\n    value: <TokenFrame><img alt=\"\" src={icon_usdt} /><span>USDT</span></TokenFrame>,\n    symbol: 'USDT',\n    decimals: '6'\n  }, {\n    key: getBotAddress(chainId),\n    value: <TokenFrame><img alt=\"\" src={bounce_token} /><span>BOT</span></TokenFrame>,\n    symbol: 'BOT',\n    decimals: '18'\n  }, {\n    key: getWBTCAddress(chainId),\n    value: <TokenFrame><img alt=\"\" src={wbtc_icon} /><span>WBTC</span></TokenFrame>,\n    symbol: 'WBTC',\n    decimals: '8'\n  }, {\n    key: getYFIAddress(chainId),\n    value: <TokenFrame><img alt=\"\" src={yfi_icon} /><span>YFI</span></TokenFrame>,\n    symbol: 'YFI',\n    decimals: '18'\n  }]\n}\n\n\nexport const getIndexList = (count) => {\n  let poolIdList = [];\n  for (let i = 0; i < count; i++) {\n    poolIdList[i] = count - i - 1;\n  }\n  return poolIdList\n}\n\n\nexport const useEthBalance = (token) => {\n  const { active, account, library } = useActiveWeb3React();\n  const [ethBalance, setEthBalance] = useState(null)\n\n\n  useEffect(() => {\n    console.log('token---->', token)\n\n    if (active) {\n      if (token) {\n        const tokenContract = getContract(library, bounceERC20.abi, token)\n        tokenContract.methods.balanceOf(account).call().then(res => {\n          console.log('token balance', res)\n          setEthBalance(res)\n        })\n      } else {\n        const web3 = new Web3(library.provider)\n        web3.eth.getBalance(account)\n          .then(balance => {\n            console.log('eth balance', balance)\n            console.log(ethBalance)\n            setEthBalance(balance)\n          })\n      }\n\n    } else {\n      setEthBalance(null)\n    }\n\n  }, [active, token, account])\n\n  return { ethBalance }\n}\n\nexport const useTokenBalance = (address) => {\n  const { active, account, library, chainId } = useActiveWeb3React();\n  const [balance, setBalance] = useState(null)\n\n\n  useEffect(() => {\n\n    async function getBalance() {\n      try {\n        const tokenContract = getContract(library, bounceERC20.abi, address ? address : getBotAddress(chainId))\n        const balance = await tokenContract.methods.balanceOf(account).call()\n        setBalance(balance)\n      } catch (e) {\n        console.log('useTokenBalance:', e)\n        setBalance(null)\n      }\n    }\n\n    if (active) {\n      getBalance()\n    } else {\n      setBalance(null)\n    }\n\n  }, [active, account])\n\n\n  return { balance }\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/FixedSwap/Hooks.js",["414","415","416","417","418","419","420","421","422"],"import { getContract, useActivePlatform, useActiveWeb3React } from \"../../web3\";\nimport { useContext, useEffect, useState } from \"react\";\nimport bounceERC20 from \"../../web3/abi/bounceERC20.json\";\nimport BouncePro from '../../web3/abi/BouncePro.json'\nimport { mainContext } from '../../reducer'\n\nimport BigNumber from \"bignumber.js\";\nimport { BOUNCE_PRO } from \"../../web3/address\";\nimport { isGreaterThan } from \"../../utils/common\";\nimport { HANDLE_SHOW_CONNECT_MODAL } from \"../../const\";\nimport {useTokenList} from \"../../web3/common\";\n\n\nexport const usePoolDetail = (id = 0) => {\n    const { active, account, library, chainId } = useActiveWeb3React();\n\n    const { state, dispatch } = useContext(mainContext);\n\n    const [joinStatus, setJoinStatus] = useState(false)\n    const [name, setName] = useState(null)\n    const [symbol, setSymbol] = useState('')\n    const [toSymbol, setToSymbol] = useState()\n    const [address, setAddress] = useState(null)\n    const [toAddress, setToAddress] = useState(null)\n    const [decimals, setDecimals] = useState()\n    const [toDecimals, setToDecimals] = useState()\n    const [toAmount, setToAmount] = useState(null)\n    const [fromTotal, setFromTotal] = useState(null)\n    const [limit, setLimit] = useState(null)\n    const [isMine, setIsMine] = useState(false)\n    const [password, setPassword] = useState()\n    const [time, setTime] = useState()\n    const [fromBidAmount, setFromBidAmount] = useState()\n    const [toBidAmount, setToBidAmount] = useState()\n    const [fromAmount, setFromAmount] = useState()\n    const [status, setStatus] = useState('Live')\n    const [onlyBOT, setOnlyBOT] = useState(false)\n    const [toTokenBalance, setToTokenBalance] = useState(0)\n    const { Psymbol } = useActivePlatform()\n    const tokenOptions = useTokenList()\n\n    const [claimed, setClaimed] = useState(true)\n\n\n    const checkMyFSPool = async () => {\n        const fsContract = getContract(library, BouncePro.abi, BOUNCE_PRO(chainId))\n        let myPoolIndex = await fsContract.methods.myP(account).call()\n        if (myPoolIndex > 0) {\n            myPoolIndex = myPoolIndex - 1\n            const fromAmount = await fsContract.methods.amountTotal0FP(myPoolIndex).call()\n            const bidAmount = await fsContract.methods.amountSwap0FP(myPoolIndex).call()\n            if (fromAmount === bidAmount) {\n                setClaimed(true)\n            } else {\n                setClaimed(false)\n            }\n        } else {\n            setClaimed(true)\n        }\n    }\n\n    useEffect(() => {\n        if (!toAddress) return\n        if (new BigNumber(toAddress).isEqualTo(0)) return\n        queryTokenBalance(toAddress)\n    }, [toAddress])\n\n    const queryTokenBalance = async (toAddress) => {\n        const Contract = getContract(library, bounceERC20.abi, toAddress)\n        const balance = await Contract.methods.balanceOf(account).call()\n        setToTokenBalance(balance)\n    }\n\n    async function getFSPoolDetail() {\n        try {\n\n            const fsContract = getContract(library, BouncePro.abi, BOUNCE_PRO(chainId))\n\n            fsContract.methods.pools(id).call().then( async (res) => {\n                console.log('pool detail:', res)\n\n                setFromAmount(res.amountTotal0)\n                setToAmount(res.amountTotal1)\n\n                //setAddress(res)\n                const tokenContract = getContract(library, bounceERC20.abi, res.token0)\n                tokenContract.methods.symbol().call().then((res) => {\n                    console.log('query fs symbol:', res)\n                    setSymbol(res)\n                })\n                tokenContract.methods.decimals().call().then((res) => {\n                    console.log('query fs decimals:', res)\n                    setDecimals(res)\n                })\n\n                const toToken = tokenOptions.find(item => {\n                    return res.token1.toLowerCase() === item.key.toLowerCase()\n                })\n\n                if (res === '0x0000000000000000000000000000000000000000') {\n                    setToAddress(null)\n                    setToSymbol(Psymbol)\n                    setToDecimals('18')\n                } else if (toToken) {\n                    setToAddress(res.token1)\n                    setToDecimals(toToken.decimals)\n                    setToSymbol(toToken.symbol)\n                } else {\n                    setToAddress(null)\n                    setToSymbol(Psymbol)\n                    setToDecimals('18')\n                }\n\n                const date = new Date(res.closeAt * 1000);\n                const now = new Date();\n                const leftTime = date - now;\n\n                setIsMine((res.beneficiary.toLowerCase() === account.toLowerCase()))\n                if (res.beneficiary.toLowerCase() === account.toLowerCase()) {\n                    let myPoolIndex = await fsContract.methods.myP(account).call()\n                    if (myPoolIndex > 0) {\n                        myPoolIndex = myPoolIndex - 1\n                        const fromAmount = res.amountTotal0\n                        const bidAmount = await fsContract.methods.amountSwap0P(myPoolIndex).call()\n                        if (fromAmount === bidAmount) {\n                            setClaimed(true)\n                        } else {\n                            setClaimed(false)\n                        }\n                    } else {\n                        setClaimed(true)\n                    }\n                }\n\n                setTime(res.closeAt)\n                setToAmount(res.amountTotal1)\n\n                setStatus(leftTime > 0 ? 'Live' : 'Closed')\n                fsContract.methods.amountSwap1P(id).call().then((bidAmount) => {\n                    console.log('query fs to bid amount:', bidAmount)\n                    setToBidAmount(bidAmount)\n                    if (bidAmount === res.amountTotal1) {\n                        setStatus('Filled')\n                    }\n                })\n            })\n\n            fsContract.methods.myAmountSwapped1(account, id).call().then((res) => {\n                console.log('query fs myAmountSwapped1:', res)\n                setJoinStatus(isGreaterThan(res, '0'))\n            })\n\n            fsContract.methods.onlyBotHolder(id).call().then((res) => {\n                console.log('query fs name:', res)\n                setOnlyBOT(res)\n            })\n\n            fsContract.methods.amountSwap0P(id).call().then((res) => {\n                console.log('query fs to bid amount:', res)\n                setFromBidAmount(res)\n            })\n\n\n            fsContract.methods.maxEthPerWalletP(id).call().then((res) => {\n                console.log('query fs limit max:', res)\n                setLimit(res)\n            })\n\n\n        } catch (e) {\n            console.log('getTokenInfo:', e)\n        }\n    }\n\n    useEffect(() => {\n        if (active, chainId, account) {\n            console.log('chainId', chainId)\n            getFSPoolDetail()\n        } else {\n            dispatch({ type: HANDLE_SHOW_CONNECT_MODAL, showConnectModal: true });\n        }\n\n    }, [active, chainId, account])\n\n    // console.log('FS_BUG', fromAmount, fromBidAmount, toAmount, toBidAmount)\n    return {\n        name,\n        claimed,\n        address,\n        symbol,\n        toAddress,\n        toSymbol,\n        toDecimals,\n        decimals,\n        fromTotal,\n        toAmount,\n        limit,\n        time,\n        password,\n        fromBidAmount,\n        toBidAmount,\n        fromAmount,\n        status,\n        isMine,\n        onlyBOT,\n        toTokenBalance,\n        joinStatus\n    }\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/web3/address.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/index.jsx",["423"],"import React from 'react'\nimport { CsStyled } from './styled'\nimport Card from './Card'\nimport SaleCard from './SaleCard'\nimport { usePoolList } from \"./hooks\";\nimport { EmptyLayout } from \"../../components/common/Layout\";\nimport loading from \"../../assets/icons/loading.svg\";\n\nexport default function Index() {\n  const { list } = usePoolList()\n  // console.log(list)\n  return (\n    <CsStyled>\n      {!list || list.length === 0 ? (\n        <EmptyLayout>\n          <img src={loading} alt=\"\" />\n          <p>{Array.isArray(list) && list.length === 0 ? 'The next bounce certified sale will come soon. Stay tuned!' : 'Sales are loading ... Please wait'}</p>\n        </EmptyLayout>\n\n        // <SaleCard pool={{\n        //   proInfo: {\n        //     additionalinfo: \"no\",\n        //     allocationperwallet: \"No limits\",\n        //     amountoftoken: \"1000\",\n        //     architecture: \"fdaef\",\n        //     attachmenturl: \"\",\n        //     auctiontime: \"90060\",\n        //     auctiontype: \"Fixed swap auction\",\n        //     circulatingsupply: \"111\",\n        //     code: 1,\n        //     contactemail: \"yuhuakukude@gmail.com\",\n        //     created_at: \"2021-01-22T13:00:34Z\",\n        //     fackbook: \"\",\n        //     githublink: \"https://tool.chinaz.com/tools/unixtime.aspx\",\n        //     id: 1,\n        //     ifkyc: 1,\n        //     ifwhitelist: 1,\n        //     medium: \"https://bouncefinance.medium.com/\",\n        //     pricepertoken: \"100\",\n        //     prologourl: \"74aef2f42bcac9aab90b90726b921f73.jpg\",\n        //     proname: \"dfaf\",\n        //     prosummary: \"dad\",\n        //     protheme: \"defi\",\n        //     prowebsite: \"https://tool.chinaz.com/tools/unixtime.aspx\",\n        //     teambio: \"fwaef\",\n        //     teamwallet: \"0xe2Ce91F22ed39520e8b099F3800BD21f5b090b56\",\n        //     techhighlight: \"dfawf\",\n        //     telegram: \"https://t.me/bounce_finance\",\n        //     tokencontractaddress: \"0xe2Ce91F22ed39520e8b099F3800BD21f5b090b56\",\n        //     tokendistribution: \"aff\",\n        //     tokenlookupschedule: \"feawfew\",\n        //     tokenticketer: \"DFSF\",\n        //     totalsupply: \"100\",\n        //     twitter: \"https://twitter.com/bounce_finance?s=21\",\n        //     updated_at: \"2021-01-25T09:42:27Z\",\n        //     whitepaperlink: \"https://tool.chinaz.com\"\n        //   }\n        // }} />\n      ) :\n        list.sort((item1, item2) => {\n          // console.log('sort', item1, item2)\n          return item2.id - item1.id\n        }).map((item, index) => {\n          return (\n            <Card key={index} pool={item} status='Active' />\n          )\n        })}\n    </CsStyled>\n  )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/TipLink.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/BidModal.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/message.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/utils/form.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Form.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/utils/common.js",["424"],"import Web3 from \"web3\";\n\nconst {numberToHex} = Web3.utils\n\nconst BigNumber = require('bignumber.js');\n\nexport const getTime = (day, hour, min) => {\n  let time = 0;\n  if ( day ) {\n    time += 24 * 60 * 60 * day;\n  }\n  if ( hour ) {\n    time += 60* 60 * hour;\n  }\n  if ( min ) {\n    time += 60 * min;\n  }\n  return time;\n}\n\nexport const isGreaterThan = (value1, value2) => {\n  return   new BigNumber(value1).isGreaterThan(new BigNumber(value2))\n}\n\n\nexport const isEqualTo = (value1, value2) => {\n  return   new BigNumber(value1).isEqualTo(new BigNumber(value2))\n}\n\n","/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Button.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/utils/numberTransform.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Modal.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/AuctionTipModal.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/index.jsx",["425"],"import React, { useState, useEffect, useContext } from 'react'\nimport { KycStyled } from './styled'\nimport image_kyc from '../../assets/images/kyc.svg'\nimport Step1 from './Step1'\nimport Step2 from './Step2'\nimport Step3 from './Step3'\nimport { useWeb3React } from '@web3-react/core'\nimport { myContext } from '../../redux'\nimport Crumbs from '../components/Exhibition/Crumbs'\n\nexport default function Index() {\n    const { active } = useWeb3React()\n    const { dispatch } = useContext(myContext)\n    const [curStep, setCurStep] = useState(1)\n    const [ReqData, setReqData] = useState({\n        country: 'china'\n    })\n\n    useEffect(() => {\n        if (!ReqData || active) {\n            return\n        }\n\n        dispatch({\n            type: 'CONNECT_WALLET',\n            value: true\n        })\n\n    }, [ReqData])\n\n    return (\n        <KycStyled>\n            <Crumbs list={[{\n                name: 'KYC'\n            }, {\n                name: 'Basic Info',\n                active: true\n            }]} />\n            <div className=\"container\">\n                <div className=\"top\">\n                    <h3>KYC</h3>\n                    <p>{curStep} / 3</p>\n                </div>\n                <div className=\"bottom\">\n                    <div className=\"left\">\n                        <img src={image_kyc} alt=\"image_kyc\" />\n                    </div>\n                    <div className=\"right\">\n                        {curStep === 1 && <Step1 curStep={curStep} setCurStep={setCurStep} ReqData={ReqData} setReqData={setReqData} />}\n                        {curStep === 2 && <Step2 curStep={curStep} setCurStep={setCurStep} ReqData={ReqData} setReqData={setReqData} />}\n                        {curStep === 3 && <Step3 curStep={curStep} setCurStep={setCurStep} ReqData={ReqData} setReqData={setReqData} />}\n                    </div>\n                </div>\n            </div>\n        </KycStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/utils/themeHooks.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Home/index.jsx",["426","427"],"import React, { useState } from 'react'\nimport { HomeStyled } from './styled'\nimport lattice from '../../assets/images/lattice.svg'\nimport bule_check from '../../assets/images/bule-check.svg'\nimport bule_star from '../../assets/images/bule-star.svg'\nimport bule_people from '../../assets/images/bule-people.svg'\nimport logo_white from '../../assets/logo/logo-white.svg'\nimport { useHistory } from 'react-router-dom'\n\nimport back1 from '../../assets/images/back1.svg'\nimport back2 from '../../assets/images/back2.svg'\nimport back3 from '../../assets/images/back3.svg'\nimport back4 from '../../assets/images/back4.svg'\nimport back5 from '../../assets/images/back5.svg'\nimport back6 from '../../assets/images/back6.svg'\n\nimport medium from '../../assets/icons/index-medium.svg'\nimport twitter from '../../assets/icons/index-twitter.svg'\nimport telegram from '../../assets/icons/index-telegram.svg'\n\nimport video from '../../assets/video/index.mp4'\n\nconst CertifiedSalesSteps = [{\n    title: 'Certified sale application',\n    desc: 'Submit project information to the voting board to apply for a certified sale'\n}, {\n    title: 'Community scanning and voting',\n    desc: 'The community reviews your project for quality and approves the start of the best token sale'\n}, {\n    title: 'Multisig governance configuration',\n    desc: 'Execution upon multisignature by parties involved'\n}, {\n    title: 'Token sale activation',\n    desc: 'Your certified token sale goes live for verified user'\n}]\n\nexport default function Index() {\n    const [curCertifiedSalesSteps, setCurCertifiedSalesSteps] = useState(0)\n    const [stepIsHover, setStepIsHover] = useState(false)\n    const history = useHistory()\n\n    return (\n        <HomeStyled>\n            <div className=\"page_wrapper page_one\">\n                <div className=\"main\">\n                    <div className=\"left\">\n                        <video\n                            width='525px'\n                            height='525px'\n                            muted\n                            src={video}\n                            autoPlay='autoPlay'\n                            loop='loop'\n                        />\n                    </div>\n\n                    <div className=\"right\">\n                        <h1>Certified crypto auction curated <span>by the community</span></h1>\n                        <p>Bounce Certified empowers the community to curate a select group of high-quality projects to conduct their public sale on the same robust and secure platform behind Bounce Finance.</p>\n                        <p><span>KYC checks</span> / <span>White list sales</span> / <span>Decentralized auction managed by community DAO</span></p>\n\n                        <button onClick={() => { history.push('/applySale') }}>Apply for certified sale</button>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"page_other\">\n                <div className=\"block\">\n                    <h3>Features</h3>\n                    <ul className='Features_list'>\n                        <li>\n                            <div className='bg'></div>\n                            <h4>\n                                <img src={bule_check} alt=\"\" />\n                                KYC checks\n                            </h4>\n                            <p>Know-Your-Customer tools identity verification</p>\n                        </li>\n\n                        <li>\n                            <div className='bg'></div>\n                            <h4>\n                                <img src={bule_star} alt=\"\" />\n                                White list sales\n                            </h4>\n                            <p>Exclusive customer sign-up for token auction</p>\n                        </li>\n\n                        <li>\n                            <div className='bg'></div>\n                            <h4>\n                                <img src={bule_people} alt=\"\" />\n                                Decentralized auction\n                            </h4>\n                            <p>Auction managed by community DAO</p>\n                        </li>\n                    </ul>\n                </div>\n\n\n                <div className=\"block Certified\">\n                    <h3>Certified Sales Steps</h3>\n                    <ul className=\"step_list\" >\n                        {CertifiedSalesSteps.map((item, index) => {\n                            return <li\n                                key={index}\n                                className={curCertifiedSalesSteps === index && !stepIsHover ? 'active' : ''}\n                                onMouseEnter={() => {\n                                    setCurCertifiedSalesSteps(index)\n                                }}\n                            >\n                                <h4>\n                                    <i>{index + 1}</i>\n                                    {item.title}\n                                </h4>\n                                <p>{item.desc}</p>\n                            </li>\n                        })}\n                    </ul>\n                </div>\n\n                <div className=\"utility\">\n                    <h3>Token Utility</h3>\n                    <ul className='utility_list'>\n                        <li>\n                            <div>\n                                <i>1</i>\n                                Application fee\n                            </div>\n\n                            <div>\n                                <i>3</i>\n                                BOT token holder exclusive sales\n                            </div>\n                        </li>\n                        <li>\n                            <div>\n                                <i>2</i>\n                                Project voting power\n                            </div>\n\n                            <div>\n                                <i>4</i>\n                                Transaction fee buy back and burn\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n\n\n            </div>\n\n            <div className=\"started\">\n                <div className=\"started_bg\" onClick={() => { return console.log(31) }}></div>\n                <div className=\"started_main\">\n                    <h3>Get started to apply for certified sale with Bounce</h3>\n                    <button onClick={() => { return history.push('/applySale') }}>Get Started</button>\n                </div>\n            </div>\n\n            <div className=\"backed\">\n                <div className=\"main\">\n                    <h5>Backed by</h5>\n                    <ul>\n                        <li>\n                            <img src={back1} alt=\"\" />\n                        </li>\n                        <li>\n                            <img src={back2} alt=\"\" />\n                        </li>\n                        <li>\n                            <img src={back3} alt=\"\" />\n                        </li>\n                        <li>\n                            <img src={back4} alt=\"\" />\n                        </li>\n                        <li>\n                            <img src={back5} alt=\"\" />\n                        </li>\n                        <li>\n                            <img src={back6} alt=\"\" />\n                        </li>\n                    </ul>\n                </div>\n            </div>\n\n            <div className=\"footer\">\n                <div className=\"main\">\n                    <img src={logo_white} alt=\"\" />\n                    <div className=\"link\">\n                        <ul>\n                            <li>\n                                <a href=\"https://bouncefinance.medium.com/\">\n                                    <img src={medium} alt=\"\" />\n                                </a>\n                            </li>\n\n                            <li>\n                                <a href=\"https://twitter.com/bounce_finance?s=21\">\n                                    <img src={twitter} alt=\"\" />\n                                </a>\n                            </li>\n\n                            <li>\n                                <a href=\"https://t.me/bounce_finance\">\n                                    <img src={telegram} alt=\"\" />\n                                </a>\n                            </li>\n                        </ul>\n\n                        <p>Forum</p>\n                    </div>\n\n                </div>\n            </div>\n        </HomeStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/PersonalInfo/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ProjectList/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Detail/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/index.jsx",["428"],"import React, { useContext, useState } from 'react'\nimport { ApplySaleStyled } from './styled'\nimport { useHistory } from 'react-router-dom'\nimport { Crumbs } from '../components/Exhibition'\nimport Step1 from './Step1'\nimport Step2 from './Step2'\nimport Step3 from './Step3'\nimport Step4 from './Step4'\nimport Step5 from './Step5'\nimport Step6 from './Step6'\n\nimport axios from 'axios'\nimport API from '../../config/request_api'\nimport { myContext } from '../../redux'\nimport {\n    ApplyModal,\n    approveStatus,\n    cancelStatus,\n    confirmStatus,\n    errorStatus, initStatus,\n    pendingStatus, successIssuedStatus,\n    successStatus\n} from \"../CertifiedSales/ApplyModal\";\nimport { getContract, useActiveWeb3React } from \"../../web3\";\nimport bounceERC20 from \"../../web3/abi/bounceERC20.json\";\nimport { BOT, BOUNCE_PRO_VOTING } from \"../../web3/address\";\nimport BounceProVoting from \"../../web3/abi/BounceProVoting.json\";\n\nexport default function Index() {\n    const [modalStatus, setModalStatus] = useState(initStatus)\n    const history = useHistory()\n    const { account, library, chainId, active } = useActiveWeb3React()\n    const { dispatch } = useContext(myContext)\n    const [curStep, setCurStep] = useState(1)\n    const [title, setTitle] = useState({\n        title: 'Apply Certified Sales',\n        crumbsList: [{\n            name: 'Apply Certified Sales'\n        }]\n    })\n    const [step1Data, setStep1Data] = useState({})\n    const [step2Data, setStep2Data] = useState({})\n    const [step3Data, setStep3Data] = useState({})\n    const [step4Data, setStep4Data] = useState({})\n    const [step5Data, setStep5Data] = useState({\n        auctiontype: 'Fixed swap auction',\n        ifkyc: 1,\n        ifwhitelist: 1,\n        allocationperwallet: 'No limits'\n    })\n    const [step6Data, setStep6Data] = useState({})\n\n    const onApply = async (id) => {\n        console.log('onApply', active)\n        setModalStatus(approveStatus);\n\n        try {\n            const tokenContract = getContract(library, bounceERC20.abi, BOT(chainId))\n            const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n\n            const result = await tokenContract.methods.approve(\n                BOUNCE_PRO_VOTING(chainId),\n                '300000000000000000',\n            )\n                .send({ from: account });\n            setModalStatus(confirmStatus);\n            if (result.status) {\n                await bounceContract.methods.create(id)\n                    .send({ from: account })\n                    .on('transactionHash', hash => {\n                        setModalStatus(pendingStatus)\n                    })\n                    .on('receipt', (_, receipt) => {\n                        setModalStatus(successIssuedStatus)\n                    })\n                    .on('error', (err, receipt) => {\n                        setModalStatus(errorStatus)\n                    })\n            } else {\n                setModalStatus(errorStatus)\n            }\n        } catch (err) {\n            if (err.code === 4001) {\n                setModalStatus(cancelStatus)\n            } else {\n                setModalStatus(errorStatus)\n            }\n            console.log('err', err);\n        }\n    };\n\n\n    const handelSubmit = () => {\n        const params = {\n            id: 0,\n            ...step1Data,\n            ...step2Data,\n            ...step3Data,\n            ...step4Data,\n            ...step5Data,\n            ...step6Data\n        }\n        params.accountaddress = account\n        // console.log(JSON.stringify(params))\n        try {\n            axios.post(API.applySale, params).then(res => {\n                if (res.status === 200 && res.data.code === 1) {\n                    // console.log('onApply', res.data.data.id)\n                    onApply(res.data.data.id)\n\n                } else {\n                    console.log(res)\n                    alert('Information submission error, please contact the platform customer service')\n                }\n            })\n        } catch (error) {\n            dispatch({\n                type: 'MODAL',\n                value: {\n                    name: 'CONFIRM',\n                    title: 'Message',\n                    deputy: 'The request failed. Please check your network or contact your administrator',\n                    confirm: {\n                        text: 'Confirm',\n                        callback: () => {\n                            dispatch({\n                                type: 'MODAL',\n                                value: null\n                            })\n                        }\n                    }\n                }\n            })\n        }\n    }\n\n    const renderStep = (curStep) => {\n        switch (curStep) {\n            case 1:\n                return <Step1 setCurStep={setCurStep} setTitle={setTitle} step1Data={step1Data} setStep1Data={setStep1Data} />\n\n            case 2:\n                return <Step2 setCurStep={setCurStep} setTitle={setTitle} step2Data={step2Data} setStep2Data={setStep2Data} />\n\n            case 3:\n                return <Step3 setCurStep={setCurStep} setTitle={setTitle} step3Data={step3Data} setStep3Data={setStep3Data} />\n\n            case 4:\n                return <Step4 setCurStep={setCurStep} setTitle={setTitle} step4Data={step4Data} setStep4Data={setStep4Data} />\n\n            case 5:\n                return <Step5 setCurStep={setCurStep} setTitle={setTitle} step5Data={step5Data} setStep5Data={setStep5Data} />\n\n            case 6:\n                return <Step6 setCurStep={setCurStep} setTitle={setTitle} step6Data={step6Data} setStep6Data={setStep6Data}\n                    handelSubmit={handelSubmit} />\n            default:\n                return <></>\n        }\n    }\n\n    return (\n        <>\n            <ApplySaleStyled>\n                <Crumbs list={title.crumbsList} active={'Details'} />\n                <div className=\"main\">\n                    <div className=\"top\">\n                        <h1>{title.title}</h1>\n                        <p className=\"step\"><span>{curStep}</span> / 6</p>\n                    </div>\n\n                    {renderStep(curStep)}\n                </div>\n            </ApplySaleStyled>\n            <ApplyModal onOK={() => {\n                setModalStatus(initStatus)\n                history.push('/project-voting-board/active')\n            }} onDismiss={() => {\n                setModalStatus(initStatus)\n            }} modalStatus={modalStatus} />\n        </>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/LearnMore/index.jsx",["429","430"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { LearnMoreStyle } from './styled'\nimport CardHeader from '../CardHeader'\nimport { Passage } from '../../components/Exhibition'\nimport { TextInput, Button } from '../../components/Table'\nimport Progress from '../Progress'\nimport { useParams } from 'react-router-dom'\nimport { useVoteListByPoolId } from '../hooks'\nimport Crumbs from '../../components/Exhibition/Crumbs'\nimport BigNumber from \"bignumber.js\";\nimport { numToWei, weiToNum } from \"../../../utils/numberTransform\";\nimport { useTokenBalance } from \"../../../hooks/useBalance\";\nimport {\n    cancelStatus,\n    confirmStatus,\n    errorStatus,\n    initStatus,\n    pendingStatus,\n    successStatus, successVotedStatus,\n    TxModal\n} from \"../../../components/common/TXModal\";\nimport { ModalLayout } from \"../../components/Modal/styled\";\nimport Support from \"../../components/Modal/Support\";\nimport { getContract, useActiveWeb3React } from \"../../../web3\";\nimport bounceERC20 from \"../../../web3/abi/bounceERC20.json\";\nimport { BOT, BOUNCE_PRO_VOTING } from \"../../../web3/address\";\nimport BounceProVoting from \"../../../web3/abi/BounceProVoting.json\";\nimport { HOST } from '../../../config/request_api'\n\n\nexport default function Index() {\n    const history = useHistory()\n    const { poolId } = useParams()\n    const pool = useVoteListByPoolId(poolId)\n    const proInfo = pool.proInfo\n    const { balance } = useTokenBalance()\n    const [supporting, setSupporting] = useState(false)\n    const [value, setValue] = useState()\n    const [bidStatus, setBidStatus] = useState(initStatus)\n    const { account, library, chainId, active } = useActiveWeb3React()\n\n    // const { prosummary, whitepaperlink, protheme, techhighlight, architecture } = useVoteListByPoolId(poolId)\n    const [isSupport, setIsSupport] = useState(false)\n    const [curTab, setCurTab] = useState(0)\n    const tabMenu = ['Project Info', 'Team Info', 'Token Metrics']\n    console.log('proInfo', proInfo)\n    useEffect(() => {\n        console.log(proInfo)\n    }, [proInfo])\n\n    const onVote = async () => {\n        setSupporting(false)\n        const tokenContract = getContract(library, bounceERC20.abi, BOT(chainId))\n        const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n        const weiAmount = numToWei(value);\n\n        setBidStatus(confirmStatus);\n        try {\n            await tokenContract.methods.approve(\n                BOUNCE_PRO_VOTING(chainId),\n                weiAmount,\n            )\n                .send({ from: account });\n            bounceContract.methods.vote(pool.id, weiAmount)\n                .send({ from: account })\n                .on('transactionHash', hash => {\n                    setBidStatus(pendingStatus)\n                })\n                .on('receipt', (_, receipt) => {\n                    console.log('bid fixed swap receipt:', receipt)\n                    setBidStatus(successVotedStatus)\n                })\n                .on('error', (err, receipt) => {\n                    setBidStatus(errorStatus)\n                })\n        } catch (e) {\n            console.log('bid---->', e)\n            if (e.code === 4001) {\n                setBidStatus(cancelStatus)\n            } else {\n                setBidStatus(errorStatus)\n            }\n        }\n\n    }\n\n\n    const renderInfo = (tab) => {\n        switch (tab) {\n            case 'Project Info':\n                return <>\n                    <Passage\n                        width='480px'\n                        title='Technical highlight'\n                        desc={proInfo && proInfo.techhighlight} />\n\n                    <Passage\n                        width='480px'\n                        title='Architecture'\n                        desc={proInfo && proInfo.architecture} />\n                </>\n\n\n            case 'Team Info':\n                return <>\n                    <Passage\n                        width='480px'\n                        title='Team'\n                        desc={proInfo && proInfo.teambio} />\n                </>\n\n            case 'Token Metrics':\n                return <>\n                    <Passage\n                        width='480px'\n                        title='Total supply'\n                        desc={proInfo && proInfo.totalsupply} />\n\n                    <Passage\n                        width='480px'\n                        title='Initial circulating supply'\n                        desc={proInfo && proInfo.circulatingsupply} />\n\n                    <Passage\n                        width='480px'\n                        title='Token ticketer'\n                        desc={proInfo && proInfo.tokenticketer} />\n\n                    <Passage\n                        width='480px'\n                        title='Token contract address'\n                        desc={proInfo && proInfo.tokencontractaddress} />\n\n                    <Passage\n                        width='480px'\n                        title='Token distribution'\n                        desc={proInfo && proInfo.tokendistribution} />\n\n                    <Passage\n                        width='480px'\n                        title='Token lockup schedule'\n                        desc={proInfo && proInfo.tokenlookupschedule} />\n                </>\n            default:\n                return <></>\n        }\n    }\n\n    return (\n        <>\n            <Crumbs list={[{\n                name: 'Active sales',\n                onClick: () => {\n                    history.push('/certified-sales')\n                }\n            }, {\n                name: 'Bounce Project',\n                active: true\n            }]} />\n            <LearnMoreStyle>\n                {pool.proInfo && <CardHeader title={pool && pool.proInfo && pool.proInfo.proname} logo={HOST + '/' + pool.proInfo.prologourl} socialLink={[\n                    { name: 'facebook', link: pool.proInfo.fackbook },\n                    { name: 'telegram', link: pool.proInfo.telegram },\n                    { name: 'twitter', link: pool.proInfo.twitter },\n                    { name: 'github', link: pool.proInfo.githublink },\n                    { name: 'medium', link: pool.proInfo.medium }\n                ]} />}\n\n                <div className=\"main\">\n                    <div className=\"left\">\n                        <Passage\n                            title='Project summary'\n                            desc={proInfo && proInfo.prosummary} />\n\n                        <a href={proInfo && proInfo.whitepaperlink}>{proInfo && proInfo.whitepaperlink}</a>\n\n                        {isSupport && <div className='support'>\n                            <div className=\"progress\">\n                                <Progress\n                                    title='Support from community:'\n                                    status={pool && pool.status}\n                                    plan={pool && new BigNumber(pool.totalVotes).dividedBy('200000000000000000000').dividedBy('100')}\n                                    value={pool && `${weiToNum(pool.totalVotes)} BOT`}\n                                    total={pool && pool.total}\n                                />\n                            </div>\n                            <TextInput onValChange={(value) => {\n                                console.log('value', value)\n                                setValue(value)\n                            }} placeholder={`Enter your vote amount ${weiToNum(balance)} BOT`} width='100%' bottom={'10px'} />\n                            <Button disabled={new BigNumber(numToWei(value)).isGreaterThan(balance)} type='black'\n                                value={new BigNumber(numToWei(value)).isGreaterThan(balance) ? `Insufficient BOT` : 'Support'}\n                                width='180px' onClick={() => {\n                                    setSupporting(true)\n                                }} />\n                            <Button type='white' value='Back' width='180px' onClick={() => {\n                                setIsSupport(false)\n                            }} />\n\n                        </div>}\n                    </div>\n\n                    <div className=\"right\">\n                        <Passage\n                            title='Theme'\n                            desc={proInfo && proInfo.protheme} />\n                        <Passage\n                            title='Whitepaper' />\n                        <a href={proInfo && proInfo.whitepaperlink}>{proInfo && proInfo.whitepaperlink}</a>\n                    </div>\n\n\n                </div>\n                {!isSupport && <div className='btn_group'>\n                    <Button type='black' value='Support' width='180px' onClick={() => {\n                        setIsSupport(true)\n                    }} />\n                </div>}\n\n                <div className=\"info_wrapper\">\n                    <ul className='tab_menu'>\n                        {tabMenu.map((item, index) => {\n                            return <li\n                                key={index}\n                                className={index === curTab ? 'active' : ''}\n                                onClick={() => {\n                                    setCurTab(index)\n                                }}\n                            >{item}</li>\n                        })}\n                    </ul>\n                    <div className=\"show_info\">\n                        {renderInfo(tabMenu[curTab])}\n                    </div>\n                </div>\n            </LearnMoreStyle>\n\n\n            <TxModal modalStatus={bidStatus} onDismiss={() => {\n                setBidStatus(initStatus)\n            }} />\n\n            {supporting && (\n                <ModalLayout className='layout' onClick={(e) => {\n                    e.stopPropagation()\n                }}>\n                    <Support onConfirm={onVote} cancel={() => setSupporting(false)} amount={value} />\n                </ModalLayout>\n            )}\n        </>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/Layout.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/web3/index.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/ApplyModal.js",["431","432"],"import Modal, {ModalContent, ModalTitle} from \"../../components/common/Modal\";\nimport styled from 'styled-components'\nimport Lottie from \"react-lottie\";\nimport icon_success from \"../../assets/icons/icon-success.svg\";\nimport icon_error from \"../../assets/icons/icon-error.svg\";\nimport React from \"react\";\nimport bounce_loading from \"../../assets/bounce-loading.json\";\nimport {Button} from \"../../components/common/Button\";\n\nexport const FormStatus = styled.div`\n  width: 100%;\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: bounce_loading,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\n\nexport const approveStatus = {status: 1, title: 'Bounce requests wallet approval', content: 'Please manually interact with your wallet'}\nexport const confirmStatus = {status: 2, title: 'Bounce requests wallet interaction', content: 'Please open your wallet and confirm in the transaction activity to proceed your order'}\nexport const pendingStatus = {status: 3, title: 'Bounce waiting for transaction settlement', content: 'Bounce is engaging with blockchain transaction, please wait patiently for on-chain transaction settlement'}\nexport const successStatus = {status: 4, title: 'Auction successfully published', content: 'Congratulations! Your auction is live and is now listed in designated area. Please find more information about the next steps in the pool page'}\nexport const successIssuedStatus = {status: 4, title: 'Congratulations!', content: 'You have successfully submitted your project to voting board.'}\n\nexport const predictionSuccessStatus = {status: 4, title: 'Prediction successfully published', content: 'Congratulations! Your predcition is live and is now listed in designated area. Please find more information about the next steps in the pool page'}\nexport const errorStatus = {status: -1, title: 'Transaction failed on Bounce', content: 'Oops! Your transaction is failed for on-chain approval and settlement. Please initiate another transaction'}\nexport const cancelStatus = {status: -2, title: 'Transaction canceled on Bounce', content: 'Sorry! Your transaction is canceled. Please try again.'}\nexport const initStatus = {status: 0, title: '', content: ''}\n\n\nexport const ApplyModal = ({modalStatus, onDismiss, onOK}) =>{\n\n    const {status, title, content}  = modalStatus\n\n    return (\n        <Modal isOpen={status !== 0} onDismiss={() => {\n            onDismiss()\n        }}>\n            <ModalTitle style={{textAlign: 'center'}}>{title}</ModalTitle>\n\n            {(status === 1 || status === 2 || status === 3) &&\n            <Lottie width={200} height={200} options={defaultOptions}/>}\n\n            {(status === 4 ) &&\n            <FormStatus ><img src={icon_success}/></FormStatus>}\n\n            {(status === -1 || status === -2) &&\n            <FormStatus><img src={icon_error}/></FormStatus>}\n\n            <ModalContent style={{width: 300, textAlign: 'center'}}>{content}</ModalContent>\n            {(status === 1 || status === 2 || status === 3) && <Button width={'320px'} black>Awaiting...</Button>}\n            {status === 4 && <Button width={'320px'} black onClick={()=>{\n                onOK()\n            }}>Close</Button>}\n            {status === -1 && <Button onClick={()=>{onDismiss()}} width={'320px'} black>Try again</Button>}\n        </Modal>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/hooks.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/hooks/useLeftTime.js",["433"],"import {useEffect, useState} from \"react\";\n\nexport const useLeftTime = () => {\n    const initRenderTime = {\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n    }\n\n    const [time, setTime] = useState();\n    const [leftTime, setLeftTime] = useState(initRenderTime);\n\n    const calcuTime = ()=>{\n        if (time) {\n            let leftd = Math.floor(time / (1000 * 60 * 60 * 24));\n            let lefth = Math.floor(time / (1000 * 60 * 60) % 24);\n            let leftm = Math.floor(time / (1000 * 60) % 60);\n            let lefts = Math.floor(time / 1000 % 60);\n            const left = {\n                days: leftd < 0 ? 0 : leftd,\n                hours: lefth < 0 ? 0 : lefth,\n                minutes: leftm < 0 ? 0 : leftm,\n                seconds: lefts < 0 ? 0 : lefts,\n            };\n            setLeftTime(left);\n            if (left < 0) {\n                setLeftTime(initRenderTime);\n            }\n        } else {\n            setLeftTime(initRenderTime);\n        }\n    }\n\n\n    useEffect(()=>{\n        calcuTime()\n    }, [time])\n\n    return {setTime, leftTime}\n}","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/hooks.js",["434","435","436","437","438","439"],"import axios from 'axios';\nimport API from '../../config/request_api'\nimport { useEffect, useState } from 'react';\nimport { getContract, useActiveWeb3React } from \"../../web3\";\nimport BounceProVoting from \"../../web3/abi/BounceProVoting.json\";\nimport BouncePro from \"../../web3/abi/BouncePro.json\";\nimport { BOUNCE_PRO_VOTING, BOUNCE_PRO } from \"../../web3/address\";\n\nconst getProjectInfo = async (proId) => {\n  const params = {\n    id: parseInt(proId)\n  }\n\n  try {\n    const res = await axios.post(API.queryProInfoById, params)\n    if (res.status === 200) {\n      // console.log(res.data)\n      return {\n        code: 1,\n        ...res.data.data\n      }\n    }\n  } catch (error) {\n    return {\n      list: {\n        code: 0,\n        msg: `projectId:${proId}. The request is in error.`,\n        err: error\n      }\n    }\n  }\n}\n\nexport const useVoteList = () => {\n  const [list, setList] = useState()\n  const { active, library, chainId } = useActiveWeb3React();\n\n  const fetchList = () => {\n    let pools = []\n    try {\n      const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n      bounceContract.methods.getPoolCount().call().then(res => {\n        for (let i = res; i >= 0; i--) {\n          bounceContract.methods.pools(i).call().then(async poolRes => {\n            const pool = poolRes\n            pool.id = i\n            pool.totalVotes = await bounceContract.methods.totalVotes(i).call()\n            poolRes.votePassed = await bounceContract.methods.votePassed(i).call()\n\n            if (poolRes.votePassed) {\n              pool.status = 'Success'\n            } else {\n              const closeAt = new Date(poolRes.closeAt * 1000)\n              const closed = closeAt - new Date()\n              pool.status = closed > 0 ? 'Active' : 'Failed'\n            }\n            // console.log('pool', pool)\n            pool.proInfo = await getProjectInfo(pool.projectId)\n            pools = pools.concat(pool)\n            setList(pools)\n          })\n        }\n        setList(pools)\n      })\n    } catch (e) {\n      console.log('fetchList error', e)\n    }\n  }\n\n  useEffect(() => {\n    if (active) {\n      fetchList()\n    }\n  }, [active])\n\n  return { list }\n}\n\nexport const usePoolList = () => {\n  const [list, setList] = useState([])\n  const { active, library, chainId } = useActiveWeb3React();\n\n  const fetchList = () => {\n    let pools = []\n    try {\n      const bounceContract = getContract(library, BouncePro.abi, BOUNCE_PRO(chainId))\n      bounceContract.methods.getPoolCount().call().then(res => {\n        for (let i = 0; i < res; i++) {\n          bounceContract.methods.pools(i).call().then(async poolRes => {\n            // console.log('pool--->', poolRes)\n            const pool = poolRes\n            pool.id = i\n            const isOpen = new Date() - poolRes.openAt * 1000 > 0\n            if (!isOpen) {\n              pool.status = 'Upcoming'\n            } else {\n              const closeAt = new Date(poolRes.closeAt * 1000)\n              const closed = closeAt - new Date()\n              pool.status = closed > 0 ? 'Active' : 'Failed'\n            }\n            // console.log('pool', pool)\n            pool.proInfo = await getProjectInfo(pool.projectId)\n            // console.log('pool',pool)\n            pools = pools.concat(pool)\n            setList(pools)\n          })\n        }\n        setList(pools)\n      })\n    } catch (e) {\n      console.log('fetchList error', e)\n    }\n  }\n\n  useEffect(() => {\n    if (active) {\n      // fetchList()\n    }\n  }, [active])\n\n  return { list }\n}\n\nexport const useStatus = (id) => {\n  const { active, library, chainId, account } = useActiveWeb3React();\n  const [myVotes, setMyVotes] = useState()\n  const [myVotesClaimed, setMyVotesClaimed] = useState(true)\n\n  const fetchStatus = () => {\n    try {\n      const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n      bounceContract.methods.myVotes(account, id).call().then(res => {\n        console.log('myVotes', res)\n        setMyVotes(res)\n      })\n      bounceContract.methods.myVotesClaimed(account, id).call().then(res => {\n        console.log('myVotesClaimed', myVotesClaimed)\n        setMyVotesClaimed(res)\n      })\n    } catch (e) {\n      console.log('fetch vote status error', e)\n    }\n  }\n\n  useEffect(() => {\n    if (active) {\n      fetchStatus()\n    }\n  }, [active])\n\n  return { myVotes, myVotesClaimed }\n}\n\n\n\nexport const useVoteListByPoolId = (poolId) => {\n  const [poolInfo, setPoolInfo] = useState({})\n  const { active, library, chainId } = useActiveWeb3React();\n\n  const fetchList = () => {\n    try {\n      const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n      bounceContract.methods.pools(poolId).call().then(async poolRes => {\n        const pool = poolRes\n        pool.id = poolId\n        pool.totalVotes = await bounceContract.methods.totalVotes(poolId).call()\n        poolRes.votePassed = await bounceContract.methods.votePassed(poolId).call()\n\n        if (poolRes.votePassed) {\n          pool.status = 'Success'\n        } else {\n          const closeAt = new Date(poolRes.closeAt * 1000)\n          const closed = closeAt - new Date()\n          pool.status = closed > 0 ? 'Active' : 'Failed'\n        }\n        // console.log('pool', pool)\n        pool.proInfo = await getProjectInfo(pool.projectId)\n        setPoolInfo(pool)\n      })\n    } catch (e) {\n      console.log('fetchList error', e)\n    }\n  }\n\n  useEffect(() => {\n    if (active) {\n      fetchList()\n    }\n  }, [active])\n\n  return poolInfo\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ProjectList/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Detail/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/components/common/TXModal.js",["440","441"],"import Modal, {ModalContent, ModalTitle} from \"./Modal\";\nimport Lottie from \"react-lottie\";\nimport {FormStatus} from \"./Form\";\nimport icon_success from \"../../assets/icons/icon-success.svg\";\nimport icon_error from \"../../assets/icons/icon-error.svg\";\nimport {Button} from \"./Button\";\nimport React from \"react\";\nimport bounce_loading from \"../../assets/bounce-loading.json\";\n\nexport const confirmStatus = {status: 1, title: 'Bounce requests wallet interaction', content: 'Please open your wallet and confirm in the transaction activity to proceed your order'}\nexport const pendingStatus = {status: 2, title: 'Bounce waiting for transaction settlement', content: 'Bounce is engaging with blockchain transaction, please wait patiently for on-chain transaction settlement'}\nexport const claimSuccessStatus = {status: 3, title: 'Settlement', content: 'Thanks for using Bounce Finance to create your auction. Your last auction is settled and you can create another one.'}\nexport const voteSuccessStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully participated in this prediction. Please come back to check results when the prediction pool is closed'}\nexport const successStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully participated in this auction. To proceed to next step, please read more instructions on auction in the bounce documentation'}\nexport const successVotedStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully voted for your favorite project. Please come back to claim tokens when voting process ends'}\nexport const successVoteClaimedStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully claimed back your voted tokens'}\n\nexport const errorStatus = {status: -1, title: 'Transaction failed on Bounce', content: 'Oops! Your transaction is failed for on-chain approval and settlement. Please initiate another transaction'}\nexport const cancelStatus = {status: -2, title: 'Transaction canceled on Bounce', content: 'Sorry! Your transaction is canceled. Please try again'}\nexport const initStatus = {status: 0, title: '', content: ''}\n\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: bounce_loading,\n    rendererSettings: {\n        preserveAspectRatio: 'xMidYMid slice'\n    }\n};\n\nexport const TxModal = ({modalStatus, onDismiss}) =>{\n\n    const {status, title, content} = modalStatus\n    return (\n        <Modal isOpen={status !== 0} onDismiss={() => {\n            onDismiss()\n        }}>\n            <ModalTitle style={{textAlign: 'center'}}>{title}</ModalTitle>\n\n            {(status === 1 || status === 2) &&\n            <Lottie width={200} height={200} options={defaultOptions}/>}\n\n            {(status === 3 ) &&\n            <FormStatus ><img src={icon_success}/></FormStatus>}\n\n            {(status === -1 || status === -2) &&\n            <FormStatus><img src={icon_error}/></FormStatus>}\n\n            <ModalContent style={{width: 300, textAlign: 'center'}}>{content}</ModalContent>\n            {(status === 1 || status === 2) && <Button width={'320px'} black>Awaiting...</Button>}\n            {status === 3 && <Button width={'320px'} black onClick={()=>{\n              window.location.reload()\n            }}>Close</Button>}\n            {status === -1 && <Button onClick={()=>{onDismiss()}} width={'320px'} black>Try again</Button>}\n        </Modal>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/hooks/useBalance.js",["442"],"import {getContract, useActiveWeb3React} from \"../web3\";\nimport {useEffect, useState} from \"react\";\nimport bounceERC20 from \"../web3/abi/bounceERC20.json\";\nimport {BOT} from \"../web3/address\";\n\nexport const useTokenBalance = (address) => {\n  const { active, account, library, chainId } = useActiveWeb3React();\n  const [balance, setBalance] = useState(null)\n\n\n  useEffect(() => {\n\n    async function getBalance() {\n      try {\n        const tokenContract = getContract(library, bounceERC20.abi, address ? address : BOT(chainId))\n        const balance = await tokenContract.methods.balanceOf(account).call()\n        setBalance(balance)\n      } catch (e) {\n        console.log('useTokenBalance:', e)\n        setBalance(null)\n      }\n    }\n\n    if (active && account && chainId) {\n      getBalance()\n    } else {\n      setBalance(null)\n    }\n\n  }, [active, account, chainId])\n\n\n  return { balance }\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/config.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/config/request_api.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/LearnMore/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Modal/Support.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Card.jsx",["443","444","445","446"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { CardStyled } from './styled'\nimport { TextInput } from '../components/Table'\nimport { Button } from '../components/Table'\nimport CardHeader from './CardHeader'\nimport Progress from './Progress'\nimport { Passage } from '../components/Exhibition'\nimport { getContract, useActiveWeb3React } from \"../../web3\";\nimport {\n    TxModal,\n    initStatus,\n    errorStatus,\n    successStatus,\n    confirmStatus,\n    pendingStatus,\n    cancelStatus, successVotedStatus, successVoteClaimedStatus\n} from \"../../components/common/TXModal\";\nimport { BOT, BOUNCE_PRO_VOTING } from \"../../web3/address\";\nimport bounceERC20 from '../../web3/abi/bounceERC20.json'\nimport BounceProVoting from '../../web3/abi/BounceProVoting.json'\nimport { numToWei, weiToNum } from \"../../utils/numberTransform\";\nimport { ModalLayout } from \"../components/Modal/styled\";\nimport Support from \"../components/Modal/Support\";\nimport BigNumber from \"bignumber.js\";\nimport { getPoolLeftTime } from \"../../utils/time\";\nimport { useTokenBalance } from \"../../hooks/useBalance\";\nimport { useStatus } from \"./hooks\";\nimport API_HOST, {HOST} from \"../../config/request_api\";\n\n\nexport default function Card({ status, poolId = 0, progress, claimFun, isVote, pool }) {\n    const [isSupport, setIsSupport] = useState(false)\n    const [supporting, setSupporting] = useState(false)\n    const { balance } = useTokenBalance()\n    const [bidStatus, setBidStatus] = useState(initStatus)\n    // const { dispatch } = useContext(myContext)\n    const history = useHistory()\n    const { account, library, chainId, active } = useActiveWeb3React()\n    const [value, setValue] = useState()\n\n    const { myVotes, myVotesClaimed } = useStatus(pool.id)\n    //   console.log('myVotesClaimed--->', myVotesClaimed)\n    const [left, setLeft] = useState({\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n    })\n\n    let timer\n    useEffect(() => {\n        console.log('pool left', isVote, pool.status, pool.openAt)\n        if (pool) {\n            timer = setInterval(() => {\n                const left = getPoolLeftTime(!isVote && status === 'Upcoming' ? pool.openAt : pool.closeAt)\n                setLeft(left)\n            }, 1000)\n            return () => {\n                clearInterval(timer)\n            }\n        }\n    }, [pool])\n\n\n    const onVote = async () => {\n        setSupporting(false)\n        const tokenContract = getContract(library, bounceERC20.abi, BOT(chainId))\n        const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n        const weiAmount = numToWei(value);\n\n        setBidStatus(confirmStatus);\n        try {\n            await tokenContract.methods.approve(\n                BOUNCE_PRO_VOTING(chainId),\n                weiAmount,\n            )\n                .send({ from: account });\n            bounceContract.methods.vote(pool.id, weiAmount)\n                .send({ from: account })\n                .on('transactionHash', hash => {\n                    setBidStatus(pendingStatus)\n                })\n                .on('receipt', (_, receipt) => {\n                    console.log('bid fixed swap receipt:', receipt)\n                    setBidStatus(successVotedStatus)\n                })\n                .on('error', (err, receipt) => {\n                    setBidStatus(errorStatus)\n                })\n        } catch (e) {\n            console.log('bid---->', e)\n            if (e.code === 4001) {\n                setBidStatus(cancelStatus)\n            } else {\n                setBidStatus(errorStatus)\n            }\n        }\n\n    }\n\n    const onCliam = async () => {\n        setSupporting(false)\n        const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n        setBidStatus(confirmStatus);\n        try {\n            bounceContract.methods.claim(pool.id)\n                .send({ from: account })\n                .on('transactionHash', hash => {\n                    setBidStatus(pendingStatus)\n                })\n                .on('receipt', (_, receipt) => {\n                    console.log('bid fixed swap receipt:', receipt)\n                    setBidStatus(successVoteClaimedStatus)\n                })\n                .on('error', (err, receipt) => {\n                    setBidStatus(errorStatus)\n                })\n        } catch (e) {\n            console.log('bid---->', e)\n            if (e.code === 4001) {\n                setBidStatus(cancelStatus)\n            } else {\n                setBidStatus(errorStatus)\n            }\n        }\n\n    }\n\n\n    const renderStatus = (status) => {\n        switch (status) {\n            case 'Active':\n                return !isVote && <span className='Active'>Active Sales</span>\n\n            case 'Upcoming':\n                return <span className='Upcoming'>Upcoming Sales</span>\n\n            case 'Past':\n                return <span className='Past'>Past Sales</span>\n            default:\n                return <></>\n        }\n    }\n\n    const renderButton = (status) => {\n        switch (status) {\n            case 'Active':\n                return <>\n                    {isVote && (\n                        <>\n                            <Button type='white' value='Learn More' width='168px' onClick={() => {\n                                history.push(`/learn-more/${pool.id}`)\n                            }} />\n                            <Button type='black' value='Support' width='168px' onClick={() => {\n                                setIsSupport(true)\n                            }} />\n                        </>\n                    )}\n\n                    {!isVote && (\n                        <>\n                            <Button type='white' value='Learn More' width='168px' onClick={() => {\n                                history.push(`/learn-more/${poolId}`)\n                            }} />\n                            <Button type='black' value='Join Auction' width='168px' onClick={() => {\n                                setIsSupport(true)\n                            }} />\n                        </>\n                    )}\n\n                </>\n\n            case 'Upcoming':\n                return <>\n                    <Button type='white' value='Learn More' width='168px' onClick={() => {\n                        history.push(`/learn-more/${poolId}`)\n                    }} />\n                </>\n\n            case 'Past':\n                return <>\n                    <Button type='black' value='Visit Project' width='168px' onClick={() => {\n                        history.push(`/certified-sales/${poolId}`)\n                    }} />\n                </>\n\n            case 'proList-Active':\n                return <>\n                    <Button type='white' value='Learn More' width='168px' onClick={() => {\n                        history.push(`/learn-more/${poolId}`)\n                    }} />\n                    <Button type='black' value='Support' width='168px' onClick={() => {\n                        setIsSupport(true)\n                    }} />\n                </>\n\n            case 'Success':\n            case 'Failed':\n                return <>\n                    <Button type='white' value='Visit Project' width='168px' onClick={() => {\n                        history.push(`/learn-more/${poolId}`)\n                    }} />\n                    {new BigNumber(myVotes).isGreaterThan('0') && !myVotesClaimed && <Button type='black' value='Claim support tokens back' width='240px' onClick={() => {\n                        // history.push(`/certified-sales/${poolId}`)\n                        onCliam()\n                    }} />}\n                </>\n\n            default:\n                return <></>\n        }\n    }\n\n    return (\n        <CardStyled>\n            <div className=\"status\">\n                {renderStatus(pool.status)}\n                {/* <span>Active Sales</span> */}\n            </div>\n            <div className=\"main\">\n                {pool.proInfo && <CardHeader title={pool && pool.proInfo && pool.proInfo.proname} logo={HOST+'/'+pool.proInfo.prologourl} socialLink={[\n                    { name: 'facebook', link: pool.proInfo.fackbook },\n                    { name: 'telegram', link: pool.proInfo.telegram },\n                    { name: 'twitter', link: pool.proInfo.twitter },\n                    { name: 'github', link: pool.proInfo.githublink },\n                    { name: 'medium', link: pool.proInfo.medium }\n                ]} />}\n\n                <div className=\"middle\">\n                    <div className=\"left\">\n                        {isVote && myVotes && new BigNumber(myVotes).isGreaterThan('0') && <span className='vote'>You Voted</span>}\n                        <Passage\n                            title='Project details'\n                            desc={pool.proInfo.prosummary} />\n\n                        <a href=\"http://activeprojectname.com\">{pool.proInfo.prowebsite}</a>\n\n                        <Passage\n                            title='Time Left'\n                            desc={`${left.days}d : ${left.hours}h : ${left.minutes}m : ${left.seconds}s`} />\n\n                        {progress && <Progress\n                            width='480px'\n                            status={pool.status}\n                            plan={new BigNumber(pool.totalVotes).dividedBy('200000000000000000000').dividedBy('100')}\n                            value={`${weiToNum(pool.totalVotes)} BOT`}\n                            total={progress.total}\n                        />}\n\n                        {isSupport && status !== 'proList-Close' && <div className='support'>\n                            <TextInput onValChange={(value) => {\n                                console.log('value', value)\n                                setValue(value)\n                            }} placeholder={`Enter your vote amount ${weiToNum(balance)} BOT`} width='100%' bottom={'10px'} />\n                            <Button disabled={new BigNumber(numToWei(value)).isGreaterThan(balance)} type='black'\n                                value={new BigNumber(numToWei(value)).isGreaterThan(balance) ? `Insufficient BOT` : 'Support'}\n                                width='180px' onClick={() => {\n                                    setSupporting(true)\n                                }} />\n                            <Button type='white' value='Back' width='180px' onClick={() => {\n                                setIsSupport(false)\n                            }} />\n                        </div>}\n                    </div>\n\n                    <div className=\"right\">\n                        <Passage\n                            title='Auction Type'\n                            desc={pool.proInfo.auctiontype} />\n\n                        <Passage\n                            title='Participant'\n                            desc='Public' />\n\n                        <Passage\n                            title='Requirement'\n                            desc={(pool.proInfo.ifkyc === 0 && pool.proInfo.ifwhitelist === 0) ? 'None' : `${pool.proInfo.ifkyc === 1 ? 'KYC /' : ''} ${pool.proInfo.ifwhitelist === 1 ? 'White List ' : ''}`} />\n                    </div>\n                </div>\n\n                {!isSupport && <div className=\"bottom\">\n                    {renderButton(pool.status)}\n                </div>}\n            </div>\n\n            <TxModal modalStatus={bidStatus} onDismiss={() => {\n                setBidStatus(initStatus)\n            }} />\n\n            {supporting && (\n                <ModalLayout className='layout' onClick={(e) => {\n                    e.stopPropagation()\n                }}>\n                    <Support onConfirm={onVote} cancel={() => setSupporting(false)} amount={value} />\n                </ModalLayout>\n            )}\n        </CardStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/Progress.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/HeaderTab/PersonalModal.jsx",["447","448","449"],"import React, { useContext, useEffect, useState } from 'react'\nimport { PerModalStyled } from './styled'\nimport { useHistory } from 'react-router-dom'\nimport { useWeb3React } from '@web3-react/core'\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport copy_icon from '../../../assets/icons/copy-black.svg'\nimport bule_check from '../../../assets/images/bule-check.svg'\nimport { useVoteList } from \"../../CertifiedSales/hooks\";\nimport { queryIsKyc } from '../../../config/utils/END_FUN'\nimport { queryBotBalance } from '../../../config/utils/BOT_FUN'\nimport { myContext } from '../../../redux';\n\nexport default function PersonalModal({ show = false, userName }) {\n    const history = useHistory()\n    const { account, chainId, library } = useWeb3React()\n    const KYC_STATUS = window.localStorage.getItem('KYC_STATUS') || 0\n    const { state, dispatch } = useContext(myContext);\n    const { list } = useVoteList()\n    const [isKYC, setIsKYC] = useState(false)\n    const [balance, setBalance] = useState(0)\n\n    const myProject = list && list.filter(item => { return item.status === 'Active' && item.creator.toLowerCase() === account.toLowerCase() })[0]\n\n    useEffect(async () => {\n        if (!account) return\n        const isKYC = await queryIsKyc(account)\n        const balance = await queryBotBalance(library, account, chainId)\n        setIsKYC(isKYC)\n        setBalance(balance)\n    }, [account])\n\n    const handelClickLi = (type) => {\n        if (!type) return\n        switch (type) {\n            case 'kyc':\n                return history.push('/kyc')\n            case 'PersonalInfo':\n                return history.push('/PersonalInfo')\n            case 'applySale':\n                console.log(isKYC, balance)\n                console.log(state)\n                if (!isKYC) {\n                    return dispatch({\n                        type: 'MODAL',\n                        value: {\n                            name: 'CONFIRM',\n                            title: 'Bounce Decentralized',\n                            deputy: 'You are not KYC certified, please authenticate before adding the vote',\n                            cancel: {\n                                text: 'Not Now'\n                            },\n                            confirm: {\n                                text: 'Go',\n                                callback: () => {\n                                    dispatch({type: 'MODAL', value: null})\n                                    history.push('/kyc')\n                                }\n                            }\n                        }\n                    })\n                } else if (balance < 0.3) {\n                    return dispatch({\n                        type: 'MODAL',\n                        value: {\n                            name: 'CONFIRM',\n                            title: 'Bounce Decentralized',\n                            deputy: `If you want to add a project vote, you must have more than 0.3 BOT. Your current balance is ${Number(balance)}, so you cannot create it`,\n                            cancel: {\n                                text: 'I Know'\n                            }\n                        }\n                    })\n                } else if (myProject) {\n                    return dispatch({\n                        type: 'MODAL',\n                        value: {\n                            name: 'CONFIRM',\n                            title: 'Bounce Decentralized',\n                            deputy: `You currently have a project running and cannot create two running pools`,\n                            cancel: {\n                                text: 'I Know'\n                            },\n                            confirm: {\n                                text: 'Show My Project',\n                                callback: () => {\n                                    return history.push(`/learn-more/${myProject.id}`)\n                                }\n                            }\n                        }\n                    })\n\n                } else {\n                    return history.push('/applySale')\n                }\n                break\n            default:\n                return\n        }\n    }\n\n\n    return (\n        show && <PerModalStyled>\n            <div className=\"account\">\n                <div className='account_name'>\n                    <h5>{userName}</h5>\n                    {KYC_STATUS === '1' && <img src={bule_check} alt=\"\" />}\n                </div>\n                <div className=\"account_address\">\n                    <p>{account || '0x00'} </p>\n                    <CopyToClipboard\n                        text={account}\n                        onCopy={() => { }}>\n                        <img className='ignore' src={copy_icon} alt=\"\" />\n                    </CopyToClipboard>\n                </div>\n            </div>\n            <ul>\n                {KYC_STATUS !== '1' && <li\n                    onClick={() => {\n                        handelClickLi('kyc')\n                    }}\n                >\n                    <i className='kyc'></i>\n                    <span>KYC</span>\n                </li>}\n\n                <li onClick={() => {\n                    handelClickLi('PersonalInfo')\n                }}>\n                    <i className='pi'></i>\n                    <span>Personal Info</span>\n                </li>\n\n                <li\n                    onClick={() => { handelClickLi('applySale') }}\n                >\n                    <i className='acs'></i>\n                    <span>{myProject ? 'Check Status' : 'Apply Certified Sale'}</span>\n                </li>\n            </ul>\n        </PerModalStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/Crumbs.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/CardHeader.jsx",["450"],"import React from 'react'\nimport { CardHeaderStyled } from './styled'\n\nimport facebook from '../../assets/icons/facebook.svg'\nimport telegram from '../../assets/icons/telegram.svg'\nimport twitter from '../../assets/icons/twitter.svg'\nimport github from '../../assets/icons/github.svg'\nimport medium from '../../assets/icons/medium.svg'\n\nconst iconMap = {\n    facebook, telegram, twitter, github, medium\n}\n\nexport default function CardHeader({ title = 'Untitled', socialLink = [], logo }) {\n    return (\n        <CardHeaderStyled>\n            <div className=\"title\">\n                <img src={logo} className='head_img'></img>\n                <h2>{title}</h2>\n            </div>\n            <ul>\n                {socialLink.filter(item => { return (item.link && item.link !== '') }).map((item, index) => {\n                    return <li key={index}>\n                        <a href={item.link} key={index}>\n                            <img src={iconMap[item.name]} alt=\"\" />\n                        </a>\n                    </li>\n                })}\n            </ul>\n        </CardHeaderStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step6.jsx",["451"],"import React, { useEffect, useState } from 'react'\nimport { Step6Styled } from './styled'\nimport { TextInput, Button, Upload } from '../components/Table'\n\nconst requireList = ['contactemail', 'prologourl']\n\nexport default function Step6 ({ setCurStep, setTitle, step6Data, setStep6Data, handelSubmit }) {\n    const [isNext, setIsNext] = useState(false)\n\n    useEffect(() => {\n        setTitle({\n            title: 'Auction',\n            crumbsList: [{\n                name: 'Apply Certified Sales'\n            }, {\n                name: 'General information',\n                onClick: () => { return setCurStep(1) }\n            }, {\n                name: 'Details',\n                onClick: () => { return setCurStep(2) }\n            }, {\n                name: 'Team',\n                onClick: () => { return setCurStep(3) }\n            }, {\n                name: 'Token metrics',\n                onClick: () => { return setCurStep(4) }\n            }, {\n                name: 'Auction',\n                onClick: () => { return setCurStep(5) }\n            }, {\n                name: 'Additional information',\n                active: true\n            }]\n        })\n    }, [])\n\n    useEffect(() => {\n        const arr = requireList.filter(item => {\n            return !step6Data[item]\n        })\n        // console.log('arr',arr, requireList)\n        if (arr.length === 0) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [step6Data])\n\n    const handelInputChange = (key, data) => {\n        const obj = { ...step6Data }\n        if (!data.isError) {\n            obj[key] = data.value\n        } else {\n            obj[key] = null\n        }\n        setStep6Data(obj)\n    }\n\n    return (\n        <Step6Styled>\n            <TextInput\n                label='Contact email'\n                placeholder='Enter your Contact email'\n                width='600px'\n                defaultVal={step6Data.contactemail}\n                isRequire={true}\n                REG_rule={{\n                    reg: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n                    msg: 'Please enter a valid email address'\n                }}\n                onValueChange={(val) => {\n                    handelInputChange('contactemail', val)\n                }}\n            />\n\n            <TextInput\n                label='Additional information'\n                placeholder='Enter amount of token'\n                width='600px'\n                defaultVal={step6Data.additionalinfo}\n                maxLength={200}\n                onValueChange={(val) => {\n                    handelInputChange('additionalinfo', val)\n                }}\n            />\n\n            <Upload\n                name='Project logo'\n                width='600px'\n                desc='Supports JPG, PNG, JPEG2000, GIF, no more than 100MB, 262*262 Reccomended'\n                successCallBack={(path) => {\n                    handelInputChange('prologourl', {\n                        isRequire: true,\n                        isError: false,\n                        value: path\n                    })\n                }} />\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\n                    setCurStep(5)\n                }} />\n                <Button type='black' value='Submit' width='164px' disabled={!isNext} onClick={() => {\n                    handelSubmit && handelSubmit()\n                }} />\n            </div>\n        </Step6Styled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step5.jsx",["452"],"import React, { useEffect, useState } from 'react'\nimport { Step5Styled } from './styled'\nimport { TextInput, TimeInput, AmountInput, Radio, Select, Button } from '../components/Table'\n\nconst requireList = ['auctiontype', 'amountoftoken', 'pricepertoken', 'allocationperwallet', 'auctiontime', 'teamwallet', 'ifkyc', 'ifwhitelist']\n\nexport default function Step5({ setCurStep, setTitle, step5Data, setStep5Data }) {\n    const [isNext, setIsNext] = useState(false)\n\n    useEffect(() => {\n        setTitle({\n            title: 'Auction',\n            crumbsList: [{\n                name: 'Apply Certified Sales'\n            }, {\n                name: 'General information',\n                onClick: () => { return setCurStep(1) }\n            }, {\n                name: 'Details',\n                onClick: () => { return setCurStep(2) }\n            }, {\n                name: 'Team',\n                onClick: () => { return setCurStep(3) }\n            }, {\n                name: 'Token metrics',\n                onClick: () => { return setCurStep(4) }\n            }, {\n                name: 'Auction',\n                active: true\n            }]\n        })\n    }, [])\n\n    useEffect(() => {\n        const arr = requireList.filter(item => {\n            return step5Data[item] === null || step5Data[item] === undefined\n        })\n\n        if (arr.length === 0) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [step5Data])\n\n    const handelInputChange = (key, data) => {\n        const obj = { ...step5Data }\n        if (!data.isError) {\n            obj[key] = data.value\n        } else {\n            obj[key] = null\n        }\n        setStep5Data(obj)\n    }\n\n    return (\n        <Step5Styled>\n\n            <Select\n                label='Auction type'\n                width='600px'\n                options={[\n                    { name: 'Fixed swap auction' },\n                    { name: 'Sealed-bid auction' },\n                    { name: 'Dutch auction' },\n                ]}\n\n                defaultVal={{\n                    name: step5Data.auctiontype\n                }}\n\n                onChange={(val) => {\n                    handelInputChange('auctiontype', {\n                        isRequire: true,\n                        isError: false,\n                        value: val.name\n                    })\n                }}\n            />\n\n            <TextInput\n                label='Amount of tokens for auction'\n                placeholder='Enter the amount of token you want to auction'\n                width='600px'\n                defaultVal={step5Data.amountoftoken}\n                isRequire={true}\n                isNumber={true}\n                onValueChange={(val) => {\n                    handelInputChange('amountoftoken', {\n                        isRequire: true,\n                        isError: false,\n                        value: val.value\n                    })\n                }}\n            />\n\n            <TextInput\n                label='Price per token'\n                placeholder='Enter price per token'\n                width='600px'\n                defaultVal={step5Data.pricepertoken}\n                isRequire={true}\n                isNumber={true}\n                unit='USDT'\n                onValueChange={(val) => {\n                    handelInputChange('pricepertoken', val)\n                }}\n            />\n\n            <Radio\n                label='Allocation per wallet'\n                options={[\n                    { name: 'No limits' },\n                    {\n                        name: 'USDT',\n                        append: <AmountInput\n                            width='100px'\n                            placeholder={'Amount'}\n                            defaultVal={\n                                step5Data.allocationperwallet !== 'No limits' && parseFloat(step5Data.allocationperwallet)\n                            }\n                            onChange={(val) => {\n                                handelInputChange('allocationperwallet', {\n                                    isRequire: true,\n                                    isError: false,\n                                    value: val.value + ' USDT'\n                                })\n                            }}\n                        />\n                    },\n                ]}\n\n                defaultIndex={\n                    step5Data.allocationperwallet === 'No limits' ? 0 : 1\n                }\n\n                onChange={(val) => {\n                    if (val.name === 'No limits') {\n                        handelInputChange('allocationperwallet', {\n                            isRequire: true,\n                            isError: false,\n                            value: val.name\n                        })\n                    }\n                }}\n            />\n\n            <TimeInput\n                label='Auction time'\n                width='600px'\n                defaultVal={step5Data.auctiontime}\n                onChange={(time) => {\n                    handelInputChange('auctiontime', time)\n                }}\n            />\n\n\n\n            <TextInput\n                maxLength={64}\n                label='Team wallet to receive auction fund'\n                placeholder='Enter team wallet address to receive fund'\n                width='600px'\n                defaultVal={step5Data.teamwallet}\n                isRequire={true}\n                REG_rule={{\n                    reg: /[0x|0X][\\S]{41}/,\n                    msg: 'Please enter a positive integer Please enter a valid contract address'\n                }}\n                onValueChange={(val) => {\n                    handelInputChange('teamwallet', val)\n                }}\n            />\n\n            <div className=\"select_group\">\n                <Select\n                    label='KYC'\n                    width='294px'\n                    options={[\n                        { name: 'Yes', value: 1 },\n                        { name: 'No', value: 0 },\n                    ]}\n\n                    defaultVal={{\n                        value: step5Data.ifkyc\n                    }}\n\n                    onChange={(val) => {\n                        handelInputChange('ifkyc', {\n                            isRequire: true,\n                            isError: false,\n                            value: val.value\n                        })\n                    }}\n                />\n\n                <Select\n                    label='Whitelisting'\n                    width='294px'\n                    options={[\n                        { name: 'Yes', value: 1 },\n                        { name: 'No', value: 0 },\n                    ]}\n\n                    defaultVal={{\n                        value: step5Data.ifwhitelist\n                    }}\n\n                    onChange={(val) => {\n                        handelInputChange('ifwhitelist', {\n                            isRequire: true,\n                            isError: false,\n                            value: val.value\n                        })\n                    }}\n                />\n            </div>\n\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\n                    setCurStep(4)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(6)\n                    console.log(step5Data)\n                }} />\n            </div>\n        </Step5Styled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step4.jsx",["453"],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step3.jsx",["454"],"import React, { useEffect, useState } from 'react'\nimport { Step3Styled } from './styled'\nimport { TextInput, Button } from '../components/Table'\n\nconst requireList = ['teambio']\n\nexport default function Step3({ setCurStep, setTitle, step3Data, setStep3Data }) {\n    const [isNext, setIsNext] = useState(false)\n\n    useEffect(() => {\n        setTitle({\n            title: 'Team',\n            crumbsList: [{\n                name: 'Apply Certified Sales'\n            }, {\n                name: 'General information',\n                onClick: () => { return setCurStep(1) }\n            }, {\n                name: 'Details',\n                onClick: () => { return setCurStep(2) }\n            }, {\n                name: 'Team',\n                active: true\n            }]\n        })\n    }, [])\n\n    useEffect(() => {\n        const arr = requireList.filter(item => {\n            return !step3Data[item]\n        })\n        if (arr.length === 0) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [step3Data])\n\n    const handelInputChange = (key, data) => {\n        const obj = { ...step3Data }\n        if (!data.isError) {\n            obj[key] = data.value\n        } else {\n            obj[key] = null\n        }\n        setStep3Data(obj)\n    }\n\n    return (\n        <Step3Styled>\n            <TextInput\n                label='Team'\n                placeholder='Enter short bio about your team'\n                width='600px'\n                minHeight='140px'\n                marginTop='0px'\n                maxLength={500}\n                isRequire={true}\n                defaultVal={step3Data.teambio}\n                onValueChange={(val) => {\n                    handelInputChange('teambio', val)\n                }}\n            />\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\n                    setCurStep(2)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(4)\n                }} />\n            </div>\n        </Step3Styled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/index.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/utils/time.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/config/utils/BOT_FUN.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/config/utils/END_FUN.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Select.jsx",["455","456"],"import React, { useState, useEffect } from 'react'\nimport { SelectStyled } from './styled'\nimport icon_down from '../../../assets/icons/down.svg'\n\nexport const Select = ({ isRequire, label, width, options = [], onChange, defaultVal }) => {\n    const [isPull, setIsPull] = useState(false)\n    const [selOption, setSelOption] = useState(0)\n\n    useEffect(() => {\n        if (selOption === null) return\n        if (options.length === 0) return\n        onChange && onChange(options[selOption])\n    }, [selOption])\n\n    useEffect(() => {\n        if (options.length === 0 && !defaultVal && selOption) return\n\n        console.log(options,defaultVal )\n        options.forEach((item, index) => {\n            if (defaultVal && ((defaultVal.name !== undefined && item.name === defaultVal.name) || (defaultVal.value !== undefined && item.value === defaultVal.value))) {\n                return setSelOption(index)\n            }\n        })\n    }, [defaultVal, options])\n\n    return (\n        <SelectStyled\n            width={width}\n        >\n            {label && <p>{label}\n                {isRequire && <span>*</span>}\n            </p>}\n\n            <div className='sel_wrapper'>\n                <div className=\"input\" onClick={() => {\n                    setIsPull(!isPull)\n                }}>\n                    <span>{options[selOption] ? options[selOption].name : ''}</span>\n                    <img className={isPull ? 'up' : 'down'} src={icon_down} alt=\"\" />\n                </div>\n                {isPull && <ul className='options'>\n                    {options.map((item, index) => {\n                        return <li\n                            key={index}\n                            className={index === selOption ? 'active' : ''}\n                            onClick={() => {\n                                setSelOption(index)\n                                setIsPull(false)\n                            }}>\n                            {item.name}\n                        </li>\n                    })}\n                </ul>}\n            </div>\n        </SelectStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Text.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Upload.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Button.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Check.jsx",["457"],"import React, { useState, useEffect } from 'react'\nimport { RadioStyled } from './styled'\nimport icon_radio from '../../../assets/images/radio.svg'\nimport icon_radio_sel from '../../../assets/images/radio_sel.svg'\n\nexport const Radio = ({ label, width, onChange, options = [], defaultIndex = 0 }) => {\n    const [curSel, setCurSel] = useState(defaultIndex)\n\n    useEffect(() => {\n        onChange && onChange(options[curSel])\n    }, [curSel])\n\n    return (\n        <RadioStyled width={width}>\n            {label && <p>{label}</p>}\n\n            <ul>\n                {options.map((item, index) => {\n                    return <li\n                        key={index}\n                        onClick={() => {\n                            setCurSel(index)\n                        }}>\n                        <img src={curSel === index ? icon_radio_sel : icon_radio} alt=\"\" />\n                        <span>{item.name}</span>\n                        {item.append && curSel === index && item.append}\n                    </li>\n                })}\n            </ul>\n        </RadioStyled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Form.jsx",["458"],"import React, { useEffect } from 'react'\nimport { FormStyled } from './styled'\n\nexport const Form = ({ title, width, children, marginTop }) => {\n    return (\n        <FormStyled width={width} marginTop={marginTop}>\n            {title && <h5>{title}</h5>}\n\n            <div className=\"children\">\n                {children}\n            </div>\n        </FormStyled>\n    )\n}\n\n\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/Input.jsx",["459","460","461","462","463"],"import React, { useEffect, useState } from 'react'\nimport { InputStyled, AmountStyled, TimeInputStyled } from './styled'\n\nexport const TextInput = ({ unit, upperCase, name, isNumber, isName, REG_rule, maxLength, disabled, defaultVal, placeholder, width, minHeight, marginTop, label, onChange, onValChange, onValueChange, isRequire = false, bottom }) => {\n    const [val, setVal] = useState('')\n    const [isError, setIsError] = useState(false)\n    const [errMsg, setErrMsg] = useState('')\n    const [sHeight, setSHeight] = useState('48px')\n\n    useEffect(() => {\n        if (!defaultVal) return\n        setVal(defaultVal)\n    }, [defaultVal])\n\n    useEffect(() => {\n        if (String(val).trim() === '' && !isError) return\n        onValueChange && onValueChange({\n            name: name,\n            value: val,\n            isError: isError,\n            errMsg: errMsg,\n            isRequire: isRequire ? isRequire : false\n        })\n\n\n        if (isRequire && val === '') {\n            onValChange && onValChange(null)\n        } else {\n            onValChange && onValChange(val)\n        }\n\n    }, [val, isError])\n\n    const regMatch = (val) => {\n        if (REG_rule) {\n            const reg = new RegExp(REG_rule.reg)\n            if (!reg.test(val)) {\n                setErrMsg(REG_rule.msg)\n                setIsError(true)\n            } else {\n                setErrMsg('')\n                setIsError(false)\n            }\n\n        } else {\n            setErrMsg('')\n            setIsError(false)\n        }\n\n\n    }\n\n    const wrapperName = (str) => {\n        let reg = /[0-9]+/g;\n        let str1 = str.replace(reg, \"\");\n        if (str1 === '') return ''\n        let arr = str1.toLowerCase().split(\" \");\n        for (var i = 0; i < arr.length; i++) {\n            arr[i] = arr[i][0].toUpperCase() + arr[i].substring(1, arr[i].length);\n        }\n        return arr.join(\" \");\n    }\n\n    const wrapperNumber = (str) => {\n        let reg = /[\\D]+/g;\n        let str1 = str.replace(reg, \"\");\n        return str1\n    }\n\n    const wrapperUpperCase = (str) => {\n        let reg = /[a-zA-Z]+/g;\n        let str1 = str.replace(reg, (v) => {\n            if (v === ' ') return\n            return v.toUpperCase()\n        });\n        return str1\n    }\n\n\n    return (\n        <InputStyled\n            width={width}\n            height={sHeight}\n            marginTop={marginTop}\n        >\n            {label && <p>\n                {label}\n                {isRequire && <span className='require'>*</span>}\n            </p>}\n\n            <div className=\"input_area\">\n                <textarea\n                    name={name}\n                    style={{ resize: 'none', height: sHeight, minHeight: minHeight, marginBottom: bottom }}\n                    className={`${val !== '' ? 'isComplete' : ''} ${isError ? 'Error' : ''}`}\n                    value={val}\n                    // height\n                    placeholder={placeholder}\n                    disabled={disabled}\n                    maxLength={maxLength || 30}\n                    onChange={(e) => {\n                        const height = e.target.scrollHeight\n                        if ((height - 1) + 'px' !== sHeight) {\n                            console.log((height - 1) + 'px')\n                            setSHeight((height - 1) + 'px')\n                        }\n\n                        let val = e.target.value\n                        if (isName) {\n                            val = String(val).trim()\n                            val = wrapperName(val)\n                        }\n\n                        if (isNumber) {\n                            val = String(val).trim()\n                            val = wrapperNumber(val)\n                        }\n\n                        if (upperCase) {\n                            val = wrapperUpperCase(val)\n                        }\n                        regMatch(val)\n                        setVal(val)\n                        onChange && onChange(e)\n                    }}\n                    onBlur={(e) => {\n                        let val = e.target.value\n                        if (isRequire && String(e.target.value).trim() === '') {\n                            setIsError(true)\n                            setErrMsg('Please fill in this field')\n                        } else if (!isError) {\n                            setIsError(false)\n                            setErrMsg('')\n                        }\n                    }}\n                ></textarea>\n\n                {unit && <p className='unit'>{unit}</p>}\n            </div>\n            {isError && <p className=\"error_msg\">{errMsg}</p>}\n        </InputStyled>\n    )\n}\n\nexport const TimeInput = ({ label, width, marginTop, onChange, defaultVal }) => {\n    const [days, setDays] = useState('')\n    const [hours, setHours] = useState('')\n    const [minutes, setMinutes] = useState('')\n    const [isError, setIsError] = useState(false)\n\n    useEffect(() => {\n        if (days === '' && hours === '' && minutes === '') return\n        const err = getSeconds(days, hours, minutes) < 60 * 5 ? true : false\n\n        setIsError(err)\n\n        const obj = {\n            days: days === '' ? 0 : days,\n            hours: hours === '' ? 0 : hours,\n            minutes: minutes === '' ? 0 : minutes,\n            seconds: getSeconds(days, hours, minutes),\n            timestamp: getSeconds(days, hours, minutes) * 1000,\n            isRequire: true,\n            isError: err,\n            value: String(getSeconds(days, hours, minutes))\n        }\n\n\n        onChange && onChange(obj)\n    }, [days, hours, minutes])\n\n    useEffect(() => {\n        if (!defaultVal) return\n        console.log(defaultVal)\n        const day = parseInt(defaultVal / (24 * 60 * 60))\n        const hour = parseInt((defaultVal / (60 * 60))) % 24\n        const minute = parseInt(defaultVal / 60) % 60\n\n        day && setDays(day)\n        hour && setHours(hour)\n        minute && setMinutes(minute)\n\n    }, [])\n\n    const getSeconds = (days = 0, hours = 0, minutes = 0) => {\n        const s1 = days * 24 * 60 * 60\n        const s2 = hours * 60 * 60\n        const s3 = minutes * 60\n\n        return s1 + s2 + s3\n    }\n\n    return <TimeInputStyled\n        width={width}\n        marginTop={marginTop}\n    >\n        {label && <p>\n            {label}\n            {<span className='require'>*</span>}\n        </p>}\n\n        <div className=\"input_box\">\n            <input type=\"number\" name='Days' placeholder='Days' value={days} onChange={(e) => {\n                let val = String(e.target.value).trim()\n                val = parseFloat(val).toString()\n                if (val !== 'NaN') {\n                    if (val > 6) {\n                        val = 6\n                    } else if (val < 1) {\n                        val = 0\n                    }\n                    setDays(val)\n                } else {\n                    setDays(0)\n                }\n            }} />\n            <input type=\"number\" name='Hours' placeholder='Hours' value={hours} onChange={(e) => {\n                let val = String(e.target.value).trim()\n                val = parseFloat(val).toString()\n                if (val !== 'NaN') {\n                    if (val > 23) {\n                        val = 23\n                    } else if (val < 1) {\n                        val = 0\n                    }\n                    setHours(val)\n                } else {\n                    setHours(0)\n                }\n            }} />\n            <input type=\"number\" name='Minutes' placeholder='Minutes' value={minutes} onChange={(e) => {\n                let val = String(e.target.value).trim()\n                val = parseFloat(val).toString()\n                if (val !== 'NaN') {\n                    if (val > 58) {\n                        val = 59\n                    } else if (val < 1) {\n                        val = 0\n                    }\n                    setMinutes(val)\n                } else {\n                    setMinutes(0)\n                }\n            }} />\n        </div>\n\n        {isError && <p className=\"error_msg\">5 minutes minimum input</p>}\n    </TimeInputStyled>\n}\n\nexport const AmountInput = ({ placeholder, width, defaultVal, onChange, maxValue }) => {\n    const [inputVal, setInputVal] = useState(defaultVal || '')\n    const [isError, setIsError] = useState(false)\n    const [errMsg, setErrmsg] = useState('')\n\n    useEffect(() => {\n        onChange && onChange({\n            isRequire: true,\n            isError: isError,\n            value: inputVal\n        })\n    }, [inputVal])\n\n    return <AmountStyled\n        width={width || '100px'}\n    >\n        <input\n            type=\"number\"\n            value={inputVal}\n            className={isError ? 'error' : ''}\n            placeholder={placeholder}\n            onChange={(e) => {\n                let val = e.target.value\n                if (maxValue && parseFloat(val) > maxValue) {\n                    val = maxValue\n                }\n                setInputVal(val)\n            }}\n\n            onBlur={(e) => {\n                const val = e.target.value\n                if (String(val).trim() === '') {\n                    setIsError(true)\n                    setErrmsg('Please Enter')\n                }\n            }}\n        />\n\n        {isError && <p className='errMsg'>{errMsg}</p>}\n    </AmountStyled>\n}","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Exhibition/Passage.jsx",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/components/Table/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/PersonalInfo/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step2.jsx",["464"],"import React, { useEffect, useState } from 'react'\nimport { Step2Styled } from './styled'\nimport { TextInput, Button } from '../components/Table'\n\n\nconst requireList = ['prosummary', 'techhighlight']\n\nexport default function Step2({ setCurStep, setTitle, step2Data, setStep2Data }) {\n\n\n    const [isNext, setIsNext] = useState(false)\n\n    const wrapperToUpperCase = (str) => {\n        return String(str).toUpperCase()\n    }\n\n    useEffect(() => {\n        setTitle({\n            title: 'Details',\n            crumbsList: [{\n                name: 'Apply Certified Sales'\n            }, {\n                name: 'General information',\n                onClick: () => { return setCurStep(1) }\n            }, {\n                name: 'Details',\n                active: true\n            }]\n        })\n    }, [])\n\n    useEffect(() => {\n        const arr = requireList.filter(item => {\n            return !step2Data[item]\n        })\n        if (arr.length === 0) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [step2Data])\n\n    const handelInputChange = (key, data) => {\n        const obj = { ...step2Data }\n        if (!data.isError) {\n            obj[key] = data.value\n        } else {\n            obj[key] = null\n        }\n        setStep2Data(obj)\n    }\n\n    return (\n        <Step2Styled>\n            <TextInput\n                label='Project Summary'\n                placeholder='Enter your project Summary (Limit to 100 characters)'\n                width='600px'\n                marginTop='0px'\n                defaultVal={step2Data.prosummary}\n                isRequire={true}\n                maxLength={100}\n                onValueChange={(val) => {\n                    handelInputChange('prosummary', val)\n                }}\n            />\n\n            <TextInput\n                label='Technical highlight'\n                placeholder='Enter your project Technical highlight(Limit to 500 characters)'\n                width='600px'\n                maxLength={500}\n                defaultVal={step2Data.techhighlight}\n                isRequire={true}\n                onValueChange={(val) => {\n                    handelInputChange('techhighlight', val)\n                }}\n            />\n\n            <TextInput\n                label='Architecture'\n                placeholder='Enter your architecture'\n                width='600px'\n                defaultVal={step2Data.architecture}\n                isRequire={false}\n                maxLength={500}\n                name='architecture'\n                onValueChange={(val) => {\n                    console.log(val)\n                    handelInputChange('architecture', val)\n                }}\n            />\n\n            <ul className='add_append'>\n                {/* 添加附件 */}\n                <li>{wrapperToUpperCase('Add attachments')}</li>\n            </ul>\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\n                    setCurStep(1)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(3)\n                }} />\n            </div>\n        </Step2Styled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/ApplySale/Step1.jsx",["465","466","467","468","469","470","471","472","473","474","475","476","477"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Step1Styled } from './styled'\nimport { TextInput, Button } from '../components/Table'\n\nconst SocialConfig = ['Twitter', 'Medium', 'Telegram', 'Facebook']\nconst requireList = ['proname', 'prowebsite', 'protheme', 'whitepaperlink', 'githublink']\n\n\nexport default function Step1({ setCurStep, setTitle, step1Data, setStep1Data }) {\n    const history = useHistory()\n    const [socialLink, setSocialLink] = useState([])\n    const [isNext, setIsNext] = useState(false)\n\n    const wrapperToUpperCase = (str) => {\n        return String(str).toUpperCase()\n    }\n\n    useEffect(() => {\n        setTitle({\n            title: 'General information',\n            crumbsList: [{\n                name: 'Apply Certified Sales'\n            }, {\n                name: 'General information',\n                active: true\n            }]\n        })\n    }, [])\n\n    useEffect(() => {\n        // console.log(step1Data)\n        const arr = requireList.filter(item => {\n            return !step1Data[item]\n        })\n        if (arr.length === 0) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [step1Data])\n\n    const handelClickAdd = (item) => {\n        const list = [...socialLink]\n        if (!list.includes(item)) {\n            list.push(item)\n        } else {\n            const index = socialLink.indexOf(item)\n            list.splice(index, 1)\n        }\n        setSocialLink(list)\n    }\n\n    const handelInputChange = (key, data) => {\n        const obj = { ...step1Data }\n        if (!data.isError) {\n            obj[key] = data.value\n        } else {\n            obj[key] = null\n        }\n        setStep1Data(obj)\n    }\n\n    return (\n        <Step1Styled>\n            <p className='tip'><span>Please note.</span> The submission fee to apply certified sales is 0.3 BOT tokens</p>\n\n            <TextInput\n                label='Project name'\n                placeholder='Enter your project name'\n                defaultVal={step1Data.proname}\n                isRequire={true}\n                width='600px'\n                onValueChange={(val) => {\n                    handelInputChange('proname', val)\n                }}\n                maxLength={20}\n            />\n\n            <TextInput\n                label='Project website'\n                placeholder='Enter your project website'\n                defaultVal={step1Data.prowebsite}\n                isRequire={true}\n                width='600px'\n                onValueChange={(val) => {\n                    handelInputChange('prowebsite', val)\n                }}\n                maxLength={100}\n                REG_rule={{\n                    reg: /http(s)?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/,\n                    msg: 'Please enter a valid website address'\n                }}\n            />\n\n            <TextInput\n                label='Theme'\n                placeholder='For Example: Defi , Public Chain'\n                defaultVal={step1Data.protheme}\n                isRequire={true}\n                width='600px'\n                onValueChange={(val) => {\n                    handelInputChange('protheme', val)\n                }}\n            />\n\n            <TextInput\n                label='Whitepaper link'\n                placeholder=' Enter your whitepaper link'\n                defaultVal={step1Data.whitepaperlink}\n                isRequire={true}\n                width='600px'\n                REG_rule={{\n                    reg: /http(s)?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/,\n                    msg: 'Please enter a standard Whitepaper link'\n                }}\n                maxLength={100}\n                onValueChange={(val) => {\n                    handelInputChange('whitepaperlink', val)\n                }}\n            />\n\n            <TextInput\n                label='Github link'\n                placeholder='Paste github link'\n                defaultVal={step1Data.githublink}\n                isRequire={true}\n                width='600px'\n                maxLength={100}\n                REG_rule={{\n                    reg: /http(s)?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/,\n                    msg: 'Please enter a standard GitHub address'\n                }}\n\n                onValueChange={(val) => {\n                    handelInputChange('githublink', val)\n                }}\n            />\n\n\n            {socialLink.map((item, index) => {\n                return <TextInput\n                    key={index}\n                    label={`${item} link`}\n                    placeholder={`Paste ${item} link`}\n                    defaultVal={step1Data[item]}\n                    width='600px'\n                    isRequire={false}\n                    maxLength={100}\n                    REG_rule={{\n                        reg: /http(s)?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/,\n                        msg: 'Please enter a standard web address'\n                    }}\n                    onValueChange={(val) => {\n                        console.log(val)\n                        const name = String(item).toLowerCase()\n                        handelInputChange(name, val)\n                    }}\n                />\n            })}\n\n\n            <ul className='add_append'>\n                {SocialConfig.map((item, index) => {\n                    return <li\n                        className={socialLink.includes(item) ? 'soc_active' : ''}\n                        key={index}\n                        onClick={() => {\n                            handelClickAdd(item)\n                        }}\n                    >{wrapperToUpperCase(`Add ${item}`)}</li>\n                })}\n            </ul>\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Cancel' width='164px' onClick={() => {\n                    history.goBack(-1)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(2)\n                }} />\n            </div>\n        </Step1Styled>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Home/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/styled.js",[],"/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step3.jsx",["478","479","480"],"import React, { useState, useEffect, useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { TextInput, Form, Button, Upload } from '../components/Table'\nimport axios from 'axios'\nimport { useWeb3React } from '@web3-react/core'\nimport API_HOST from '../../config/request_api'\nimport { myContext } from '../../redux'\nimport Web3 from \"web3\";\nimport icon_plaint from '../../assets/images/plaint.svg'\n\nexport default function Step1({ curStep, setCurStep, ReqData, setReqData }) {\n    const history = useHistory()\n    const { dispatch } = useContext(myContext)\n    const { active, account, library } = useWeb3React()\n    const [data, setData] = useState({})\n    const [isNext, setIsNext] = useState(false)\n\n    useEffect(() => {\n        console.log(data, isNext)\n        const requiredList = ['idcardno', 'idcardfronturl', 'idcardbackurl']\n        const data_2 = requiredList.filter(item => {\n            if (!data[item]) {\n                return item\n            }\n        })\n\n        if (data_2.length === 0) {\n            setReqData(data)\n            return setIsNext(true)\n        } else {\n            return setIsNext(false)\n        }\n    }, [data])\n\n    const handelValChange = (key, val, required = false) => {\n        const data_2 = data\n        if (required && val === '') {\n            data_2[key] = null\n        } else {\n            data_2[key] = val || ''\n        }\n        setData({ ...ReqData, ...data_2 })\n    }\n\n\n    const handelSubmit = async () => {\n        // console.log(ReqData)\n        ReqData.bounceid = 0\n        ReqData.accountaddress = account\n        ReqData.status = 1  // 代表提交审核，审核中状态\n        const web3 = new Web3(library.provider);\n        const sign = await web3.eth.personal.sign('Welcome to Bounce!', account)\n        console.log('sign', sign)\n        axios.post(API_HOST.KYC, ReqData).then(res => {\n            if (res.status === 200 && res.data.code === 1) {\n                dispatch({\n                    type: 'MODAL',\n                    value: {\n                        name: 'CONFIRM',\n                        title: 'Message',\n                        deputy: 'The information review has been submitted successfully. Please wait for the approval of the review',\n                        confirm: {\n                            text: 'Confirm',\n                            callback: () => {\n                                dispatch({\n                                    type: 'MODAL',\n                                    value: null\n                                })\n                                // history.push('/')\n                                window.location.reload()\n                            }\n                        }\n                    }\n                })\n            } else {\n                dispatch({\n                    type: 'MODAL',\n                    value: {\n                        name: 'CONFIRM',\n                        title: 'Message',\n                        deputy: 'Your application is under review and will be reviewed within one working day. Please do not submit it twice',\n                        confirm: {\n                            text: 'Confirm',\n                            callback: () => {\n                                dispatch({\n                                    type: 'MODAL',\n                                    value: null\n                                })\n                                // history.push('/')\n                                window.location.reload()\n                            }\n                        }\n                    }\n                })\n            }\n        }).catch(err => {\n            console.log(err)\n        })\n    }\n\n    return (\n        <Form title={'ID confirmation'} marginTop='24px'>\n            <div className=\"tip\" style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                marginTop: 8\n            }}>\n                <img src={icon_plaint} alt=\"\" />\n                <p style={{\n                    fontSize: 12,\n                    marginLeft: 6\n                }}>This information is used to identity verification only, and will be kept secure by Bounce</p>\n            </div>\n\n            <TextInput\n                label='Passport Number'\n                placeholder='Enter your passport number'\n                isRequire={true}\n                onValueChange={(data) => {\n                    handelValChange('idcardno', data.value)\n                    console.log(data)\n                }} />\n            <Upload\n                title='Passport photo'\n                name='idcardfronturl'\n                desc='Please upload passport photo of page with ID number '\n                successCallBack={(path) => {\n                    handelValChange('idcardfronturl', path || null)\n                }} />\n            <Upload\n             title='Selfie'\n                name='idcardbackurl'\n                desc='Please upload a photo of yourself to match with passport '\n                successCallBack={(path) => {\n                    handelValChange('idcardbackurl', path || null)\n                }} />\n            <div className=\"btn_group\">\n                <Button type='white' value='Back' width='164px' onClick={() => {\n                    setCurStep(curStep - 1)\n                }} />\n                <Button type='black' value='Verify' width='164px' disabled={!isNext || !active} onClick={handelSubmit} />\n            </div>\n        </Form>\n    )\n}","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step2.jsx",["481"],"import React, { useState, useEffect } from 'react'\nimport { TextInput, Form, Button, Select } from '../components/Table'\nimport country from '../../config/country.json'\n\n\nexport default function Step2({ curStep, setCurStep, ReqData, setReqData }) {\n\n    const [isNext, setIsNext] = useState(false)\n\n    const requiredList = ['1_residentialaddr', '2_countryother']\n    const requiredList_json = requiredList\n        .sort((a1, a2) => {\n            return parseInt(a1) - parseInt(a2)\n        }).toString()\n    const [checkList, setCheckList] = useState([])\n\n    useEffect(() => {\n        const checkList_json = checkList.sort((a1, a2) => {\n            return parseInt(a1) - parseInt(a2)\n        }).toString()\n\n        console.log(checkList_json, requiredList_json)\n\n        if (checkList_json === requiredList_json) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [checkList])\n\n    const handelValChange = (key, val) => {\n        const data = { ...ReqData }\n        data[key] = val\n        setReqData(data)\n    }\n\n    const checkValue = (data) => {\n        if (!data) return\n        if (data.isRequire) {\n            const arrList = [...checkList]\n            if (!data.isError && data.value !== '') {\n                if (!arrList.includes(data.name)) {\n                    arrList.push(data.name)\n                }\n            } else {\n                if (arrList.includes(data.name)) {\n                    const index = arrList.indexOf(data.name)\n                    arrList.splice(index, 1)\n                }\n            }\n            setCheckList(arrList)\n        }\n    }\n\n    return (\n        <Form title={'Residental Address'}>\n            {/* <TextInput label='Country / Region'  onValChange={(val) => {\n                handelValChange('country', val)\n            }} /> */}\n            <Select\n                label='Country / Region'\n                width='600px'\n                options={country}\n                isRequire={true}\n                // defaultVal={{\n                //     name: 'Andorra'\n                // }}\n                onChange={(val) => {\n                    handelValChange('country', val.name)\n                }}\n\n            />\n\n\n            <TextInput\n                label='Address'\n                placeholder='Enter your Address'\n                name='1_residentialaddr'\n                defaultVal={ReqData && ReqData.residentialaddr}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('residentialaddr', data.value)\n                }}\n                isRequire={true}\n            // REG_rule={[{\n            //     reg: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\n            //     msg: 'The residential address is incorrect'\n            // }]}\n            />\n            <TextInput\n                label='Postal Code'\n                placeholder='Enter your Postal Code'\n                width='294px'\n                name='idtype'\n                defaultVal={ReqData && ReqData.idtype}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('idtype', data.value)\n                }}\n            />\n            <TextInput\n                label='City'\n                placeholder='Enter your city'\n                width='294px'\n                isRequire={true}\n                name='2_countryother'\n                defaultVal={ReqData && ReqData.countryother}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('countryother', data.value)\n                }}\n            />\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Back' width='164px' onClick={() => {\n                    setCurStep(curStep - 1)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(curStep + 1)\n                }} />\n            </div>\n        </Form>\n    )\n}\n","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/Kyc/Step1.jsx",["482","483","484"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { TextInput, Form, Button } from '../components/Table'\n\nexport default function Step1({ curStep, setCurStep, ReqData, setReqData }) {\n    const history = useHistory()\n    const [isNext, setIsNext] = useState(false)\n\n    const requiredList = ['1_username', '3_lastname', '4_birthday']\n    const requiredList_json = requiredList\n        .sort((a1, a2) => {\n            return parseInt(a1) - parseInt(a2)\n        }).toString()\n    const [checkList, setCheckList] = useState([])\n\n\n    useEffect(() => {\n        const checkList_json = checkList.sort((a1, a2) => {\n            return parseInt(a1) - parseInt(a2)\n        }).toString()\n\n        if (checkList_json === requiredList_json) {\n            setIsNext(true)\n        } else {\n            setIsNext(false)\n        }\n    }, [checkList])\n\n    const handelValChange = (key, val) => {\n        const data = { ...ReqData }\n        data[key] = val\n        setReqData(data)\n    }\n\n    const checkValue = (data) => {\n        if (!data) return\n        if (data.isRequire) {\n            const arrList = [...checkList]\n            if (!data.isError && data.value !== '') {\n                if (!arrList.includes(data.name)) {\n                    arrList.push(data.name)\n                }\n            } else {\n                if (arrList.includes(data.name)) {\n                    const index = arrList.indexOf(data.name)\n                    arrList.splice(index, 1)\n                }\n            }\n            setCheckList(arrList)\n        }\n    }\n\n\n    return (\n        <Form title={'Basic Info'}>\n            <TextInput\n                label='First Name'\n                width='294px'\n                placeholder='Enter first name'\n                name='1_username'\n                defaultVal={ReqData && ReqData.username}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('username', data.value)\n                }}\n                isRequire={true}\n                isName={true}\n            />\n            <TextInput\n                label='Middle Name (if applicable)'\n                width='294px'\n                placeholder='Enter middle name'\n                name='2_middlename'\n                defaultVal={ReqData && ReqData.middlename}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('middlename', data.value)\n                }}\n                isName={true}\n            />\n            <TextInput\n                label='Last Name'\n                placeholder='Enter last name'\n                name='3_lastname'\n                defaultVal={ReqData && ReqData.lastname}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('lastname', data.value)\n                }}\n                isRequire={true}\n                isName={true}\n            />\n\n\n            <TextInput\n                label='Date of Birth'\n                placeholder='2021-1-1'\n                name='4_birthday'\n                isRequire={true}\n                defaultVal={ReqData && ReqData.birthday}\n                onValueChange={(data) => {\n                    checkValue(data)\n                    handelValChange('birthday', data.value)\n                }}\n                REG_rule={{\n                    reg: /^((19[2-9]\\d{1})|(20((0[0-2])|(1[0-8]))))\\-((0?[1-9])|(1[0-2]))\\-((0?[1-9])|([1-2][0-9])|30|31)$/,\n                    msg: 'Incorrect birth date format (yyyy-mm-dd) Or under the age of 18'\n                }}\n            />\n\n            <div className=\"btn_group\">\n                <Button type='white' value='Cancel' width='164px' onClick={() => {\n                    history.goBack(-1)\n                }} />\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\n                    setCurStep(curStep + 1)\n                }} />\n            </div>\n        </Form>\n    )\n}","/Users/qt/Desktop/boundce/bounce-kyc/src/pages/CertifiedSales/SaleCard.jsx",["485","486","487","488"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { CardStyled } from './styled'\nimport { TextInput } from '../components/Table'\nimport { Button } from '../components/Table'\nimport CardHeader from './CardHeader'\nimport Progress from './Progress'\nimport { Passage } from '../components/Exhibition'\nimport { getContract, useActiveWeb3React } from \"../../web3\";\nimport {\n    TxModal,\n    initStatus,\n    errorStatus,\n    successStatus,\n    confirmStatus,\n    pendingStatus,\n    cancelStatus, successVotedStatus, successVoteClaimedStatus\n} from \"../../components/common/TXModal\";\nimport { BOT, BOUNCE_PRO_VOTING } from \"../../web3/address\";\nimport bounceERC20 from '../../web3/abi/bounceERC20.json'\nimport BounceProVoting from '../../web3/abi/BounceProVoting.json'\nimport { numToWei, weiToNum } from \"../../utils/numberTransform\";\nimport { ModalLayout } from \"../components/Modal/styled\";\nimport Support from \"../components/Modal/Support\";\nimport BigNumber from \"bignumber.js\";\nimport { getPoolLeftTime } from \"../../utils/time\";\nimport { useTokenBalance } from \"../../hooks/useBalance\";\nimport { useStatus } from \"./hooks\";\nimport API_HOST, { HOST as host } from \"../../config/request_api\";\n\n\nexport default function SalesCard({ status, poolId = 0, progress, claimFun, isVote, pool = {} }) {\n    const [isSupport, setIsSupport] = useState(false)\n    const [supporting, setSupporting] = useState(false)\n    const { balance } = useTokenBalance()\n    const [bidStatus, setBidStatus] = useState(initStatus)\n    // const { dispatch } = useContext(myContext)\n    const history = useHistory()\n    const { account, library, chainId, active } = useActiveWeb3React()\n    const [value, setValue] = useState()\n\n    const { myVotes, myVotesClaimed } = useStatus(pool.id || 0)\n    //   console.log('myVotesClaimed--->', myVotesClaimed)\n    const [left, setLeft] = useState({\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0\n    })\n\n    let timer\n    useEffect(() => {\n        console.log('pool left', pool)\n        if (pool) {\n            timer = setInterval(() => {\n                const left = getPoolLeftTime(!isVote && status === 'Upcoming' ? pool.openAt : pool.closeAt)\n                setLeft(left)\n            }, 1000)\n            return () => {\n                clearInterval(timer)\n            }\n        }\n    }, [pool])\n\n\n    const onVote = async () => {\n        setSupporting(false)\n        const tokenContract = getContract(library, bounceERC20.abi, BOT(chainId))\n        const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n        const weiAmount = numToWei(value);\n\n        setBidStatus(confirmStatus);\n        try {\n            await tokenContract.methods.approve(\n                BOUNCE_PRO_VOTING(chainId),\n                weiAmount,\n            )\n                .send({ from: account });\n            bounceContract.methods.vote(pool.id, weiAmount)\n                .send({ from: account })\n                .on('transactionHash', hash => {\n                    setBidStatus(pendingStatus)\n                })\n                .on('receipt', (_, receipt) => {\n                    console.log('bid fixed swap receipt:', receipt)\n                    setBidStatus(successVotedStatus)\n                })\n                .on('error', (err, receipt) => {\n                    setBidStatus(errorStatus)\n                })\n        } catch (e) {\n            console.log('bid---->', e)\n            if (e.code === 4001) {\n                setBidStatus(cancelStatus)\n            } else {\n                setBidStatus(errorStatus)\n            }\n        }\n\n    }\n\n    const onCliam = async () => {\n        setSupporting(false)\n        const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\n        setBidStatus(confirmStatus);\n        try {\n            bounceContract.methods.claim(pool.id)\n                .send({ from: account })\n                .on('transactionHash', hash => {\n                    setBidStatus(pendingStatus)\n                })\n                .on('receipt', (_, receipt) => {\n                    console.log('bid fixed swap receipt:', receipt)\n                    setBidStatus(successVoteClaimedStatus)\n                })\n                .on('error', (err, receipt) => {\n                    setBidStatus(errorStatus)\n                })\n        } catch (e) {\n            console.log('bid---->', e)\n            if (e.code === 4001) {\n                setBidStatus(cancelStatus)\n            } else {\n                setBidStatus(errorStatus)\n            }\n        }\n\n    }\n\n\n    const renderStatus = (status) => {\n        switch (status) {\n            case 'Active':\n                return !isVote && <span className='Active'>Active Sales</span>\n\n            case 'Upcoming':\n                return <span className='Upcoming'>Upcoming Sales</span>\n\n            case 'Past':\n                return <span className='Past'>Past Sales</span>\n            default:\n                return <></>\n        }\n    }\n\n    const renderButton = (status) => {\n        switch (status) {\n            case 'Active':\n                return <>\n                    {isVote && (\n                        <>\n                            <Button type='white' value='Learn More' width='168px' onClick={() => {\n                                history.push(`/learn-more/${pool.id}`)\n                            }} />\n                            <Button type='black' value='Support' width='168px' onClick={() => {\n                                setIsSupport(true)\n                            }} />\n                        </>\n                    )}\n\n                    {!isVote && (\n                        <>\n                            <Button type='white' value='Learn More' width='168px' onClick={() => {\n                                history.push(`/learn-more/${poolId}`)\n                            }} />\n                            <Button type='black' value='Join Auction' width='168px' onClick={() => {\n                                setIsSupport(true)\n                            }} />\n                        </>\n                    )}\n\n                </>\n\n            case 'Upcoming':\n                return <>\n                    <Button type='white' value='Learn More' width='168px' onClick={() => {\n                        history.push(`/learn-more/${poolId}`)\n                    }} />\n                </>\n\n            case 'Past':\n                return <>\n                    <Button type='black' value='Visit Project' width='168px' onClick={() => {\n                        history.push(`/certified-sales/${poolId}`)\n                    }} />\n                </>\n\n            case 'proList-Active':\n                return <>\n                    <Button type='white' value='Learn More' width='168px' onClick={() => {\n                        history.push(`/learn-more/${poolId}`)\n                    }} />\n                    <Button type='black' value='Support' width='168px' onClick={() => {\n                        setIsSupport(true)\n                    }} />\n                </>\n\n            case 'Success':\n            case 'Failed':\n                return <>\n                    <Button type='white' value='Visit Project' width='168px' onClick={() => {\n                        history.push(`/learn-more/${poolId}`)\n                    }} />\n                    {new BigNumber(myVotes).isGreaterThan('0') && !myVotesClaimed && <Button type='black' value='Claim support tokens back' width='240px' onClick={() => {\n                        // history.push(`/certified-sales/${poolId}`)\n                        onCliam()\n                    }} />}\n                </>\n\n            default:\n                return <></>\n        }\n    }\n\n    return (\n        <CardStyled>\n            <div className=\"status\">\n                {renderStatus(pool.status)}\n                {/* <span>Active Sales</span> */}\n            </div>\n            <div className=\"main\">\n                {pool.proInfo && pool.proInfo && <CardHeader title={pool && pool.proInfo && pool.proInfo && pool.proInfo && pool.proInfo.proname} logo={host + '/' + pool.proInfo && pool.proInfo.prologourl} socialLink={[\n                    { name: 'facebook', link: pool.proInfo && pool.proInfo.fackbook },\n                    { name: 'telegram', link: pool.proInfo && pool.proInfo.telegram },\n                    { name: 'twitter', link: pool.proInfo && pool.proInfo.twitter },\n                    { name: 'github', link: pool.proInfo && pool.proInfo.githublink },\n                    { name: 'medium', link: pool.proInfo && pool.proInfo.medium }\n                ]} />}\n\n                <div className=\"middle\">\n                    <div className=\"left\">\n                        {isVote && myVotes && new BigNumber(myVotes).isGreaterThan('0') && <span className='vote'>You Voted</span>}\n                        <Passage\n                            title='Project details'\n                            desc={pool.proInfo && pool.proInfo.prosummary} />\n\n                        <a href=\"http://activeprojectname.com\">{pool.proInfo && pool.proInfo.prowebsite}</a>\n\n                        <Passage\n                            title='Time Left'\n                            desc={`${left.days}d : ${left.hours}h : ${left.minutes}m : ${left.seconds}s`} />\n\n                        {progress && <Progress\n                            width='480px'\n                            status={pool.status}\n                            plan={new BigNumber(pool.totalVotes).dividedBy('200000000000000000000').dividedBy('100')}\n                            value={`${weiToNum(pool.totalVotes)} BOT`}\n                            total={progress.total}\n                        />}\n\n                        {isSupport && status !== 'proList-Close' && <div className='support'>\n                            <TextInput onValChange={(value) => {\n                                console.log('value', value)\n                                setValue(value)\n                            }} placeholder={`Enter your vote amount ${weiToNum(balance)} BOT`} width='100%' bottom={'10px'} />\n                            <Button disabled={new BigNumber(numToWei(value)).isGreaterThan(balance)} type='black'\n                                value={new BigNumber(numToWei(value)).isGreaterThan(balance) ? `Insufficient BOT` : 'Support'}\n                                width='180px' onClick={() => {\n                                    setSupporting(true)\n                                }} />\n                            <Button type='white' value='Back' width='180px' onClick={() => {\n                                setIsSupport(false)\n                            }} />\n                        </div>}\n                    </div>\n\n                    <div className=\"right\">\n                        <Passage\n                            title='Auction Type'\n                            desc={pool.proInfo && pool.proInfo.auctiontype} />\n\n                        <Passage\n                            title='Participant'\n                            desc='Public' />\n\n                        <Passage\n                            title='Requirement'\n                            desc={(pool.proInfo && pool.proInfo.ifkyc === 0 && pool.proInfo && pool.proInfo.ifwhitelist === 0) ? 'None' : `${pool.proInfo && pool.proInfo.ifkyc === 1 ? 'KYC /' : ''} ${pool.proInfo && pool.proInfo.ifwhitelist === 1 ? 'White List ' : ''}`} />\n                    </div>\n                </div>\n\n                {!isSupport && <div className=\"bottom\">\n                    {renderButton(pool.status)}\n                </div>}\n            </div>\n\n            <TxModal modalStatus={bidStatus} onDismiss={() => {\n                setBidStatus(initStatus)\n            }} />\n\n            {supporting && (\n                <ModalLayout className='layout' onClick={(e) => {\n                    e.stopPropagation()\n                }}>\n                    <Support onConfirm={onVote} cancel={() => setSupporting(false)} amount={value} />\n                </ModalLayout>\n            )}\n        </CardStyled>\n    )\n}\n",{"ruleId":"489","replacedBy":"490"},{"ruleId":"491","replacedBy":"492"},{"ruleId":"493","severity":1,"message":"494","line":2,"column":10,"nodeType":"495","messageId":"496","endLine":2,"endColumn":23},{"ruleId":"493","severity":1,"message":"497","line":51,"column":9,"nodeType":"495","messageId":"496","endLine":51,"endColumn":25},{"ruleId":"498","severity":1,"message":"499","line":61,"column":8,"nodeType":"500","endLine":61,"endColumn":10,"suggestions":"501"},{"ruleId":"498","severity":1,"message":"502","line":62,"column":8,"nodeType":"500","endLine":62,"endColumn":29,"suggestions":"503"},{"ruleId":"498","severity":1,"message":"504","line":70,"column":8,"nodeType":"500","endLine":70,"endColumn":17,"suggestions":"505"},{"ruleId":"493","severity":1,"message":"506","line":47,"column":8,"nodeType":"495","messageId":"496","endLine":47,"endColumn":10},{"ruleId":"498","severity":1,"message":"507","line":82,"column":8,"nodeType":"500","endLine":82,"endColumn":46,"suggestions":"508"},{"ruleId":"498","severity":1,"message":"509","line":86,"column":17,"nodeType":"510","endLine":97,"endColumn":19},{"ruleId":"511","severity":1,"message":"512","line":302,"column":52,"nodeType":"513","messageId":"514","endLine":302,"endColumn":54},{"ruleId":"515","severity":1,"message":"516","line":360,"column":33,"nodeType":"517","endLine":360,"endColumn":47},{"ruleId":"518","severity":1,"message":"519","line":381,"column":65,"nodeType":"517","endLine":384,"endColumn":52},{"ruleId":"493","severity":1,"message":"520","line":1,"column":17,"nodeType":"495","messageId":"496","endLine":1,"endColumn":27},{"ruleId":"493","severity":1,"message":"521","line":1,"column":29,"nodeType":"495","messageId":"496","endLine":1,"endColumn":38},{"ruleId":"493","severity":1,"message":"522","line":64,"column":9,"nodeType":"495","messageId":"496","endLine":64,"endColumn":15},{"ruleId":"498","severity":1,"message":"523","line":87,"column":6,"nodeType":"500","endLine":87,"endColumn":30,"suggestions":"524"},{"ruleId":"498","severity":1,"message":"525","line":116,"column":6,"nodeType":"500","endLine":116,"endColumn":23,"suggestions":"526"},{"ruleId":"493","severity":1,"message":"527","line":17,"column":13,"nodeType":"495","messageId":"496","endLine":17,"endColumn":18},{"ruleId":"493","severity":1,"message":"528","line":20,"column":18,"nodeType":"495","messageId":"496","endLine":20,"endColumn":25},{"ruleId":"493","severity":1,"message":"529","line":23,"column":21,"nodeType":"495","messageId":"496","endLine":23,"endColumn":31},{"ruleId":"493","severity":1,"message":"530","line":28,"column":23,"nodeType":"495","messageId":"496","endLine":28,"endColumn":35},{"ruleId":"493","severity":1,"message":"531","line":31,"column":22,"nodeType":"495","messageId":"496","endLine":31,"endColumn":33},{"ruleId":"493","severity":1,"message":"532","line":45,"column":11,"nodeType":"495","messageId":"496","endLine":45,"endColumn":24},{"ruleId":"498","severity":1,"message":"533","line":66,"column":8,"nodeType":"500","endLine":66,"endColumn":19,"suggestions":"534"},{"ruleId":"535","severity":1,"message":"536","line":176,"column":19,"nodeType":"537","messageId":"538","endLine":176,"endColumn":20},{"ruleId":"498","severity":1,"message":"539","line":183,"column":8,"nodeType":"500","endLine":183,"endColumn":34,"suggestions":"540"},{"ruleId":"493","severity":1,"message":"541","line":4,"column":8,"nodeType":"495","messageId":"496","endLine":4,"endColumn":16},{"ruleId":"493","severity":1,"message":"542","line":3,"column":8,"nodeType":"495","messageId":"496","endLine":3,"endColumn":19},{"ruleId":"498","severity":1,"message":"543","line":29,"column":8,"nodeType":"500","endLine":29,"endColumn":17,"suggestions":"544"},{"ruleId":"493","severity":1,"message":"545","line":3,"column":8,"nodeType":"495","messageId":"496","endLine":3,"endColumn":15},{"ruleId":"493","severity":1,"message":"546","line":39,"column":25,"nodeType":"495","messageId":"496","endLine":39,"endColumn":39},{"ruleId":"493","severity":1,"message":"547","line":22,"column":5,"nodeType":"495","messageId":"496","endLine":22,"endColumn":18},{"ruleId":"493","severity":1,"message":"547","line":20,"column":5,"nodeType":"495","messageId":"496","endLine":20,"endColumn":18},{"ruleId":"493","severity":1,"message":"548","line":41,"column":40,"nodeType":"495","messageId":"496","endLine":41,"endColumn":46},{"ruleId":"518","severity":1,"message":"519","line":53,"column":26,"nodeType":"517","endLine":53,"endColumn":51},{"ruleId":"518","severity":1,"message":"519","line":56,"column":25,"nodeType":"517","endLine":56,"endColumn":48},{"ruleId":"498","severity":1,"message":"549","line":38,"column":8,"nodeType":"500","endLine":38,"endColumn":14,"suggestions":"550"},{"ruleId":"551","severity":1,"message":"552","line":44,"column":55,"nodeType":"553","messageId":"554","endLine":61,"endColumn":12},{"ruleId":"498","severity":1,"message":"555","line":74,"column":6,"nodeType":"500","endLine":74,"endColumn":14,"suggestions":"556"},{"ruleId":"493","severity":1,"message":"557","line":83,"column":9,"nodeType":"495","messageId":"496","endLine":83,"endColumn":18},{"ruleId":"551","severity":1,"message":"552","line":89,"column":55,"nodeType":"553","messageId":"554","endLine":106,"endColumn":12},{"ruleId":"498","severity":1,"message":"558","line":149,"column":6,"nodeType":"500","endLine":149,"endColumn":14,"suggestions":"559"},{"ruleId":"498","severity":1,"message":"555","line":189,"column":6,"nodeType":"500","endLine":189,"endColumn":14,"suggestions":"560"},{"ruleId":"518","severity":1,"message":"519","line":45,"column":26,"nodeType":"517","endLine":45,"endColumn":51},{"ruleId":"518","severity":1,"message":"519","line":48,"column":25,"nodeType":"517","endLine":48,"endColumn":48},{"ruleId":"498","severity":1,"message":"561","line":30,"column":6,"nodeType":"500","endLine":30,"endColumn":32,"suggestions":"562"},{"ruleId":"493","severity":1,"message":"547","line":14,"column":5,"nodeType":"495","messageId":"496","endLine":14,"endColumn":18},{"ruleId":"493","severity":1,"message":"563","line":29,"column":8,"nodeType":"495","messageId":"496","endLine":29,"endColumn":16},{"ruleId":"493","severity":1,"message":"548","line":39,"column":40,"nodeType":"495","messageId":"496","endLine":39,"endColumn":46},{"ruleId":"498","severity":1,"message":"509","line":55,"column":21,"nodeType":"510","endLine":58,"endColumn":21},{"ruleId":"498","severity":1,"message":"564","line":24,"column":15,"nodeType":"553","endLine":30,"endColumn":6},{"ruleId":"498","severity":1,"message":"565","line":30,"column":8,"nodeType":"500","endLine":30,"endColumn":17,"suggestions":"566"},{"ruleId":"567","severity":1,"message":"568","line":95,"column":17,"nodeType":"569","messageId":"570","endLine":95,"endColumn":22},{"ruleId":"518","severity":1,"message":"519","line":18,"column":17,"nodeType":"517","endLine":18,"endColumn":54},{"ruleId":"498","severity":1,"message":"571","line":35,"column":8,"nodeType":"500","endLine":35,"endColumn":10,"suggestions":"572"},{"ruleId":"498","severity":1,"message":"571","line":32,"column":8,"nodeType":"500","endLine":32,"endColumn":10,"suggestions":"573"},{"ruleId":"498","severity":1,"message":"571","line":29,"column":8,"nodeType":"500","endLine":29,"endColumn":10,"suggestions":"574"},{"ruleId":"498","severity":1,"message":"571","line":26,"column":8,"nodeType":"500","endLine":26,"endColumn":10,"suggestions":"575"},{"ruleId":"498","severity":1,"message":"576","line":13,"column":8,"nodeType":"500","endLine":13,"endColumn":19,"suggestions":"577"},{"ruleId":"498","severity":1,"message":"578","line":24,"column":8,"nodeType":"500","endLine":24,"endColumn":29,"suggestions":"579"},{"ruleId":"498","severity":1,"message":"576","line":11,"column":8,"nodeType":"500","endLine":11,"endColumn":16,"suggestions":"580"},{"ruleId":"493","severity":1,"message":"521","line":1,"column":17,"nodeType":"495","messageId":"496","endLine":1,"endColumn":26},{"ruleId":"498","severity":1,"message":"581","line":32,"column":8,"nodeType":"500","endLine":32,"endColumn":22,"suggestions":"582"},{"ruleId":"493","severity":1,"message":"583","line":127,"column":29,"nodeType":"495","messageId":"496","endLine":127,"endColumn":32},{"ruleId":"498","severity":1,"message":"584","line":170,"column":8,"nodeType":"500","endLine":170,"endColumn":30,"suggestions":"585"},{"ruleId":"498","severity":1,"message":"586","line":183,"column":8,"nodeType":"500","endLine":183,"endColumn":10,"suggestions":"587"},{"ruleId":"498","severity":1,"message":"588","line":262,"column":8,"nodeType":"500","endLine":262,"endColumn":18,"suggestions":"589"},{"ruleId":"498","severity":1,"message":"571","line":30,"column":8,"nodeType":"500","endLine":30,"endColumn":10,"suggestions":"590"},{"ruleId":"498","severity":1,"message":"591","line":29,"column":8,"nodeType":"500","endLine":29,"endColumn":10,"suggestions":"592"},{"ruleId":"593","severity":1,"message":"594","line":91,"column":49,"nodeType":"595","messageId":"596","endLine":91,"endColumn":50,"suggestions":"597"},{"ruleId":"593","severity":1,"message":"598","line":91,"column":67,"nodeType":"595","messageId":"596","endLine":91,"endColumn":68,"suggestions":"599"},{"ruleId":"593","severity":1,"message":"600","line":91,"column":69,"nodeType":"595","messageId":"596","endLine":91,"endColumn":70,"suggestions":"601"},{"ruleId":"593","severity":1,"message":"594","line":114,"column":49,"nodeType":"595","messageId":"596","endLine":114,"endColumn":50,"suggestions":"602"},{"ruleId":"593","severity":1,"message":"598","line":114,"column":67,"nodeType":"595","messageId":"596","endLine":114,"endColumn":68,"suggestions":"603"},{"ruleId":"593","severity":1,"message":"600","line":114,"column":69,"nodeType":"595","messageId":"596","endLine":114,"endColumn":70,"suggestions":"604"},{"ruleId":"593","severity":1,"message":"594","line":131,"column":49,"nodeType":"595","messageId":"596","endLine":131,"endColumn":50,"suggestions":"605"},{"ruleId":"593","severity":1,"message":"598","line":131,"column":67,"nodeType":"595","messageId":"596","endLine":131,"endColumn":68,"suggestions":"606"},{"ruleId":"593","severity":1,"message":"600","line":131,"column":69,"nodeType":"595","messageId":"596","endLine":131,"endColumn":70,"suggestions":"607"},{"ruleId":"593","severity":1,"message":"594","line":151,"column":53,"nodeType":"595","messageId":"596","endLine":151,"endColumn":54,"suggestions":"608"},{"ruleId":"593","severity":1,"message":"598","line":151,"column":71,"nodeType":"595","messageId":"596","endLine":151,"endColumn":72,"suggestions":"609"},{"ruleId":"593","severity":1,"message":"600","line":151,"column":73,"nodeType":"595","messageId":"596","endLine":151,"endColumn":74,"suggestions":"610"},{"ruleId":"493","severity":1,"message":"611","line":12,"column":11,"nodeType":"495","messageId":"496","endLine":12,"endColumn":18},{"ruleId":"612","severity":1,"message":"613","line":21,"column":49,"nodeType":"553","messageId":"614","endLine":21,"endColumn":51},{"ruleId":"498","severity":1,"message":"615","line":33,"column":8,"nodeType":"500","endLine":33,"endColumn":14,"suggestions":"616"},{"ruleId":"498","severity":1,"message":"617","line":29,"column":8,"nodeType":"500","endLine":29,"endColumn":19,"suggestions":"618"},{"ruleId":"498","severity":1,"message":"617","line":27,"column":8,"nodeType":"500","endLine":27,"endColumn":19,"suggestions":"619"},{"ruleId":"593","severity":1,"message":"620","line":106,"column":68,"nodeType":"595","messageId":"596","endLine":106,"endColumn":69,"suggestions":"621"},{"ruleId":"593","severity":1,"message":"620","line":106,"column":90,"nodeType":"595","messageId":"596","endLine":106,"endColumn":91,"suggestions":"622"},{"ruleId":"493","severity":1,"message":"547","line":14,"column":5,"nodeType":"495","messageId":"496","endLine":14,"endColumn":18},{"ruleId":"493","severity":1,"message":"563","line":29,"column":8,"nodeType":"495","messageId":"496","endLine":29,"endColumn":16},{"ruleId":"493","severity":1,"message":"548","line":39,"column":40,"nodeType":"495","messageId":"496","endLine":39,"endColumn":46},{"ruleId":"498","severity":1,"message":"509","line":55,"column":21,"nodeType":"510","endLine":58,"endColumn":21},"no-native-reassign",["623"],"no-negated-in-lhs",["624"],"no-unused-vars","'WalletConnect' is defined but never used.","Identifier","unusedVar","'showConnectModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.","ArrayExpression",["625"],"React Hook useEffect has a missing dependency: 'connector'. Either include it or remove the dependency array.",["626"],"React Hook useEffect has missing dependencies: 'active', 'dispatch', and 'library'. Either include them or remove the dependency array.",["627"],"'BN' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'errors'. Either include it or remove the dependency array. You can also do a functional update 'setErrors(e => ...)' if you only need 'errors' in the 'setErrors' call.",["628"],"Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component topInfo must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'onSign' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ethBalance' and 'library'. Either include them or remove the dependency array.",["629"],"React Hook useEffect has missing dependencies: 'address', 'chainId', and 'library'. Either include them or remove the dependency array.",["630"],"'state' is assigned a value but never used.","'setName' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'setFromTotal' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'checkMyFSPool' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'queryTokenBalance'. Either include it or remove the dependency array.",["631"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'getFSPoolDetail'. Either include them or remove the dependency array.",["632"],"'SaleCard' is defined but never used.","'numberToHex' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'active' and 'dispatch'. Either include them or remove the dependency array.",["633"],"'lattice' is defined but never used.","'setStepIsHover' is assigned a value but never used.","'successStatus' is defined but never used.","'active' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'calcuTime'. Either include it or remove the dependency array.",["634"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pools', 'pools', 'pools'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has a missing dependency: 'fetchList'. Either include it or remove the dependency array.",["635"],"'fetchList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchStatus'. Either include it or remove the dependency array.",["636"],["637"],"React Hook useEffect has missing dependencies: 'address' and 'library'. Either include them or remove the dependency array.",["638"],"'API_HOST' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'chainId' and 'library'. Either include them or remove the dependency array.",["639"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useEffect has missing dependencies: 'setCurStep' and 'setTitle'. Either include them or remove the dependency array. If 'setTitle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["640"],["641"],["642"],["643"],"React Hook useEffect has missing dependencies: 'onChange' and 'options'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["644"],"React Hook useEffect has a missing dependency: 'selOption'. Either include it or remove the dependency array.",["645"],["646"],"React Hook useEffect has missing dependencies: 'errMsg', 'isRequire', 'name', 'onValChange', and 'onValueChange'. Either include them or remove the dependency array. If 'onValueChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["647"],"'val' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["648"],"React Hook useEffect has a missing dependency: 'defaultVal'. Either include it or remove the dependency array.",["649"],"React Hook useEffect has missing dependencies: 'isError' and 'onChange'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["650"],["651"],"React Hook useEffect has a missing dependency: 'setTitle'. Either include it or remove the dependency array. If 'setTitle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["652"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["653","654"],"Unnecessary escape character: \\+.",["655","656"],"Unnecessary escape character: \\%.",["657","658"],["659","660"],["661","662"],["663","664"],["665","666"],["667","668"],["669","670"],["671","672"],["673","674"],["675","676"],"'history' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'isNext' and 'setReqData'. Either include them or remove the dependency array. If 'setReqData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["677"],"React Hook useEffect has a missing dependency: 'requiredList_json'. Either include it or remove the dependency array.",["678"],["679"],"Unnecessary escape character: \\-.",["680","681"],["682","683"],"no-global-assign","no-unsafe-negation",{"desc":"684","fix":"685"},{"desc":"686","fix":"687"},{"desc":"688","fix":"689"},{"desc":"690","fix":"691"},{"desc":"692","fix":"693"},{"desc":"694","fix":"695"},{"desc":"696","fix":"697"},{"desc":"698","fix":"699"},{"desc":"700","fix":"701"},{"desc":"702","fix":"703"},{"desc":"704","fix":"705"},{"desc":"706","fix":"707"},{"desc":"704","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"713","fix":"715"},{"desc":"713","fix":"716"},{"desc":"713","fix":"717"},{"desc":"718","fix":"719"},{"desc":"720","fix":"721"},{"desc":"722","fix":"723"},{"desc":"724","fix":"725"},{"desc":"726","fix":"727"},{"desc":"728","fix":"729"},{"desc":"730","fix":"731"},{"desc":"713","fix":"732"},{"desc":"733","fix":"734"},{"messageId":"735","fix":"736","desc":"737"},{"messageId":"738","fix":"739","desc":"740"},{"messageId":"735","fix":"741","desc":"737"},{"messageId":"738","fix":"742","desc":"740"},{"messageId":"735","fix":"743","desc":"737"},{"messageId":"738","fix":"744","desc":"740"},{"messageId":"735","fix":"745","desc":"737"},{"messageId":"738","fix":"746","desc":"740"},{"messageId":"735","fix":"747","desc":"737"},{"messageId":"738","fix":"748","desc":"740"},{"messageId":"735","fix":"749","desc":"737"},{"messageId":"738","fix":"750","desc":"740"},{"messageId":"735","fix":"751","desc":"737"},{"messageId":"738","fix":"752","desc":"740"},{"messageId":"735","fix":"753","desc":"737"},{"messageId":"738","fix":"754","desc":"740"},{"messageId":"735","fix":"755","desc":"737"},{"messageId":"738","fix":"756","desc":"740"},{"messageId":"735","fix":"757","desc":"737"},{"messageId":"738","fix":"758","desc":"740"},{"messageId":"735","fix":"759","desc":"737"},{"messageId":"738","fix":"760","desc":"740"},{"messageId":"735","fix":"761","desc":"737"},{"messageId":"738","fix":"762","desc":"740"},{"desc":"763","fix":"764"},{"desc":"765","fix":"766"},{"desc":"765","fix":"767"},{"messageId":"735","fix":"768","desc":"737"},{"messageId":"738","fix":"769","desc":"740"},{"messageId":"735","fix":"770","desc":"737"},{"messageId":"738","fix":"771","desc":"740"},"Update the dependencies array to be: [activate]",{"range":"772","text":"773"},"Update the dependencies array to be: [activatingConnector, connector]",{"range":"774","text":"775"},"Update the dependencies array to be: [account, active, dispatch, library]",{"range":"776","text":"777"},"Update the dependencies array to be: [onlyBOT, balance, bidAmount, account, errors]",{"range":"778","text":"779"},"Update the dependencies array to be: [active, token, account, library, ethBalance]",{"range":"780","text":"781"},"Update the dependencies array to be: [active, account, library, address, chainId]",{"range":"782","text":"783"},"Update the dependencies array to be: [queryTokenBalance, toAddress]",{"range":"784","text":"785"},"Update the dependencies array to be: [active, chainId, account, getFSPoolDetail, dispatch]",{"range":"786","text":"787"},"Update the dependencies array to be: [ReqData, active, dispatch]",{"range":"788","text":"789"},"Update the dependencies array to be: [calcuTime, time]",{"range":"790","text":"791"},"Update the dependencies array to be: [active, fetchList]",{"range":"792","text":"793"},"Update the dependencies array to be: [active, fetchStatus]",{"range":"794","text":"795"},{"range":"796","text":"793"},"Update the dependencies array to be: [active, account, chainId, library, address]",{"range":"797","text":"798"},"Update the dependencies array to be: [account, chainId, library]",{"range":"799","text":"800"},"Update the dependencies array to be: [setCurStep, setTitle]",{"range":"801","text":"802"},{"range":"803","text":"802"},{"range":"804","text":"802"},{"range":"805","text":"802"},"Update the dependencies array to be: [onChange, options, selOption]",{"range":"806","text":"807"},"Update the dependencies array to be: [defaultVal, options, selOption]",{"range":"808","text":"809"},"Update the dependencies array to be: [curSel, onChange, options]",{"range":"810","text":"811"},"Update the dependencies array to be: [val, isError, onValueChange, name, errMsg, isRequire, onValChange]",{"range":"812","text":"813"},"Update the dependencies array to be: [days, hours, minutes, onChange]",{"range":"814","text":"815"},"Update the dependencies array to be: [defaultVal]",{"range":"816","text":"817"},"Update the dependencies array to be: [inputVal, isError, onChange]",{"range":"818","text":"819"},{"range":"820","text":"802"},"Update the dependencies array to be: [setTitle]",{"range":"821","text":"822"},"removeEscape",{"range":"823","text":"824"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"825","text":"826"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"827","text":"824"},{"range":"828","text":"826"},{"range":"829","text":"824"},{"range":"830","text":"826"},{"range":"831","text":"824"},{"range":"832","text":"826"},{"range":"833","text":"824"},{"range":"834","text":"826"},{"range":"835","text":"824"},{"range":"836","text":"826"},{"range":"837","text":"824"},{"range":"838","text":"826"},{"range":"839","text":"824"},{"range":"840","text":"826"},{"range":"841","text":"824"},{"range":"842","text":"826"},{"range":"843","text":"824"},{"range":"844","text":"826"},{"range":"845","text":"824"},{"range":"846","text":"826"},{"range":"847","text":"824"},{"range":"848","text":"826"},"Update the dependencies array to be: [data, isNext, setReqData]",{"range":"849","text":"850"},"Update the dependencies array to be: [checkList, requiredList_json]",{"range":"851","text":"852"},{"range":"853","text":"852"},{"range":"854","text":"824"},{"range":"855","text":"826"},{"range":"856","text":"824"},{"range":"857","text":"826"},[1795,1797],"[activate]",[1878,1899],"[activatingConnector, connector]",[2101,2110],"[account, active, dispatch, library]",[3185,3223],"[onlyBOT, balance, bidAmount, account, errors]",[2630,2654],"[active, token, account, library, ethBalance]",[3322,3339],"[active, account, library, address, chainId]",[2658,2669],"[queryTokenBalance, toAddress]",[7022,7048],"[active, chainId, account, getFSPoolDetail, dispatch]",[805,814],"[ReqData, active, dispatch]",[1058,1064],"[calcuTime, time]",[2163,2171],"[active, fetchList]",[4342,4350],"[active, fetchStatus]",[5509,5517],[844,870],"[active, account, chainId, library, address]",[1403,1412],"[account, chainId, library]",[1170,1172],"[setCurStep, setTitle]",[1160,1162],[1018,1020],[786,788],[497,508],"[onChange, options, selOption]",[933,954],"[defaultVal, options, selOption]",[433,441],"[curSel, onChange, options]",[1100,1114],"[val, isError, onValueChange, name, errMsg, isRequire, onValChange]",[5547,5569],"[days, hours, minutes, onChange]",[5936,5938],"[defaultVal]",[8498,8508],"[inputVal, isError, onChange]",[799,801],[940,942],"[setTitle]",[2760,2761],"",[2760,2760],"\\",[2778,2779],[2778,2778],[2780,2781],[2780,2780],[3559,3560],[3559,3559],[3577,3578],[3577,3577],[3579,3580],[3579,3579],[4170,4171],[4170,4170],[4188,4189],[4188,4188],[4190,4191],[4190,4190],[4870,4871],[4870,4870],[4888,4889],[4888,4888],[4890,4891],[4890,4890],[1168,1174],"[data, isNext, setReqData]",[907,918],"[checkList, requiredList_json]",[876,887],[3467,3468],[3467,3467],[3489,3490],[3489,3489]]
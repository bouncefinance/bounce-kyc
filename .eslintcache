[{"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\App.js":"2","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\reducer.js":"3","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\InitPage.jsx":"4","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\redux\\index.js":"5","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\const.js":"6","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\index.jsx":"7","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\WalletConnect.js":"8","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\redux\\reducer.js":"9","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\styled.js":"10","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\FixedSwap\\Detail.js":"11","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\Apply.jsx":"12","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\WalletItem.jsx":"13","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Modal\\Confirm.jsx":"14","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\web3\\address.js":"15","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\web3\\common.js":"16","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\index.jsx":"17","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\message.js":"18","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\TipLink.js":"19","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\Modal.js":"20","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\Button.js":"21","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\AuctionTipModal.js":"22","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\Form.js":"23","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\BidModal.js":"24","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Kyc\\index.jsx":"25","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\Detail\\index.jsx":"26","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Home\\index.jsx":"27","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ProjectList\\index.jsx":"28","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\index.jsx":"29","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\utils\\common.js":"30","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\utils\\form.js":"31","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\utils\\themeHooks.js":"32","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\hooks\\useLeftTime.js":"33","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\utils\\numberTransform.js":"34","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\FixedSwap\\Hooks.js":"35","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\Layout.jsx":"36","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Modal\\index.jsx":"37","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\LearnMore\\index.jsx":"38","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\PersonalInfo\\index.jsx":"39","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\HeaderTab\\index.jsx":"40","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\styled.js":"41","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Modal\\styled.js":"42","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\web3\\index.js":"43","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\hooks.js":"44","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\ApplyModal.js":"45","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\hooks.js":"46","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\styled.js":"47","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\hooks\\useAxios.js":"48","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\styled.js":"49","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\config\\request_api.js":"50","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ProjectList\\styled.js":"51","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\SaleCard.jsx":"52","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step3.jsx":"53","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step5.jsx":"54","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step4.jsx":"55","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step1.jsx":"56","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step2.jsx":"57","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\Card.jsx":"58","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\HeaderTab\\config.js":"59","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step6.jsx":"60","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Modal\\KYC_TIP.jsx":"61","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\HeaderTab\\PersonalModal.jsx":"62","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\index.jsx":"63","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\utils\\time.js":"64","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\hooks\\useBalance.js":"65","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Exhibition\\index.jsx":"66","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\TXModal.js":"67","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\LearnMore\\InfoBox.jsx":"68","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Modal\\Support.jsx":"69","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\Progress.jsx":"70","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\CardHeader.jsx":"71","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\config\\utils\\BOT_FUN.js":"72","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Select.jsx":"73","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Text.jsx":"74","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Upload.jsx":"75","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Button.jsx":"76","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Check.jsx":"77","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Input.jsx":"78","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\LearnMore\\styled.js":"79","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Exhibition\\Crumbs.jsx":"80","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Exhibition\\Passage.jsx":"81","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\styled.js":"82","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Exhibition\\styled.js":"83","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\config\\utils\\END_FUN.js":"84","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\HeaderTab\\styled.js":"85","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Form.jsx":"86","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\PersonalInfo\\styled.js":"87","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Home\\styled.js":"88","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\Detail\\styled.js":"89","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Kyc\\styled.js":"90","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Kyc\\Step3.jsx":"91","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Kyc\\Step2.jsx":"92","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Kyc\\Step1.jsx":"93"},{"size":152,"mtime":1610941387398,"results":"94","hashOfConfig":"95"},{"size":997,"mtime":1611198139061,"results":"96","hashOfConfig":"95"},{"size":863,"mtime":1611719168534,"results":"97","hashOfConfig":"95"},{"size":2209,"mtime":1611141806950,"results":"98","hashOfConfig":"95"},{"size":385,"mtime":1610943605533,"results":"99","hashOfConfig":"95"},{"size":7460,"mtime":1611719168494,"results":"100","hashOfConfig":"95"},{"size":2456,"mtime":1611719168534,"results":"101","hashOfConfig":"95"},{"size":3273,"mtime":1611719168481,"results":"102","hashOfConfig":"95"},{"size":1015,"mtime":1611719168535,"results":"103","hashOfConfig":"95"},{"size":211,"mtime":1611284763051,"results":"104","hashOfConfig":"95"},{"size":18060,"mtime":1611719168510,"results":"105","hashOfConfig":"95"},{"size":2419,"mtime":1611719168501,"results":"106","hashOfConfig":"95"},{"size":721,"mtime":1611719168482,"results":"107","hashOfConfig":"95"},{"size":1311,"mtime":1611719168526,"results":"108","hashOfConfig":"95"},{"size":2599,"mtime":1611719168550,"results":"109","hashOfConfig":"95"},{"size":3486,"mtime":1611719168550,"results":"110","hashOfConfig":"95"},{"size":2716,"mtime":1611902054565,"results":"111","hashOfConfig":"95"},{"size":1783,"mtime":1611719168490,"results":"112","hashOfConfig":"95"},{"size":684,"mtime":1611719168489,"results":"113","hashOfConfig":"95"},{"size":5250,"mtime":1611719168487,"results":"114","hashOfConfig":"95"},{"size":1101,"mtime":1611719168484,"results":"115","hashOfConfig":"95"},{"size":4223,"mtime":1611719168483,"results":"116","hashOfConfig":"95"},{"size":4054,"mtime":1611719168485,"results":"117","hashOfConfig":"95"},{"size":3078,"mtime":1611719168483,"results":"118","hashOfConfig":"95"},{"size":1968,"mtime":1611719168516,"results":"119","hashOfConfig":"95"},{"size":200,"mtime":1611044363811,"results":"120","hashOfConfig":"95"},{"size":8771,"mtime":1611719168512,"results":"121","hashOfConfig":"95"},{"size":3759,"mtime":1611906541827,"results":"122","hashOfConfig":"95"},{"size":6757,"mtime":1611906541818,"results":"123","hashOfConfig":"95"},{"size":592,"mtime":1611719168536,"results":"124","hashOfConfig":"95"},{"size":161,"mtime":1611130074789,"results":"125","hashOfConfig":"95"},{"size":566,"mtime":1611719168537,"results":"126","hashOfConfig":"95"},{"size":1139,"mtime":1611719168496,"results":"127","hashOfConfig":"95"},{"size":2333,"mtime":1611719168537,"results":"128","hashOfConfig":"95"},{"size":7739,"mtime":1611719168511,"results":"129","hashOfConfig":"95"},{"size":10251,"mtime":1611719168486,"results":"130","hashOfConfig":"95"},{"size":2270,"mtime":1611906541830,"results":"131","hashOfConfig":"95"},{"size":7781,"mtime":1611906541821,"results":"132","hashOfConfig":"95"},{"size":8254,"mtime":1611906541826,"results":"133","hashOfConfig":"95"},{"size":6105,"mtime":1611906541828,"results":"134","hashOfConfig":"95"},{"size":973,"mtime":1611719168490,"results":"135","hashOfConfig":"95"},{"size":3649,"mtime":1611906541830,"results":"136","hashOfConfig":"95"},{"size":677,"mtime":1611719168551,"results":"137","hashOfConfig":"95"},{"size":312,"mtime":1611719168494,"results":"138","hashOfConfig":"95"},{"size":3499,"mtime":1611719168502,"results":"139","hashOfConfig":"95"},{"size":5790,"mtime":1611906541823,"results":"140","hashOfConfig":"95"},{"size":5836,"mtime":1611906541824,"results":"141","hashOfConfig":"95"},{"size":1846,"mtime":1611906541816,"results":"142","hashOfConfig":"95"},{"size":2773,"mtime":1611719168501,"results":"143","hashOfConfig":"95"},{"size":788,"mtime":1611906563855,"results":"144","hashOfConfig":"95"},{"size":1006,"mtime":1611634280344,"results":"145","hashOfConfig":"95"},{"size":13110,"mtime":1611906541823,"results":"146","hashOfConfig":"95"},{"size":2237,"mtime":1611719168498,"results":"147","hashOfConfig":"95"},{"size":7791,"mtime":1611719168499,"results":"148","hashOfConfig":"95"},{"size":5305,"mtime":1611719168498,"results":"149","hashOfConfig":"95"},{"size":6291,"mtime":1611719168497,"results":"150","hashOfConfig":"95"},{"size":3366,"mtime":1611719168497,"results":"151","hashOfConfig":"95"},{"size":12829,"mtime":1611906541819,"results":"152","hashOfConfig":"95"},{"size":578,"mtime":1611719168523,"results":"153","hashOfConfig":"95"},{"size":3698,"mtime":1611906541816,"results":"154","hashOfConfig":"95"},{"size":1539,"mtime":1611906541829,"results":"155","hashOfConfig":"95"},{"size":5826,"mtime":1611719168522,"results":"156","hashOfConfig":"95"},{"size":386,"mtime":1611719168532,"results":"157","hashOfConfig":"95"},{"size":2571,"mtime":1611719168538,"results":"158","hashOfConfig":"95"},{"size":931,"mtime":1611719168495,"results":"159","hashOfConfig":"95"},{"size":103,"mtime":1611719168520,"results":"160","hashOfConfig":"95"},{"size":3472,"mtime":1611719168489,"results":"161","hashOfConfig":"95"},{"size":2994,"mtime":1611906541820,"results":"162","hashOfConfig":"95"},{"size":914,"mtime":1611719168526,"results":"163","hashOfConfig":"95"},{"size":1253,"mtime":1611719168506,"results":"164","hashOfConfig":"95"},{"size":1161,"mtime":1611906541820,"results":"165","hashOfConfig":"95"},{"size":496,"mtime":1611719168493,"results":"166","hashOfConfig":"95"},{"size":2135,"mtime":1611719168530,"results":"167","hashOfConfig":"95"},{"size":361,"mtime":1611719168531,"results":"168","hashOfConfig":"95"},{"size":4024,"mtime":1611719168532,"results":"169","hashOfConfig":"95"},{"size":688,"mtime":1611146591285,"results":"170","hashOfConfig":"95"},{"size":1119,"mtime":1611719168528,"results":"171","hashOfConfig":"95"},{"size":9582,"mtime":1611719168530,"results":"172","hashOfConfig":"95"},{"size":1565,"mtime":1611906541822,"results":"173","hashOfConfig":"95"},{"size":604,"mtime":1611719168519,"results":"174","hashOfConfig":"95"},{"size":342,"mtime":1611037805873,"results":"175","hashOfConfig":"95"},{"size":10904,"mtime":1611719168533,"results":"176","hashOfConfig":"95"},{"size":1229,"mtime":1611719168521,"results":"177","hashOfConfig":"95"},{"size":403,"mtime":1611719168493,"results":"178","hashOfConfig":"95"},{"size":4173,"mtime":1611906541828,"results":"179","hashOfConfig":"95"},{"size":389,"mtime":1611719168529,"results":"180","hashOfConfig":"95"},{"size":2462,"mtime":1611719168518,"results":"181","hashOfConfig":"95"},{"size":9992,"mtime":1611719168513,"results":"182","hashOfConfig":"95"},{"size":85,"mtime":1611044237079,"results":"183","hashOfConfig":"95"},{"size":1098,"mtime":1611719168517,"results":"184","hashOfConfig":"95"},{"size":5696,"mtime":1611906541825,"results":"185","hashOfConfig":"95"},{"size":4232,"mtime":1611719168514,"results":"186","hashOfConfig":"95"},{"size":4168,"mtime":1611719168513,"results":"187","hashOfConfig":"95"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},"1njp7f4",{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"190"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"190"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"190"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"190"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"190"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"190"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"190"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"190"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"190"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"190"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"190"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"190"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"190"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310","usedDeprecatedRules":"190"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"313","usedDeprecatedRules":"190"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"190"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"319","usedDeprecatedRules":"190"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"328","messages":"329","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"330","usedDeprecatedRules":"190"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"190"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"190"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"355","usedDeprecatedRules":"190"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"190"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"190"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"190"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"395","messages":"396","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"190"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"190"},"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\index.js",[],["401","402"],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\App.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\reducer.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\InitPage.jsx",["403","404","405"],"import React, { useContext, useEffect } from 'react'\r\nimport { WalletConnect } from \"../components/WalletConnect\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { mainContext } from \"../reducer\";\r\nimport { BOUNCE_SELECT_WEB3_CONTEXT } from \"../const\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\nimport { LedgerConnector } from \"@web3-react/ledger-connector\";\r\n\r\nconst injected = new InjectedConnector({\r\n    supportedChainIds: [1, 3, 4, 5, 42, 31337]\r\n});\r\n\r\nconst POLLING_INTERVAL = 12000;\r\nconst RPC_URLS = {\r\n    1: \"https://eth-mainnet.alchemyapi.io/v2/k2--UT_xVVXMOvAyoxJYqtKhlmyBbqnX\",\r\n    4: \"https://rinkeby.infura.io/v3/8f6d3d5d7a1442a38d9e8050c31c1884\"\r\n};\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n    rpc: { 1: RPC_URLS[1] },\r\n    bridge: \"https://bridge.walletconnect.org\",\r\n    qrcode: true,\r\n    pollingInterval: POLLING_INTERVAL\r\n});\r\n\r\nconst ledger = new LedgerConnector({\r\n    chainId: 1,\r\n    url: RPC_URLS[1],\r\n    pollingInterval: POLLING_INTERVAL\r\n});\r\n\r\nconst wallets = {\r\n    MetaMask: injected,\r\n    WalletConnect: walletconnect,\r\n    Ledger: ledger,\r\n    //TrustWallet: injected,\r\n    //Squarelink: squarelink,\r\n    //Torus: torus,\r\n    //Aut\r\n}\r\n\r\nexport const InitPage = () => {\r\n\r\n    const context = useWeb3React();\r\n    const { activate } = context;\r\n\r\n    const { state } = useContext(mainContext);\r\n\r\n    const {\r\n        showConnectModal,\r\n    } = state;\r\n\r\n    useEffect(() => {\r\n        const localContent = window && window.localStorage.getItem(BOUNCE_SELECT_WEB3_CONTEXT)\r\n        // console.log('wallet content', localContent)\r\n        if (localContent) {\r\n            // console.log('activate', wallets[localContent])\r\n            activate(wallets[localContent]);\r\n        }\r\n    }, [])\r\n\r\n    return <></>\r\n\r\n    // return (\r\n    //     <>\r\n    //         {showConnectModal && (\r\n    //             <div className=\"modal-show\">\r\n    //                 <div className=\"wrapper\">\r\n    //                     <WalletConnect/>\r\n    //                 </div>\r\n    //             </div>\r\n    //         )}\r\n    //         </>\r\n\r\n    // )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\redux\\index.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\const.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\index.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\WalletConnect.js",["406","407"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { BOUNCE_SELECT_WEB3_CONTEXT } from \"../const\";\r\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\r\nimport { LedgerConnector } from \"@web3-react/ledger-connector\";\r\nimport { myContext } from '../redux';\r\nimport Confirm from '../pages/components/Modal/Confirm'\r\nimport WalletItem from './WalletItem'\r\nimport icon_matemask from '../assets/icons/matemask.svg'\r\nimport icon_walletconnect from '../assets/icons/walletconnect.svg'\r\n// import icon_ledger from '../assets/images/Ledger.png'\r\n\r\n\r\nconst injected = new InjectedConnector({\r\n    supportedChainIds: [1, 3, 4, 5, 42, 31337]\r\n});\r\n\r\nconst POLLING_INTERVAL = 12000;\r\nconst RPC_URLS = {\r\n    1: \"https://eth-mainnet.alchemyapi.io/v2/k2--UT_xVVXMOvAyoxJYqtKhlmyBbqnX\",\r\n    4: \"https://rinkeby.infura.io/v3/8f6d3d5d7a1442a38d9e8050c31c1884\"\r\n};\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n    rpc: { 1: RPC_URLS[1] },\r\n    bridge: \"https://bridge.walletconnect.org\",\r\n    qrcode: true,\r\n    pollingInterval: POLLING_INTERVAL\r\n});\r\n\r\nconst ledger = new LedgerConnector({\r\n    chainId: 1,\r\n    url: RPC_URLS[1],\r\n    pollingInterval: POLLING_INTERVAL\r\n});\r\n\r\nconst wallets = {\r\n    MetaMask: injected,\r\n    WalletConnect: walletconnect,\r\n    Ledger: ledger\r\n}\r\n\r\nexport const WalletConnect = () => {\r\n    const { dispatch } = useContext(myContext);\r\n\r\n    const [activatingConnector, setActivatingConnector] = useState();\r\n    const [currentConnector] = useState();\r\n\r\n    const {\r\n        connector,\r\n        library,\r\n        account,\r\n        activate,\r\n        active,\r\n    } = useWeb3React()\r\n\r\n    useEffect(() => {\r\n        if (activatingConnector && activatingConnector === connector) {\r\n            setActivatingConnector(undefined);\r\n        }\r\n    }, [activatingConnector]);\r\n\r\n\r\n    useEffect(() => {\r\n        // console.log(account, account, library)\r\n        if (account && active && library) {\r\n            dispatch({ type: 'CONNECT_WALLET', value: false });\r\n        }\r\n    }, [account]);\r\n\r\n    function onConnect(currentConnector, name) {\r\n        setActivatingConnector(currentConnector);\r\n        window && window.localStorage.setItem(BOUNCE_SELECT_WEB3_CONTEXT, name)\r\n        activate(wallets[name]);\r\n    }\r\n\r\n    return (\r\n        <Confirm\r\n            title='Connect to a wallet'\r\n            tip=\"To participate in Bounce you first need to connect a wallet. Please select an option below. You can also connect a Ledger via your Metamask.\"\r\n        >\r\n\r\n            <div style={{ marginTop: 28 }}>\r\n                <WalletItem name='MetaMask' icon={icon_matemask} onClick={() => {\r\n                    onConnect(currentConnector, 'MetaMask')\r\n                }} />\r\n                <WalletItem name='WalletConnect' icon={icon_walletconnect} onClick={() => {\r\n                    onConnect(currentConnector, 'WalletConnect')\r\n                }} />\r\n\r\n                {/* <WalletItem name='Ledger' icon={icon_ledger} onClick={() => {\r\n                    onConnect(currentConnector, 'Ledger')\r\n                }} /> */}\r\n            </div>\r\n        </Confirm>\r\n\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\redux\\reducer.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\FixedSwap\\Detail.js",["408","409","410","411","412","413"],"import React, {useState, useEffect, useContext} from 'react';\r\nimport {\r\n    Address,\r\n    ITextR,\r\n    LayoutFrame, LineDivider,\r\n    OText2, OText5,\r\n    Pool,\r\n    Progress,\r\n    renderTime\r\n} from \"../../components/common/Layout\";\r\nimport icon_return from '../../assets/images/icon-return.svg'\r\nimport {usePoolDetail} from \"./Hooks\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport {fromWei, getProgress, numToWei, weiDiv, weiToNum, weiToNumber} from \"../../utils/numberTransform\";\r\nimport classNames from \"classnames\";\r\nimport {useParams} from 'react-router-dom';\r\nimport {Form, Input} from \"../../components/common/Form\";\r\nimport icon_max from \"../../assets/icons/icon-max.svg\";\r\nimport {Button} from \"../../components/common/Button\";\r\nimport {useEthBalance, useTokenBalance, useTokenList} from \"../../web3/common\";\r\nimport {getContract, useActiveWeb3React} from \"../../web3\";\r\nimport fixSwap from \"../../web3/abi/BouncePro.json\";\r\nimport {BOUNCE_PRO} from \"../../web3/address\";\r\nimport Web3 from 'web3'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {\r\n    BidModal,\r\n    initStatus,\r\n    errorStatus,\r\n    confirmStatus,\r\n    pendingStatus,\r\n    cancelStatus,\r\n    claimSuccessStatus\r\n} from \"../../components/common/BidModal\";\r\nimport {useLeftTime} from \"../../hooks/useLeftTime\";\r\nimport {mainContext} from \"../../reducer\";\r\nimport {useIsXSDown} from '../../utils/themeHooks';\r\nimport bounceERC20 from \"../../web3/abi/bounceERC20.json\";\r\nimport {AuctionTipModal} from \"../../components/common/AuctionTipModal\";\r\nimport Modal from \"../../components/common/Modal\";\r\nimport {Message} from \"../../components/common/message\";\r\nimport {TipLink} from \"../../components/common/TipLink\";\r\nimport {CREATOR_CLAIMED_MESSAGE} from \"../../const\";\r\nimport {validateForm} from \"../../utils/form\";\r\nimport {isGreaterThan} from \"../../utils/common\";\r\n\r\nconst {BN, toWei} = Web3.utils\r\n\r\nconst bidSuccessStatus = {\r\n    status: 3,\r\n    title: 'Congratulations!',\r\n    content: 'You have successfully bidded and your swapped tokens are automatically sent to your wallet. You can now make more bids.'\r\n}\r\n\r\n\r\nexport const FSPoolDetail = () => {\r\n    const { poolId } = useParams()\r\n    const history = useHistory()\r\n    const {state} = useContext(mainContext);\r\n    const {ethPrice, BOTPrice, BTCPrice} = state\r\n    const {id} = useParams();\r\n    const {account, library, chainId} = useActiveWeb3React()\r\n    const {balance} = useTokenBalance()\r\n    const tokenOptions = useTokenList()\r\n    const {setTime, leftTime} = useLeftTime()\r\n    const [bidAmount, setBidAmount] = useState()\r\n    const [bidStatus, setBidStatus] = useState(initStatus)\r\n    const [showTip, setShowTip] = useState()\r\n    const [errors, setErrors] = useState({amount: ''})\r\n\r\n    const isXSDown = useIsXSDown();\r\n\r\n    const {name, address, symbol, decimals, limit, time, fromBidAmount, fromAmount, toAmount, status, isMine, toBidAmount, onlyBOT, claimed, toSymbol, toAddress, toDecimals, joinStatus} = usePoolDetail(id)\r\n\r\n    const {ethBalance} = useEthBalance(toAddress)\r\n\r\n    useEffect(() => {\r\n        if (onlyBOT && isGreaterThan(toWei('0.1'), balance) && !bidAmount) {\r\n            errors.amount='Sorry! You are not qualified as bot holder.'\r\n            setErrors(errors)\r\n        }\r\n    }, [onlyBOT, balance, bidAmount, account])\r\n\r\n    let timer = null\r\n    useEffect(() => {\r\n        timer = setInterval(() => {\r\n            const date = new Date(time * 1000);\r\n            const now = new Date();\r\n            const lefttime = date - now;\r\n            if (lefttime >= 1000) {\r\n                setTime(lefttime)\r\n            } else if (0 < lefttime && lefttime < 1000) {\r\n                window.location.reload()\r\n            } else {\r\n                clearInterval(timer)\r\n            }\r\n        }, (1000));\r\n        return () => {\r\n            clearInterval(timer)\r\n        }\r\n    }, [setTime, time]);\r\n\r\n\r\n    const onBid = async () => {\r\n        setShowTip(false)\r\n        let tokenContract\r\n\r\n        if (toAddress) {\r\n            tokenContract = getContract(library, bounceERC20.abi, toAddress)\r\n        }\r\n        const bounceContract = getContract(library, fixSwap.abi, BOUNCE_PRO(chainId))\r\n        const weiAmount = numToWei(bidAmount, toDecimals);\r\n\r\n        setBidStatus(confirmStatus);\r\n        try {\r\n            if (toAddress) {\r\n                await tokenContract.methods.approve(\r\n                    BOUNCE_PRO(chainId),\r\n                    weiAmount,\r\n                )\r\n                    .send({from: account});\r\n                setBidStatus(confirmStatus);\r\n            }\r\n            bounceContract.methods.fixPoolSwapV2(\r\n                id,\r\n                weiAmount)\r\n                .send({from: account, value: toAddress ? 0 : weiAmount})\r\n                .on('transactionHash', hash => {\r\n                    setBidStatus(pendingStatus)\r\n                })\r\n                .on('receipt', (_, receipt) => {\r\n                    setBidStatus(bidSuccessStatus)\r\n                })\r\n                .on('error', (err, receipt) => {\r\n                    setBidStatus(errorStatus)\r\n                })\r\n        } catch (e) {\r\n            if (e.code === 4001) {\r\n                setBidStatus(cancelStatus)\r\n            } else {\r\n                setBidStatus(errorStatus)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    console.log('poolid--->', poolId)\r\n\r\n\r\n    const onClaim = async () => {\r\n        const bounceContract = getContract(library, fixSwap.abi, BOUNCE_PRO(chainId))\r\n        setBidStatus(confirmStatus);\r\n        try {\r\n            bounceContract.methods.fixPoolWithdraw()\r\n                .send({from: account})\r\n                .on('transactionHash', hash => {\r\n                    setBidStatus(pendingStatus)\r\n                })\r\n                .on('receipt', (_, receipt) => {\r\n                    console.log('bid fixed swap receipt:', receipt)\r\n                    setBidStatus(claimSuccessStatus)\r\n                })\r\n                .on('error', (err, receipt) => {\r\n                    setBidStatus(errorStatus)\r\n                })\r\n        } catch (e) {\r\n            if (e.code === 4001) {\r\n                setBidStatus(cancelStatus)\r\n            } else {\r\n                setBidStatus(errorStatus)\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const loadPrice = (toAddress) => {\r\n        const toToken = tokenOptions.find(item => {\r\n            return toAddress.toLowerCase() === item.key.toLowerCase()\r\n        })\r\n        switch (toToken.symbol) {\r\n            case 'USDT':\r\n                return '1'\r\n\r\n            case 'BOT':\r\n                return BOTPrice\r\n\r\n            case 'WBTC':\r\n                return BTCPrice\r\n            default:\r\n                return ethPrice\r\n\r\n        }\r\n    }\r\n\r\n    const handleChange = async event => {\r\n        event.preventDefault();\r\n        const {name, value} = event.target;\r\n        switch (name) {\r\n            case \"amount\":\r\n                errors.amount = ''\r\n                const amountValue = value.replace(/[^\\d.]/g, '')\r\n                setBidAmount(amountValue)\r\n                console.log('wei amount', numToWei(amountValue, decimals))\r\n                if (!ethBalance || (ethBalance && isGreaterThan(numToWei(amountValue, decimals), ethBalance))) {\r\n                    errors.amount = 'you do not have enough balance'\r\n                }\r\n                if (limit &&  isGreaterThan(limit, '0')  && isGreaterThan(numToWei(amountValue, toDecimals), limit)) {\r\n                    errors.amount = 'maximum allocation per wallet is ' + weiToNum(limit, toDecimals)\r\n                }\r\n                break\r\n            default:\r\n        }\r\n        console.log('final errors', errors)\r\n        setErrors(errors)\r\n    };\r\n\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log('handleSubmit', event)\r\n        if (validateForm(errors)) {\r\n            setShowTip(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <LayoutFrame style={{\r\n            marginTop: 27,\r\n            paddingBottom: 56,\r\n            paddingLeft: isXSDown ? '20px' : '0',\r\n            paddingRight: isXSDown ? '20px' : '0'\r\n        }}>\r\n            {isMine ?\r\n                <>\r\n                    {status === 'Live' && (\r\n                        <Message type={'success'}\r\n                                 content={'The auction is still live, please wait patiently until your auction is filled or closed.'}/>\r\n                    )}\r\n                    {status === 'Filled' && (\r\n                        <Message type={'success'}\r\n                                 content={'Congratulations! Your auction is complete. All your tokens are auctioned and your fund is automatically sent to your wallet.'}/>\r\n                    )}\r\n                    {status === 'Closed' && !claimed && (\r\n                        <Message type={'error'}\r\n                                 content={'Unfortunately, your pool is not fully filled and closed. Please claim back the unswapped tokens manually.'}/>\r\n                    )}\r\n                    {status === 'Closed' && claimed && (\r\n                        <Message type={'success'}\r\n                                 content={CREATOR_CLAIMED_MESSAGE}/>\r\n                    )}\r\n                </>\r\n                : null}\r\n\r\n\r\n            {!isMine ?\r\n                <>\r\n                    {status === 'Live' && joinStatus && (\r\n                        <Message type={'success'}\r\n                                 content={'You have successfully bidded and your swapped tokens are automatically sent to your wallet. You can now make more bids.'}/>\r\n                    )}\r\n                    {status !== 'Live' && (\r\n                        <Message content={'This auction is finished, please visit other live auctions.'}/>\r\n                    )}\r\n                </>\r\n                : null}\r\n\r\n\r\n            <Pool.Return onClick={() => {\r\n                history.goBack()\r\n            }} src={icon_return}/>\r\n            <LayoutFrame width={'1072px'} style={{padding: '32px 0', margin: 'auto', marginTop: 0}}>\r\n                <Pool.Mode>Fixed-Swap</Pool.Mode>\r\n                <Pool.Header><span>{name}</span></Pool.Header>\r\n                <Address style={{wordBreak: isXSDown ? 'break-all' : 'normal'}}>{address}</Address>\r\n                <Pool.Content style={{marginTop: 40}}>\r\n\r\n                    <Pool.Content width={isXSDown ? '100%' : '456px'} style={{marginTop: 0}}>\r\n\r\n                        <Pool.Content width={isXSDown ? '100%' : '456px'}\r\n                                      style={{marginTop: 0, flexDirection: 'column'}}>\r\n                            <Pool.Status style={{width: 'fit-content'}} className={classNames('status', status)}><i\r\n                                className={status}/>{status}</Pool.Status>\r\n                            <ITextR style={{\r\n                                marginTop: 8,\r\n                                textAlign: 'left'\r\n                            }}>{`Participant: ${onlyBOT ? 'BOT holder' : 'Public'}`}</ITextR>\r\n                        </Pool.Content>\r\n\r\n                        <Pool.Block style={{width: '100%'}}>\r\n                            <span>Fixed Swap Ratio</span>\r\n                            <span>{fromAmount && toAmount && `1 ${toSymbol} = ${(weiDiv(fromWei(fromAmount, decimals), fromWei(toAmount, toDecimals)))} ${symbol && symbol}`}</span>\r\n                        </Pool.Block>\r\n\r\n                        <Pool.Block style={{width: isXSDown ? '100%' : '200px'}}>\r\n                            <span>Price,$</span>\r\n                            <span>{(toAmount && fromAmount) && new BigNumber(weiDiv(fromWei(toAmount, toDecimals), fromWei(fromAmount, decimals))).multipliedBy(chainId === 56 ? '29' : toAddress ? loadPrice(toAddress) : ethPrice).toFixed(6).toString()}</span>\r\n                        </Pool.Block>\r\n\r\n                        <Pool.Block style={{width: isXSDown ? '100%' : '200px'}}>\r\n                            <span>Maximum Allocation per wallet</span>\r\n                            <span>{limit && (limit == 0 ? 'No limit' : `${weiToNumber(limit)} ${toSymbol}`)}</span>\r\n                        </Pool.Block>\r\n\r\n                        <OText5 style={{\r\n                            width: 480,\r\n                            marginTop: 40,\r\n                            fontSize: 12,\r\n                            fontFamily: 'IBM Plex Mono',\r\n                            fontWeight: 500\r\n                        }}>Auction\r\n                            progress: {toBidAmount && weiToNumber(toBidAmount, toDecimals)} {toSymbol}\r\n                            <span\r\n                                style={{opacity: .3}}> / {toAmount && weiToNumber(toAmount, toDecimals)} {toSymbol}</span>\r\n                        </OText5>\r\n                        {fromBidAmount && fromAmount && (\r\n                            <Progress style={{marginTop: 16}} height={'5px'}\r\n                                      className={classNames('progress', toBidAmount === toAmount ? 'Filled' : status)}>\r\n                                <Progress.Value style={{width: `${getProgress(toBidAmount, toAmount)}%`}}\r\n                                                className={classNames('progress-value', toBidAmount === toAmount ? 'Filled' : status)}/>\r\n                            </Progress>\r\n                        )}\r\n\r\n                    </Pool.Content>\r\n\r\n                    <Pool.Content width={'auto'}\r\n                                  style={{\r\n                                      height: 'fit-content',\r\n                                      width: isXSDown ? '100%' : '480px',\r\n                                      flexDirection: 'column',\r\n                                      padding: isXSDown ? '48px 20px' : '48px 56px',\r\n                                      justifyContent: 'center',\r\n                                      marginTop: 0,\r\n                                      backgroundColor: 'rgba(248, 248, 251, 1)'\r\n                                  }}>\r\n\r\n                        {isMine ? (\r\n                            <>\r\n                                <OText2 style={{textAlign: 'center', marginTop: 8}}>My Pool</OText2>\r\n                                {renderTime(leftTime)}\r\n                                <Pool.Meta>\r\n                                    <div>Total amount:</div>\r\n                                    <div>{`${toAmount && weiToNumber(toAmount, toDecimals)} ${toSymbol}`}</div>\r\n                                </Pool.Meta>\r\n\r\n                                <Pool.Meta>\r\n                                    <div>Successful bid amount:</div>\r\n                                    <div>{toBidAmount && `${weiToNumber(toBidAmount, toDecimals)} ${toSymbol}`}</div>\r\n                                </Pool.Meta>\r\n\r\n                                {(status === 'Closed' && !claimed) ?\r\n                                    <Button black onClick={onClaim}>Claim your unswapped tokens</Button> : null}\r\n\r\n                            </>\r\n                        ) : (\r\n                            <form id=\"bid-fs-form\" onSubmit={handleSubmit}>\r\n                                <OText2 style={{textAlign: 'center', marginTop: 0, fontSize: 26}}>Join The Pool</OText2>\r\n                                {renderTime(leftTime)}\r\n                                <LineDivider style={{marginTop: 0}}/>\r\n                                <Pool.topInfo>\r\n                                    <span>Your Bid Amount</span>\r\n                                    <span>{`Balance: ${ethBalance ? weiToNumber(ethBalance, toDecimals) : '--'}`} {toSymbol}</span>\r\n                                </Pool.topInfo>\r\n                                <Form\r\n                                    error={errors.amount}\r\n                                    top={'0px'} width={'100%'}\r\n                                    input={<Input\r\n                                        style={{\r\n                                            padding: '8px 0',\r\n                                            color: '#1F191B',\r\n                                            fontSize: 16,\r\n                                            lineHeight: '20px',\r\n                                            fontFamily: 'Helvetica Neue',\r\n                                            fontWeight: \"bold\"\r\n                                        }}\r\n                                        name={'amount'}\r\n                                        placeholder={'Bid Amount'}\r\n                                        disabled={onlyBOT && isGreaterThan(toWei('0.1'), balance  )}\r\n                                        value={bidAmount}\r\n                                        onChange={handleChange}\r\n                                    />} name={' '} addonAfter={(<img onClick={() => {\r\n                                    console.log('set max amount', ethBalance)\r\n                                    setBidAmount(fromWei(ethBalance, toDecimals))\r\n                                }} src={icon_max}/>)}\r\n                                />\r\n\r\n                                <Button\r\n                                    style={{marginTop: 50}}\r\n                                    disabled={status !== 'Live' || !validateForm(errors) || !bidAmount}\r\n                                    black\r\n                                >Go\r\n                                </Button>\r\n\r\n                                <TipLink/>\r\n                            </form>\r\n                        )}\r\n\r\n                    </Pool.Content>\r\n\r\n                </Pool.Content>\r\n\r\n\r\n            </LayoutFrame>\r\n\r\n\r\n            <BidModal modalStatus={bidStatus} onDismiss={() => {\r\n                setBidStatus(initStatus)\r\n            }}/>\r\n\r\n            <Modal\r\n                closeable\r\n                isOpen={showTip}\r\n                onDismiss={() => {\r\n                    setShowTip(false)\r\n                }}\r\n                maxWidth={'450px'}\r\n            >\r\n                <AuctionTipModal type={0} auction={onBid}/>\r\n            </Modal>\r\n\r\n        </LayoutFrame>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\Apply.jsx",["414","415","416"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { Button } from \"../../components/common/Button\";\r\nimport bounceERC20 from '../../web3/abi/bounceERC20.json'\r\nimport BounceProVoting from '../../web3/abi/BounceProVoting.json'\r\n\r\nimport { ApplyModal } from \"./ApplyModal\";\r\nimport {\r\n  initStatus,\r\n  approveStatus,\r\n  pendingStatus,\r\n  confirmStatus,\r\n  successStatus,\r\n  errorStatus,\r\n  cancelStatus\r\n} from \"./ApplyModal\";\r\nimport {getContract, useActiveWeb3React} from \"../../web3\";\r\nimport {BOT, BOUNCE_PRO_VOTING} from \"../../web3/address\";\r\nimport Web3 from \"web3\";\r\n\r\nexport const Apply = () => {\r\n\r\n  const [modalStatus, setModalStatus] = useState(initStatus)\r\n  const { account, library, chainId, active } = useActiveWeb3React()\r\n\r\n  const onApply = async () => {\r\n    console.log('onApply', active)\r\n    setModalStatus(approveStatus);\r\n\r\n    try {\r\n      const tokenContract = getContract(library, bounceERC20.abi, BOT(chainId))\r\n      const bounceContract = getContract(library, BounceProVoting.abi, BOUNCE_PRO_VOTING(chainId))\r\n\r\n      const result = await tokenContract.methods.approve(\r\n        BOUNCE_PRO_VOTING(chainId),\r\n        '300000000000000000',\r\n      )\r\n        .send({ from: account });\r\n      setModalStatus(confirmStatus);\r\n      if (result.status) {\r\n        await bounceContract.methods.create('1')\r\n          .send({ from: account })\r\n          .on('transactionHash', hash => {\r\n            setModalStatus(pendingStatus)\r\n          })\r\n          .on('receipt', (_, receipt) => {\r\n            setModalStatus(successStatus)\r\n          })\r\n          .on('error', (err, receipt) => {\r\n            setModalStatus(errorStatus)\r\n          })\r\n      } else {\r\n        setModalStatus(errorStatus)\r\n      }\r\n    } catch (err) {\r\n      if (err.code === 4001) {\r\n        setModalStatus(cancelStatus)\r\n      } else {\r\n        setModalStatus(errorStatus)\r\n      }\r\n      console.log('err', err);\r\n    }\r\n  };\r\n\r\n  const onSign = async () =>{\r\n    const web3 = new Web3(library.provider);\r\n    const sign = await web3.eth.personal.sign('0x1',account)\r\n    console.log('sign',sign)\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={onApply}>Apply</Button>\r\n      <ApplyModal onOK={() => {\r\n        setModalStatus(initStatus)\r\n        //history.goBack()\r\n      }} onDismiss={() => {\r\n        setModalStatus(initStatus)\r\n      }} modalStatus={modalStatus} />\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\WalletItem.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Modal\\Confirm.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\web3\\address.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\web3\\common.js",["417","418"],"import React, { useEffect, useState } from 'react';\r\nimport bounceERC20 from '../web3/abi/bounceERC20.json'\r\nimport { useActiveWeb3React } from \"./index\";\r\nimport { getContract } from \"../web3\";\r\nimport { getBotAddress, getUSDTAddress, getWBTCAddress, getYFIAddress } from \"./address\";\r\nimport Web3 from 'web3'\r\nimport { TokenFrame } from \"../components/common/Layout\";\r\nimport icon_usdt from '../assets/icons/icon-usdt.png'\r\nimport bounce_token from '../assets/icons/bounce_token.png'\r\nimport wbtc_icon from '../assets/icons/wbtc_icon.png'\r\nimport yfi_icon from '../assets/icons/yfi_icon.png'\r\nimport icon_eth from '../assets/icons/icon_eth.svg'\r\nimport {useActivePlatform} from \"../hooks\";\r\n\r\nexport const useTokenList = () => {\r\n  const { chainId } = useActiveWeb3React();\r\n  const { Psymbol } = useActivePlatform()\r\n\r\n  return [{\r\n    key: '0x0000000000000000000000000000000000000000',\r\n    value: <TokenFrame><img alt=\"\" src={icon_eth} /><span>{Psymbol}</span></TokenFrame>,\r\n    symbol: Psymbol,\r\n    decimals: '18'\r\n\r\n  }, {\r\n    key: getUSDTAddress(chainId),\r\n    value: <TokenFrame><img alt=\"\" src={icon_usdt} /><span>USDT</span></TokenFrame>,\r\n    symbol: 'USDT',\r\n    decimals: '6'\r\n  }, {\r\n    key: getBotAddress(chainId),\r\n    value: <TokenFrame><img alt=\"\" src={bounce_token} /><span>BOT</span></TokenFrame>,\r\n    symbol: 'BOT',\r\n    decimals: '18'\r\n  }, {\r\n    key: getWBTCAddress(chainId),\r\n    value: <TokenFrame><img alt=\"\" src={wbtc_icon} /><span>WBTC</span></TokenFrame>,\r\n    symbol: 'WBTC',\r\n    decimals: '8'\r\n  }, {\r\n    key: getYFIAddress(chainId),\r\n    value: <TokenFrame><img alt=\"\" src={yfi_icon} /><span>YFI</span></TokenFrame>,\r\n    symbol: 'YFI',\r\n    decimals: '18'\r\n  }]\r\n}\r\n\r\n\r\nexport const getIndexList = (count) => {\r\n  let poolIdList = [];\r\n  for (let i = 0; i < count; i++) {\r\n    poolIdList[i] = count - i - 1;\r\n  }\r\n  return poolIdList\r\n}\r\n\r\n\r\nexport const useEthBalance = (token) => {\r\n  const { active, account, library } = useActiveWeb3React();\r\n  const [ethBalance, setEthBalance] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n    console.log('token---->', token)\r\n\r\n    if (active) {\r\n      if (token) {\r\n        const tokenContract = getContract(library, bounceERC20.abi, token)\r\n        tokenContract.methods.balanceOf(account).call().then(res => {\r\n          console.log('token balance', res)\r\n          setEthBalance(res)\r\n        })\r\n      } else {\r\n        const web3 = new Web3(library.provider)\r\n        web3.eth.getBalance(account)\r\n          .then(balance => {\r\n            console.log('eth balance', balance)\r\n            console.log(ethBalance)\r\n            setEthBalance(balance)\r\n          })\r\n      }\r\n\r\n    } else {\r\n      setEthBalance(null)\r\n    }\r\n\r\n  }, [active, token, account])\r\n\r\n  return { ethBalance }\r\n}\r\n\r\nexport const useTokenBalance = (address) => {\r\n  const { active, account, library, chainId } = useActiveWeb3React();\r\n  const [balance, setBalance] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    async function getBalance() {\r\n      try {\r\n        const tokenContract = getContract(library, bounceERC20.abi, address ? address : getBotAddress(chainId))\r\n        const balance = await tokenContract.methods.balanceOf(account).call()\r\n        setBalance(balance)\r\n      } catch (e) {\r\n        console.log('useTokenBalance:', e)\r\n        setBalance(null)\r\n      }\r\n    }\r\n\r\n    if (active) {\r\n      getBalance()\r\n    } else {\r\n      setBalance(null)\r\n    }\r\n\r\n  }, [active, account])\r\n\r\n\r\n  return { balance }\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\index.jsx",["419"],"import React from 'react'\r\nimport { CsStyled } from './styled'\r\nimport Card from './Card'\r\nimport SaleCard from './SaleCard'\r\nimport { usePoolList } from \"./hooks\";\r\nimport { EmptyLayout } from \"../../components/common/Layout\";\r\nimport loading from \"../../assets/icons/loading.svg\";\r\n\r\nexport default function Index() {\r\n  const { list } = usePoolList()\r\n  // console.log(list)\r\n  return (\r\n    <CsStyled>\r\n      {!list || list.length === 0 ? (\r\n        <EmptyLayout>\r\n          <img src={loading} alt=\"\" />\r\n          <p>{Array.isArray(list) && list.length === 0 ? 'The next bounce certified sale will come soon. Stay tuned!' : 'Sales are loading ... Please wait'}</p>\r\n        </EmptyLayout>\r\n\r\n        // <SaleCard pool={{\r\n        //   proInfo: {\r\n        //     additionalinfo: \"no\",\r\n        //     allocationperwallet: \"No limits\",\r\n        //     amountoftoken: \"1000\",\r\n        //     architecture: \"fdaef\",\r\n        //     attachmenturl: \"\",\r\n        //     auctiontime: \"90060\",\r\n        //     auctiontype: \"Fixed swap auction\",\r\n        //     circulatingsupply: \"111\",\r\n        //     code: 1,\r\n        //     contactemail: \"yuhuakukude@gmail.com\",\r\n        //     created_at: \"2021-01-22T13:00:34Z\",\r\n        //     fackbook: \"\",\r\n        //     githublink: \"https://tool.chinaz.com/tools/unixtime.aspx\",\r\n        //     id: 1,\r\n        //     ifkyc: 1,\r\n        //     ifwhitelist: 1,\r\n        //     medium: \"https://bouncefinance.medium.com/\",\r\n        //     pricepertoken: \"100\",\r\n        //     prologourl: \"74aef2f42bcac9aab90b90726b921f73.jpg\",\r\n        //     proname: \"dfaf\",\r\n        //     prosummary: \"dad\",\r\n        //     protheme: \"defi\",\r\n        //     prowebsite: \"https://tool.chinaz.com/tools/unixtime.aspx\",\r\n        //     teambio: \"fwaef\",\r\n        //     teamwallet: \"0xe2Ce91F22ed39520e8b099F3800BD21f5b090b56\",\r\n        //     techhighlight: \"dfawf\",\r\n        //     telegram: \"https://t.me/bounce_finance\",\r\n        //     tokencontractaddress: \"0xe2Ce91F22ed39520e8b099F3800BD21f5b090b56\",\r\n        //     tokendistribution: \"aff\",\r\n        //     tokenlookupschedule: \"feawfew\",\r\n        //     tokenticketer: \"DFSF\",\r\n        //     totalsupply: \"100\",\r\n        //     twitter: \"https://twitter.com/bounce_finance?s=21\",\r\n        //     updated_at: \"2021-01-25T09:42:27Z\",\r\n        //     whitepaperlink: \"https://tool.chinaz.com\"\r\n        //   }\r\n        // }} />\r\n      ) :\r\n        list.sort((item1, item2) => {\r\n          // console.log('sort', item1, item2)\r\n          return item2.id - item1.id\r\n        }).map((item, index) => {\r\n          return (\r\n            <Card key={index} pool={item} status='Active' />\r\n          )\r\n        })}\r\n    </CsStyled>\r\n  )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\message.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\TipLink.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\Modal.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\Button.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\AuctionTipModal.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\Form.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\BidModal.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Kyc\\index.jsx",["420"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport { KycStyled } from './styled'\r\nimport image_kyc from '../../assets/images/kyc.svg'\r\nimport Step1 from './Step1'\r\nimport Step2 from './Step2'\r\nimport Step3 from './Step3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { myContext } from '../../redux'\r\nimport Crumbs from '../components/Exhibition/Crumbs'\r\n\r\nexport default function Index() {\r\n    const { active } = useWeb3React()\r\n    const { dispatch } = useContext(myContext)\r\n    const [curStep, setCurStep] = useState(1)\r\n    const [ReqData, setReqData] = useState({\r\n        country: 'china'\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (!ReqData || active) {\r\n            return\r\n        }\r\n\r\n        dispatch({\r\n            type: 'CONNECT_WALLET',\r\n            value: true\r\n        })\r\n\r\n    }, [ReqData])\r\n\r\n    return (\r\n        <KycStyled>\r\n            <Crumbs list={[{\r\n                name: 'KYC'\r\n            }, {\r\n                name: 'Basic Info',\r\n                active: true\r\n            }]} />\r\n            <div className=\"container\">\r\n                <div className=\"top\">\r\n                    <h3>KYC</h3>\r\n                    <p>{curStep} / 3</p>\r\n                </div>\r\n                <div className=\"bottom\">\r\n                    <div className=\"left\">\r\n                        <img src={image_kyc} alt=\"image_kyc\" />\r\n                    </div>\r\n                    <div className=\"right\">\r\n                        {curStep === 1 && <Step1 curStep={curStep} setCurStep={setCurStep} ReqData={ReqData} setReqData={setReqData} />}\r\n                        {curStep === 2 && <Step2 curStep={curStep} setCurStep={setCurStep} ReqData={ReqData} setReqData={setReqData} />}\r\n                        {curStep === 3 && <Step3 curStep={curStep} setCurStep={setCurStep} ReqData={ReqData} setReqData={setReqData} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </KycStyled>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\Detail\\index.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Home\\index.jsx",["421","422"],"import React, { useState } from 'react'\r\nimport { HomeStyled } from './styled'\r\nimport lattice from '../../assets/images/lattice.svg'\r\nimport bule_check from '../../assets/images/bule-check.svg'\r\nimport bule_star from '../../assets/images/bule-star.svg'\r\nimport bule_people from '../../assets/images/bule-people.svg'\r\nimport logo_white from '../../assets/logo/logo-white.svg'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport back1 from '../../assets/images/back1.svg'\r\nimport back2 from '../../assets/images/back2.svg'\r\nimport back3 from '../../assets/images/back3.svg'\r\nimport back4 from '../../assets/images/back4.svg'\r\nimport back5 from '../../assets/images/back5.svg'\r\nimport back6 from '../../assets/images/back6.svg'\r\n\r\nimport medium from '../../assets/icons/index-medium.svg'\r\nimport twitter from '../../assets/icons/index-twitter.svg'\r\nimport telegram from '../../assets/icons/index-telegram.svg'\r\n\r\nimport video from '../../assets/video/index.mp4'\r\n\r\nconst CertifiedSalesSteps = [{\r\n    title: 'Certified sale application',\r\n    desc: 'Submit project information to the voting board to apply for a certified sale'\r\n}, {\r\n    title: 'Community scanning and voting',\r\n    desc: 'The community reviews your project for quality and approves the start of the best token sale'\r\n}, {\r\n    title: 'Multisig governance configuration',\r\n    desc: 'Execution upon multisignature by parties involved'\r\n}, {\r\n    title: 'Token sale activation',\r\n    desc: 'Your certified token sale goes live for verified user'\r\n}]\r\n\r\nexport default function Index() {\r\n    const [curCertifiedSalesSteps, setCurCertifiedSalesSteps] = useState(0)\r\n    const [stepIsHover, setStepIsHover] = useState(false)\r\n    const history = useHistory()\r\n\r\n    return (\r\n        <HomeStyled>\r\n            <div className=\"page_wrapper page_one\">\r\n                <div className=\"main\">\r\n                    <div className=\"left\">\r\n                        <video\r\n                            width='525px'\r\n                            height='525px'\r\n                            muted\r\n                            src={video}\r\n                            autoPlay='autoPlay'\r\n                            loop='loop'\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"right\">\r\n                        <h1>Certified crypto auction curated <span>by the community</span></h1>\r\n                        <p>Bounce Certified empowers the community to curate a select group of high-quality projects to conduct their public sale on the same robust and secure platform behind Bounce Finance.</p>\r\n                        <p><span>KYC checks</span> / <span>White list sales</span> / <span>Decentralized auction managed by community DAO</span></p>\r\n\r\n                        <button onClick={() => { history.push('/applySale') }}>Apply for certified sale</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"page_other\">\r\n                <div className=\"block\">\r\n                    <h3>Features</h3>\r\n                    <ul className='Features_list'>\r\n                        <li>\r\n                            <div className='bg'></div>\r\n                            <h4>\r\n                                <img src={bule_check} alt=\"\" />\r\n                                KYC checks\r\n                            </h4>\r\n                            <p>Know-Your-Customer tools identity verification</p>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <div className='bg'></div>\r\n                            <h4>\r\n                                <img src={bule_star} alt=\"\" />\r\n                                White list sales\r\n                            </h4>\r\n                            <p>Exclusive customer sign-up for token auction</p>\r\n                        </li>\r\n\r\n                        <li>\r\n                            <div className='bg'></div>\r\n                            <h4>\r\n                                <img src={bule_people} alt=\"\" />\r\n                                Decentralized auction\r\n                            </h4>\r\n                            <p>Auction managed by community DAO</p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n                <div className=\"block Certified\">\r\n                    <h3>Certified Sales Steps</h3>\r\n                    <ul className=\"step_list\" >\r\n                        {CertifiedSalesSteps.map((item, index) => {\r\n                            return <li\r\n                                key={index}\r\n                                className={curCertifiedSalesSteps === index && !stepIsHover ? 'active' : ''}\r\n                                onMouseEnter={() => {\r\n                                    setCurCertifiedSalesSteps(index)\r\n                                }}\r\n                            >\r\n                                <h4>\r\n                                    <i>{index + 1}</i>\r\n                                    {item.title}\r\n                                </h4>\r\n                                <p>{item.desc}</p>\r\n                            </li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"utility\">\r\n                    <h3>Token Utility</h3>\r\n                    <ul className='utility_list'>\r\n                        <li>\r\n                            <div>\r\n                                <i>1</i>\r\n                                Application fee\r\n                            </div>\r\n\r\n                            <div>\r\n                                <i>3</i>\r\n                                BOT token holder exclusive sales\r\n                            </div>\r\n                        </li>\r\n                        <li>\r\n                            <div>\r\n                                <i>2</i>\r\n                                Project voting power\r\n                            </div>\r\n\r\n                            <div>\r\n                                <i>4</i>\r\n                                Transaction fee buy back and burn\r\n                            </div>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n            <div className=\"started\">\r\n                <div className=\"started_bg\" onClick={() => { return console.log(31) }}></div>\r\n                <div className=\"started_main\">\r\n                    <h3>Get started to apply for certified sale with Bounce</h3>\r\n                    <button onClick={() => { return history.push('/applySale') }}>Get Started</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"backed\">\r\n                <div className=\"main\">\r\n                    <h5>Backed by</h5>\r\n                    <ul>\r\n                        <li>\r\n                            <img src={back1} alt=\"\" />\r\n                        </li>\r\n                        <li>\r\n                            <img src={back2} alt=\"\" />\r\n                        </li>\r\n                        <li>\r\n                            <img src={back3} alt=\"\" />\r\n                        </li>\r\n                        <li>\r\n                            <img src={back4} alt=\"\" />\r\n                        </li>\r\n                        <li>\r\n                            <img src={back5} alt=\"\" />\r\n                        </li>\r\n                        <li>\r\n                            <img src={back6} alt=\"\" />\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"footer\">\r\n                <div className=\"main\">\r\n                    <img src={logo_white} alt=\"\" />\r\n                    <div className=\"link\">\r\n                        <ul>\r\n                            <li>\r\n                                <a href=\"https://bouncefinance.medium.com/\">\r\n                                    <img src={medium} alt=\"\" />\r\n                                </a>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <a href=\"https://twitter.com/bounce_finance?s=21\">\r\n                                    <img src={twitter} alt=\"\" />\r\n                                </a>\r\n                            </li>\r\n\r\n                            <li>\r\n                                <a href=\"https://t.me/bounce_finance\">\r\n                                    <img src={telegram} alt=\"\" />\r\n                                </a>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <p>Forum</p>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </HomeStyled>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ProjectList\\index.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\index.jsx",["423","424"],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\utils\\common.js",["425"],"import Web3 from \"web3\";\r\n\r\nconst {numberToHex} = Web3.utils\r\n\r\nconst BigNumber = require('bignumber.js');\r\n\r\nexport const getTime = (day, hour, min) => {\r\n  let time = 0;\r\n  if ( day ) {\r\n    time += 24 * 60 * 60 * day;\r\n  }\r\n  if ( hour ) {\r\n    time += 60* 60 * hour;\r\n  }\r\n  if ( min ) {\r\n    time += 60 * min;\r\n  }\r\n  return time;\r\n}\r\n\r\nexport const isGreaterThan = (value1, value2) => {\r\n  return   new BigNumber(value1).isGreaterThan(new BigNumber(value2))\r\n}\r\n\r\n\r\nexport const isEqualTo = (value1, value2) => {\r\n  return   new BigNumber(value1).isEqualTo(new BigNumber(value2))\r\n}\r\n\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\utils\\form.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\utils\\themeHooks.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\hooks\\useLeftTime.js",["426"],"import {useEffect, useState} from \"react\";\r\n\r\nexport const useLeftTime = () => {\r\n    const initRenderTime = {\r\n        days: 0,\r\n        hours: 0,\r\n        minutes: 0,\r\n        seconds: 0,\r\n    }\r\n\r\n    const [time, setTime] = useState();\r\n    const [leftTime, setLeftTime] = useState(initRenderTime);\r\n\r\n    const calcuTime = ()=>{\r\n        if (time) {\r\n            let leftd = Math.floor(time / (1000 * 60 * 60 * 24));\r\n            let lefth = Math.floor(time / (1000 * 60 * 60) % 24);\r\n            let leftm = Math.floor(time / (1000 * 60) % 60);\r\n            let lefts = Math.floor(time / 1000 % 60);\r\n            const left = {\r\n                days: leftd < 0 ? 0 : leftd,\r\n                hours: lefth < 0 ? 0 : lefth,\r\n                minutes: leftm < 0 ? 0 : leftm,\r\n                seconds: lefts < 0 ? 0 : lefts,\r\n            };\r\n            setLeftTime(left);\r\n            if (left < 0) {\r\n                setLeftTime(initRenderTime);\r\n            }\r\n        } else {\r\n            setLeftTime(initRenderTime);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n        calcuTime()\r\n    }, [time])\r\n\r\n    return {setTime, leftTime}\r\n}","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\utils\\numberTransform.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\FixedSwap\\Hooks.js",["427","428","429","430","431","432","433","434","435"],"import { getContract, useActivePlatform, useActiveWeb3React } from \"../../web3\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport bounceERC20 from \"../../web3/abi/bounceERC20.json\";\r\nimport BouncePro from '../../web3/abi/BouncePro.json'\r\nimport { mainContext } from '../../reducer'\r\n\r\nimport BigNumber from \"bignumber.js\";\r\nimport { BOUNCE_PRO } from \"../../web3/address\";\r\nimport { isGreaterThan } from \"../../utils/common\";\r\nimport { HANDLE_SHOW_CONNECT_MODAL } from \"../../const\";\r\nimport {useTokenList} from \"../../web3/common\";\r\n\r\n\r\nexport const usePoolDetail = (id = 0) => {\r\n    const { active, account, library, chainId } = useActiveWeb3React();\r\n\r\n    const { state, dispatch } = useContext(mainContext);\r\n\r\n    const [joinStatus, setJoinStatus] = useState(false)\r\n    const [name, setName] = useState(null)\r\n    const [symbol, setSymbol] = useState('')\r\n    const [toSymbol, setToSymbol] = useState()\r\n    const [address, setAddress] = useState(null)\r\n    const [toAddress, setToAddress] = useState(null)\r\n    const [decimals, setDecimals] = useState()\r\n    const [toDecimals, setToDecimals] = useState()\r\n    const [toAmount, setToAmount] = useState(null)\r\n    const [fromTotal, setFromTotal] = useState(null)\r\n    const [limit, setLimit] = useState(null)\r\n    const [isMine, setIsMine] = useState(false)\r\n    const [password, setPassword] = useState()\r\n    const [time, setTime] = useState()\r\n    const [fromBidAmount, setFromBidAmount] = useState()\r\n    const [toBidAmount, setToBidAmount] = useState()\r\n    const [fromAmount, setFromAmount] = useState()\r\n    const [status, setStatus] = useState('Live')\r\n    const [onlyBOT, setOnlyBOT] = useState(false)\r\n    const [toTokenBalance, setToTokenBalance] = useState(0)\r\n    const { Psymbol } = useActivePlatform()\r\n    const tokenOptions = useTokenList()\r\n\r\n    const [claimed, setClaimed] = useState(true)\r\n\r\n\r\n    const checkMyFSPool = async () => {\r\n        const fsContract = getContract(library, BouncePro.abi, BOUNCE_PRO(chainId))\r\n        let myPoolIndex = await fsContract.methods.myP(account).call()\r\n        if (myPoolIndex > 0) {\r\n            myPoolIndex = myPoolIndex - 1\r\n            const fromAmount = await fsContract.methods.amountTotal0FP(myPoolIndex).call()\r\n            const bidAmount = await fsContract.methods.amountSwap0FP(myPoolIndex).call()\r\n            if (fromAmount === bidAmount) {\r\n                setClaimed(true)\r\n            } else {\r\n                setClaimed(false)\r\n            }\r\n        } else {\r\n            setClaimed(true)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!toAddress) return\r\n        if (new BigNumber(toAddress).isEqualTo(0)) return\r\n        queryTokenBalance(toAddress)\r\n    }, [toAddress])\r\n\r\n    const queryTokenBalance = async (toAddress) => {\r\n        const Contract = getContract(library, bounceERC20.abi, toAddress)\r\n        const balance = await Contract.methods.balanceOf(account).call()\r\n        setToTokenBalance(balance)\r\n    }\r\n\r\n    async function getFSPoolDetail() {\r\n        try {\r\n\r\n            const fsContract = getContract(library, BouncePro.abi, BOUNCE_PRO(chainId))\r\n\r\n            fsContract.methods.pools(id).call().then( async (res) => {\r\n                console.log('pool detail:', res)\r\n\r\n                setFromAmount(res.amountTotal0)\r\n                setToAmount(res.amountTotal1)\r\n\r\n                //setAddress(res)\r\n                const tokenContract = getContract(library, bounceERC20.abi, res.token0)\r\n                tokenContract.methods.symbol().call().then((res) => {\r\n                    console.log('query fs symbol:', res)\r\n                    setSymbol(res)\r\n                })\r\n                tokenContract.methods.decimals().call().then((res) => {\r\n                    console.log('query fs decimals:', res)\r\n                    setDecimals(res)\r\n                })\r\n\r\n                const toToken = tokenOptions.find(item => {\r\n                    return res.token1.toLowerCase() === item.key.toLowerCase()\r\n                })\r\n\r\n                if (res === '0x0000000000000000000000000000000000000000') {\r\n                    setToAddress(null)\r\n                    setToSymbol(Psymbol)\r\n                    setToDecimals('18')\r\n                } else if (toToken) {\r\n                    setToAddress(res.token1)\r\n                    setToDecimals(toToken.decimals)\r\n                    setToSymbol(toToken.symbol)\r\n                } else {\r\n                    setToAddress(null)\r\n                    setToSymbol(Psymbol)\r\n                    setToDecimals('18')\r\n                }\r\n\r\n                const date = new Date(res.closeAt * 1000);\r\n                const now = new Date();\r\n                const leftTime = date - now;\r\n\r\n                setIsMine((res.beneficiary.toLowerCase() === account.toLowerCase()))\r\n                if (res.beneficiary.toLowerCase() === account.toLowerCase()) {\r\n                    let myPoolIndex = await fsContract.methods.myP(account).call()\r\n                    if (myPoolIndex > 0) {\r\n                        myPoolIndex = myPoolIndex - 1\r\n                        const fromAmount = res.amountTotal0\r\n                        const bidAmount = await fsContract.methods.amountSwap0P(myPoolIndex).call()\r\n                        if (fromAmount === bidAmount) {\r\n                            setClaimed(true)\r\n                        } else {\r\n                            setClaimed(false)\r\n                        }\r\n                    } else {\r\n                        setClaimed(true)\r\n                    }\r\n                }\r\n\r\n                setTime(res.closeAt)\r\n                setToAmount(res.amountTotal1)\r\n\r\n                setStatus(leftTime > 0 ? 'Live' : 'Closed')\r\n                fsContract.methods.amountSwap1P(id).call().then((bidAmount) => {\r\n                    console.log('query fs to bid amount:', bidAmount)\r\n                    setToBidAmount(bidAmount)\r\n                    if (bidAmount === res.amountTotal1) {\r\n                        setStatus('Filled')\r\n                    }\r\n                })\r\n            })\r\n\r\n            fsContract.methods.myAmountSwapped1(account, id).call().then((res) => {\r\n                console.log('query fs myAmountSwapped1:', res)\r\n                setJoinStatus(isGreaterThan(res, '0'))\r\n            })\r\n\r\n            fsContract.methods.onlyBotHolder(id).call().then((res) => {\r\n                console.log('query fs name:', res)\r\n                setOnlyBOT(res)\r\n            })\r\n\r\n            fsContract.methods.amountSwap0P(id).call().then((res) => {\r\n                console.log('query fs to bid amount:', res)\r\n                setFromBidAmount(res)\r\n            })\r\n\r\n\r\n            fsContract.methods.maxEthPerWalletP(id).call().then((res) => {\r\n                console.log('query fs limit max:', res)\r\n                setLimit(res)\r\n            })\r\n\r\n\r\n        } catch (e) {\r\n            console.log('getTokenInfo:', e)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (active, chainId, account) {\r\n            console.log('chainId', chainId)\r\n            getFSPoolDetail()\r\n        } else {\r\n            dispatch({ type: HANDLE_SHOW_CONNECT_MODAL, showConnectModal: true });\r\n        }\r\n\r\n    }, [active, chainId, account])\r\n\r\n    // console.log('FS_BUG', fromAmount, fromBidAmount, toAmount, toBidAmount)\r\n    return {\r\n        name,\r\n        claimed,\r\n        address,\r\n        symbol,\r\n        toAddress,\r\n        toSymbol,\r\n        toDecimals,\r\n        decimals,\r\n        fromTotal,\r\n        toAmount,\r\n        limit,\r\n        time,\r\n        password,\r\n        fromBidAmount,\r\n        toBidAmount,\r\n        fromAmount,\r\n        status,\r\n        isMine,\r\n        onlyBOT,\r\n        toTokenBalance,\r\n        joinStatus\r\n    }\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\Layout.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Modal\\index.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\LearnMore\\index.jsx",["436","437"],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\PersonalInfo\\index.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\HeaderTab\\index.jsx",["438","439"],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Modal\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\web3\\index.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\hooks.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\ApplyModal.js",["440","441"],"import Modal, {ModalContent, ModalTitle} from \"../../components/common/Modal\";\r\nimport styled from 'styled-components'\r\nimport Lottie from \"react-lottie\";\r\nimport icon_success from \"../../assets/icons/icon-success.svg\";\r\nimport icon_error from \"../../assets/icons/icon-error.svg\";\r\nimport React from \"react\";\r\nimport bounce_loading from \"../../assets/bounce-loading.json\";\r\nimport {Button} from \"../../components/common/Button\";\r\n\r\nexport const FormStatus = styled.div`\r\n  width: 100%;\r\n  height: 200px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\n\r\nconst defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: bounce_loading,\r\n    rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n};\r\n\r\nexport const approveStatus = {status: 1, title: 'Bounce requests wallet approval', content: 'Please manually interact with your wallet'}\r\nexport const confirmStatus = {status: 2, title: 'Bounce requests wallet interaction', content: 'Please open your wallet and confirm in the transaction activity to proceed your order'}\r\nexport const pendingStatus = {status: 3, title: 'Bounce waiting for transaction settlement', content: 'Bounce is engaging with blockchain transaction, please wait patiently for on-chain transaction settlement'}\r\nexport const successStatus = {status: 4, title: 'Auction successfully published', content: 'Congratulations! Your auction is live and is now listed in designated area. Please find more information about the next steps in the pool page'}\r\nexport const successIssuedStatus = {status: 4, title: 'Congratulations!', content: 'You have successfully submitted your project to voting board.'}\r\n\r\nexport const predictionSuccessStatus = {status: 4, title: 'Prediction successfully published', content: 'Congratulations! Your predcition is live and is now listed in designated area. Please find more information about the next steps in the pool page'}\r\nexport const errorStatus = {status: -1, title: 'Transaction failed on Bounce', content: 'Oops! Your transaction is failed for on-chain approval and settlement. Please initiate another transaction'}\r\nexport const cancelStatus = {status: -2, title: 'Transaction canceled on Bounce', content: 'Sorry! Your transaction is canceled. Please try again.'}\r\nexport const initStatus = {status: 0, title: '', content: ''}\r\n\r\n\r\nexport const ApplyModal = ({modalStatus, onDismiss, onOK}) =>{\r\n\r\n    const {status, title, content}  = modalStatus\r\n\r\n    return (\r\n        <Modal isOpen={status !== 0} onDismiss={() => {\r\n            onDismiss()\r\n        }}>\r\n            <ModalTitle style={{textAlign: 'center'}}>{title}</ModalTitle>\r\n\r\n            {(status === 1 || status === 2 || status === 3) &&\r\n            <Lottie width={200} height={200} options={defaultOptions}/>}\r\n\r\n            {(status === 4 ) &&\r\n            <FormStatus ><img src={icon_success}/></FormStatus>}\r\n\r\n            {(status === -1 || status === -2) &&\r\n            <FormStatus><img src={icon_error}/></FormStatus>}\r\n\r\n            <ModalContent style={{width: 300, textAlign: 'center'}}>{content}</ModalContent>\r\n            {(status === 1 || status === 2 || status === 3) && <Button width={'320px'} black>Awaiting...</Button>}\r\n            {status === 4 && <Button width={'320px'} black onClick={()=>{\r\n                onOK()\r\n            }}>Close</Button>}\r\n            {status === -1 && <Button onClick={()=>{onDismiss()}} width={'320px'} black>Try again</Button>}\r\n        </Modal>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\hooks.js",["442","443","444","445","446","447"],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\hooks\\useAxios.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\config\\request_api.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ProjectList\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\SaleCard.jsx",["448","449","450","451","452","453","454"],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step3.jsx",["455"],"import React, { useEffect, useState } from 'react'\r\nimport { Step3Styled } from './styled'\r\nimport { TextInput, Button } from '../components/Table'\r\n\r\nconst requireList = ['teambio']\r\n\r\nexport default function Step3({ setCurStep, setTitle, step3Data, setStep3Data }) {\r\n    const [isNext, setIsNext] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setTitle({\r\n            title: 'Team',\r\n            crumbsList: [{\r\n                name: 'Apply Certified Sales'\r\n            }, {\r\n                name: 'General information',\r\n                onClick: () => { return setCurStep(1) }\r\n            }, {\r\n                name: 'Details',\r\n                onClick: () => { return setCurStep(2) }\r\n            }, {\r\n                name: 'Team',\r\n                active: true\r\n            }]\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const arr = requireList.filter(item => {\r\n            return !step3Data[item]\r\n        })\r\n        if (arr.length === 0) {\r\n            setIsNext(true)\r\n        } else {\r\n            setIsNext(false)\r\n        }\r\n    }, [step3Data])\r\n\r\n    const handelInputChange = (key, data) => {\r\n        const obj = { ...step3Data }\r\n        if (!data.isError) {\r\n            obj[key] = data.value\r\n        } else {\r\n            obj[key] = null\r\n        }\r\n        setStep3Data(obj)\r\n    }\r\n\r\n    return (\r\n        <Step3Styled>\r\n            <TextInput\r\n                label='Team'\r\n                placeholder='Enter short bio about your team'\r\n                width='600px'\r\n                minHeight='140px'\r\n                marginTop='0px'\r\n                maxLength={500}\r\n                isRequire={true}\r\n                defaultVal={step3Data.teambio}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('teambio', val)\r\n                }}\r\n            />\r\n\r\n            <div className=\"btn_group\">\r\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\r\n                    setCurStep(2)\r\n                }} />\r\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\r\n                    setCurStep(4)\r\n                }} />\r\n            </div>\r\n        </Step3Styled>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step5.jsx",["456"],"import React, { useEffect, useState } from 'react'\r\nimport { Step5Styled } from './styled'\r\nimport { TextInput, TimeInput, AmountInput, Radio, Select, Button } from '../components/Table'\r\n\r\nconst requireList = ['auctiontype', 'amountoftoken', 'pricepertoken', 'allocationperwallet', 'auctiontime', 'teamwallet', 'ifkyc', 'ifwhitelist']\r\n\r\nexport default function Step5({ setCurStep, setTitle, step5Data, setStep5Data }) {\r\n    const [isNext, setIsNext] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setTitle({\r\n            title: 'Auction',\r\n            crumbsList: [{\r\n                name: 'Apply Certified Sales'\r\n            }, {\r\n                name: 'General information',\r\n                onClick: () => { return setCurStep(1) }\r\n            }, {\r\n                name: 'Details',\r\n                onClick: () => { return setCurStep(2) }\r\n            }, {\r\n                name: 'Team',\r\n                onClick: () => { return setCurStep(3) }\r\n            }, {\r\n                name: 'Token metrics',\r\n                onClick: () => { return setCurStep(4) }\r\n            }, {\r\n                name: 'Auction',\r\n                active: true\r\n            }]\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const arr = requireList.filter(item => {\r\n            return step5Data[item] === null || step5Data[item] === undefined\r\n        })\r\n\r\n        if (arr.length === 0) {\r\n            setIsNext(true)\r\n        } else {\r\n            setIsNext(false)\r\n        }\r\n    }, [step5Data])\r\n\r\n    const handelInputChange = (key, data) => {\r\n        const obj = { ...step5Data }\r\n        if (!data.isError) {\r\n            obj[key] = data.value\r\n        } else {\r\n            obj[key] = null\r\n        }\r\n        setStep5Data(obj)\r\n    }\r\n\r\n    return (\r\n        <Step5Styled>\r\n\r\n            <Select\r\n                label='Auction type'\r\n                width='600px'\r\n                options={[\r\n                    { name: 'Fixed swap auction' },\r\n                    { name: 'Sealed-bid auction' },\r\n                    { name: 'Dutch auction' },\r\n                ]}\r\n\r\n                defaultVal={{\r\n                    name: step5Data.auctiontype\r\n                }}\r\n\r\n                onChange={(val) => {\r\n                    handelInputChange('auctiontype', {\r\n                        isRequire: true,\r\n                        isError: false,\r\n                        value: val.name\r\n                    })\r\n                }}\r\n            />\r\n\r\n            <TextInput\r\n                label='Amount of tokens for auction'\r\n                placeholder='Enter the amount of token you want to auction'\r\n                width='600px'\r\n                defaultVal={step5Data.amountoftoken}\r\n                isRequire={true}\r\n                isNumber={true}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('amountoftoken', {\r\n                        isRequire: true,\r\n                        isError: false,\r\n                        value: val.value\r\n                    })\r\n                }}\r\n            />\r\n\r\n            <TextInput\r\n                label='Price per token'\r\n                placeholder='Enter price per token'\r\n                width='600px'\r\n                defaultVal={step5Data.pricepertoken}\r\n                isRequire={true}\r\n                isNumber={true}\r\n                unit='USDT'\r\n                onValueChange={(val) => {\r\n                    handelInputChange('pricepertoken', val)\r\n                }}\r\n            />\r\n\r\n            <Radio\r\n                label='Allocation per wallet'\r\n                options={[\r\n                    { name: 'No limits' },\r\n                    {\r\n                        name: 'USDT',\r\n                        append: <AmountInput\r\n                            width='100px'\r\n                            placeholder={'Amount'}\r\n                            defaultVal={\r\n                                step5Data.allocationperwallet !== 'No limits' && parseFloat(step5Data.allocationperwallet)\r\n                            }\r\n                            onChange={(val) => {\r\n                                handelInputChange('allocationperwallet', {\r\n                                    isRequire: true,\r\n                                    isError: false,\r\n                                    value: val.value + ' USDT'\r\n                                })\r\n                            }}\r\n                        />\r\n                    },\r\n                ]}\r\n\r\n                defaultIndex={\r\n                    step5Data.allocationperwallet === 'No limits' ? 0 : 1\r\n                }\r\n\r\n                onChange={(val) => {\r\n                    if (val.name === 'No limits') {\r\n                        handelInputChange('allocationperwallet', {\r\n                            isRequire: true,\r\n                            isError: false,\r\n                            value: val.name\r\n                        })\r\n                    }\r\n                }}\r\n            />\r\n\r\n            <TimeInput\r\n                label='Auction time'\r\n                width='600px'\r\n                defaultVal={step5Data.auctiontime}\r\n                onChange={(time) => {\r\n                    handelInputChange('auctiontime', time)\r\n                }}\r\n            />\r\n\r\n\r\n\r\n            <TextInput\r\n                maxLength={64}\r\n                label='Team wallet to receive auction fund'\r\n                placeholder='Enter team wallet address to receive fund'\r\n                width='600px'\r\n                defaultVal={step5Data.teamwallet}\r\n                isRequire={true}\r\n                REG_rule={{\r\n                    reg: /[0x|0X][\\S]{41}/,\r\n                    msg: 'Please enter a positive integer Please enter a valid contract address'\r\n                }}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('teamwallet', val)\r\n                }}\r\n            />\r\n\r\n            <div className=\"select_group\">\r\n                <Select\r\n                    label='KYC'\r\n                    width='294px'\r\n                    options={[\r\n                        { name: 'Yes', value: 1 },\r\n                        { name: 'No', value: 0 },\r\n                    ]}\r\n\r\n                    defaultVal={{\r\n                        value: step5Data.ifkyc\r\n                    }}\r\n\r\n                    onChange={(val) => {\r\n                        handelInputChange('ifkyc', {\r\n                            isRequire: true,\r\n                            isError: false,\r\n                            value: val.value\r\n                        })\r\n                    }}\r\n                />\r\n\r\n                <Select\r\n                    label='Whitelisting'\r\n                    width='294px'\r\n                    options={[\r\n                        { name: 'Yes', value: 1 },\r\n                        { name: 'No', value: 0 },\r\n                    ]}\r\n\r\n                    defaultVal={{\r\n                        value: step5Data.ifwhitelist\r\n                    }}\r\n\r\n                    onChange={(val) => {\r\n                        handelInputChange('ifwhitelist', {\r\n                            isRequire: true,\r\n                            isError: false,\r\n                            value: val.value\r\n                        })\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n\r\n            <div className=\"btn_group\">\r\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\r\n                    setCurStep(4)\r\n                }} />\r\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\r\n                    setCurStep(6)\r\n                    console.log(step5Data)\r\n                }} />\r\n            </div>\r\n        </Step5Styled>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step4.jsx",["457"],"import React, { useEffect, useState } from 'react'\r\nimport { Step4Styled } from './styled'\r\nimport { TextInput, Button } from '../components/Table'\r\n\r\nconst requireList = ['totalsupply', 'circulatingsupply', 'tokenticketer', 'tokencontractaddress', 'tokendistribution', 'tokenlookupschedule']\r\n\r\nexport default function Step4 ({ setCurStep, setTitle, step4Data, setStep4Data }) {\r\n    const [isNext, setIsNext] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setTitle({\r\n            title: 'Token metrics',\r\n            crumbsList: [{\r\n                name: 'Apply Certified Sales'\r\n            }, {\r\n                name: 'General information',\r\n                onClick: () => { return setCurStep(1) }\r\n            }, {\r\n                name: 'Details',\r\n                onClick: () => { return setCurStep(2) }\r\n            }, {\r\n                name: 'Team',\r\n                onClick: () => { return setCurStep(3) }\r\n            }, {\r\n                name: 'Token metrics',\r\n                active: true\r\n            }]\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const arr = requireList.filter(item => {\r\n            return !step4Data[item]\r\n        })\r\n        if (arr.length === 0) {\r\n            setIsNext(true)\r\n        } else {\r\n            setIsNext(false)\r\n        }\r\n    }, [step4Data])\r\n\r\n    const handelInputChange = (key, data) => {\r\n        const obj = { ...step4Data }\r\n        if (!data.isError) {\r\n            obj[key] = data.value\r\n        } else {\r\n            obj[key] = null\r\n        }\r\n        setStep4Data(obj)\r\n    }\r\n\r\n    return (\r\n        <Step4Styled>\r\n            <TextInput\r\n                label='Total supply'\r\n                placeholder='Enter your Total supply'\r\n                width='600px'\r\n                defaultVal={step4Data.totalsupply}\r\n                isRequire={true}\r\n                isNumber={true}\r\n                REG_rule={{\r\n                    reg: /^[1-9]\\d*|0$/,\r\n                    mag: 'Please enter a positive integer'\r\n                }}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('totalsupply', val)\r\n                }}\r\n            />\r\n\r\n            <TextInput\r\n                label='Initial circulating supply'\r\n                placeholder='Enter initial circulating supply'\r\n                width='600px'\r\n                defaultVal={step4Data.circulatingsupply}\r\n                isRequire={true}\r\n                isNumber={true}\r\n                REG_rule={{\r\n                    reg: /^[1-9]\\d*|0$/,\r\n                    mag: 'Please enter a positive integer'\r\n                }}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('circulatingsupply', val)\r\n                }}\r\n            />\r\n\r\n            <TextInput\r\n                label='Token ticketer'\r\n                placeholder='Enter token ticketer'\r\n                width='600px'\r\n                defaultVal={step4Data.tokenticketer}\r\n                isRequire={true}\r\n                upperCase={true}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('tokenticketer', val)\r\n                }}\r\n            />\r\n\r\n            <TextInput\r\n                label='Token contract address (enter 0x0000000000000000000000000000000000000000 if you don’t have one yet)'\r\n                placeholder='Paste token contract address'\r\n                width='600px'\r\n                maxLength={42}\r\n                defaultVal={step4Data.tokencontractaddress}\r\n                isRequire={true}\r\n                REG_rule={{\r\n                    reg: /[0x|0X][\\S]{41}/,\r\n                    msg: 'Please enter a positive integer Please enter a valid contract address'\r\n                }}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('tokencontractaddress', val)\r\n                }}\r\n            />\r\n\r\n\r\n            <TextInput\r\n                label='Token distribution'\r\n                placeholder='describe your token distribution max 300 character'\r\n                width='600px'\r\n                minHeight='80px'\r\n                maxLength={300}\r\n                defaultVal={step4Data.tokendistribution}\r\n                isRequire={true}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('tokendistribution', val)\r\n                }}\r\n            />\r\n\r\n            <TextInput\r\n                label='Token lockup schedule'\r\n                placeholder='describe your token lockup schedule max 300 character'\r\n                width='600px'\r\n                minHeight='80px'\r\n                maxLength={300}\r\n                defaultVal={step4Data.tokenlookupschedule}\r\n                isRequire={true}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('tokenlookupschedule', val)\r\n                }}\r\n            />\r\n\r\n            <div className=\"btn_group\">\r\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\r\n                    setCurStep(3)\r\n                }} />\r\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\r\n                    setCurStep(5)\r\n                    console.log(step4Data)\r\n                }} />\r\n            </div>\r\n        </Step4Styled>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step1.jsx",["458","459","460","461","462","463","464","465","466","467","468","469","470"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Step1Styled } from './styled'\r\nimport { TextInput, Button } from '../components/Table'\r\n\r\nconst SocialConfig = ['Twitter', 'Medium', 'Telegram', 'Facebook']\r\nconst requireList = ['proname', 'prowebsite', 'protheme', 'whitepaperlink', 'githublink']\r\n\r\n\r\nexport default function Step1({ setCurStep, setTitle, step1Data, setStep1Data }) {\r\n    const history = useHistory()\r\n    const [socialLink, setSocialLink] = useState([])\r\n    const [isNext, setIsNext] = useState(false)\r\n\r\n    const wrapperToUpperCase = (str) => {\r\n        return String(str).toUpperCase()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTitle({\r\n            title: 'General information',\r\n            crumbsList: [{\r\n                name: 'Apply Certified Sales'\r\n            }, {\r\n                name: 'General information',\r\n                active: true\r\n            }]\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        // console.log(step1Data)\r\n        const arr = requireList.filter(item => {\r\n            return !step1Data[item]\r\n        })\r\n        if (arr.length === 0) {\r\n            setIsNext(true)\r\n        } else {\r\n            setIsNext(false)\r\n        }\r\n    }, [step1Data])\r\n\r\n    const handelClickAdd = (item) => {\r\n        const list = [...socialLink]\r\n        if (!list.includes(item)) {\r\n            list.push(item)\r\n        } else {\r\n            const index = socialLink.indexOf(item)\r\n            list.splice(index, 1)\r\n        }\r\n        setSocialLink(list)\r\n    }\r\n\r\n    const handelInputChange = (key, data) => {\r\n        const obj = { ...step1Data }\r\n        if (!data.isError) {\r\n            obj[key] = data.value\r\n        } else {\r\n            obj[key] = null\r\n        }\r\n        setStep1Data(obj)\r\n    }\r\n\r\n    return (\r\n        <Step1Styled>\r\n            <p className='tip'><span>Please note.</span> The submission fee to apply certified sales is 0.3 BOT tokens</p>\r\n\r\n            <TextInput\r\n                label='Project name'\r\n                placeholder='Enter your project name'\r\n                defaultVal={step1Data.proname}\r\n                isRequire={true}\r\n                width='600px'\r\n                onValueChange={(val) => {\r\n                    handelInputChange('proname', val)\r\n                }}\r\n                maxLength={20}\r\n            />\r\n\r\n            <TextInput\r\n                label='Project website'\r\n                placeholder='Enter your project website'\r\n                defaultVal={step1Data.prowebsite}\r\n                isRequire={true}\r\n                width='600px'\r\n                onValueChange={(val) => {\r\n                    handelInputChange('prowebsite', val)\r\n                }}\r\n                maxLength={100}\r\n                REG_rule={{\r\n                    reg: /http(s)?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/,\r\n                    msg: 'Please enter a valid website address'\r\n                }}\r\n            />\r\n\r\n            <TextInput\r\n                label='Theme'\r\n                placeholder='For Example: Defi , Public Chain'\r\n                defaultVal={step1Data.protheme}\r\n                isRequire={true}\r\n                width='600px'\r\n                onValueChange={(val) => {\r\n                    handelInputChange('protheme', val)\r\n                }}\r\n            />\r\n\r\n            <TextInput\r\n                label='Whitepaper link'\r\n                placeholder=' Enter your whitepaper link'\r\n                defaultVal={step1Data.whitepaperlink}\r\n                isRequire={true}\r\n                width='600px'\r\n                REG_rule={{\r\n                    reg: /http(s)?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/,\r\n                    msg: 'Please enter a standard Whitepaper link'\r\n                }}\r\n                maxLength={100}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('whitepaperlink', val)\r\n                }}\r\n            />\r\n\r\n            <TextInput\r\n                label='Github link'\r\n                placeholder='Paste github link'\r\n                defaultVal={step1Data.githublink}\r\n                isRequire={true}\r\n                width='600px'\r\n                maxLength={100}\r\n                REG_rule={{\r\n                    reg: /http(s)?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/,\r\n                    msg: 'Please enter a standard GitHub address'\r\n                }}\r\n\r\n                onValueChange={(val) => {\r\n                    handelInputChange('githublink', val)\r\n                }}\r\n            />\r\n\r\n\r\n            {socialLink.map((item, index) => {\r\n                return <TextInput\r\n                    key={index}\r\n                    label={`${item} link`}\r\n                    placeholder={`Paste ${item} link`}\r\n                    defaultVal={step1Data[item]}\r\n                    width='600px'\r\n                    isRequire={false}\r\n                    maxLength={100}\r\n                    REG_rule={{\r\n                        reg: /http(s)?:\\/\\/[\\w.]+[\\w\\/]*[\\w.]*\\??[\\w=&\\+\\%]*/,\r\n                        msg: 'Please enter a standard web address'\r\n                    }}\r\n                    onValueChange={(val) => {\r\n                        console.log(val)\r\n                        const name = String(item).toLowerCase()\r\n                        handelInputChange(name, val)\r\n                    }}\r\n                />\r\n            })}\r\n\r\n\r\n            <ul className='add_append'>\r\n                {SocialConfig.map((item, index) => {\r\n                    return <li\r\n                        className={socialLink.includes(item) ? 'soc_active' : ''}\r\n                        key={index}\r\n                        onClick={() => {\r\n                            handelClickAdd(item)\r\n                        }}\r\n                    >{wrapperToUpperCase(`Add ${item}`)}</li>\r\n                })}\r\n            </ul>\r\n\r\n            <div className=\"btn_group\">\r\n                <Button type='white' value='Cancel' width='164px' onClick={() => {\r\n                    history.goBack(-1)\r\n                }} />\r\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\r\n                    setCurStep(2)\r\n                }} />\r\n            </div>\r\n        </Step1Styled>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step2.jsx",["471"],"import React, { useEffect, useState } from 'react'\r\nimport { Step2Styled } from './styled'\r\nimport { TextInput, Button } from '../components/Table'\r\n\r\n\r\nconst requireList = ['prosummary', 'techhighlight']\r\n\r\nexport default function Step2({ setCurStep, setTitle, step2Data, setStep2Data }) {\r\n\r\n\r\n    const [isNext, setIsNext] = useState(false)\r\n\r\n    const wrapperToUpperCase = (str) => {\r\n        return String(str).toUpperCase()\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTitle({\r\n            title: 'Details',\r\n            crumbsList: [{\r\n                name: 'Apply Certified Sales'\r\n            }, {\r\n                name: 'General information',\r\n                onClick: () => { return setCurStep(1) }\r\n            }, {\r\n                name: 'Details',\r\n                active: true\r\n            }]\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const arr = requireList.filter(item => {\r\n            return !step2Data[item]\r\n        })\r\n        if (arr.length === 0) {\r\n            setIsNext(true)\r\n        } else {\r\n            setIsNext(false)\r\n        }\r\n    }, [step2Data])\r\n\r\n    const handelInputChange = (key, data) => {\r\n        const obj = { ...step2Data }\r\n        if (!data.isError) {\r\n            obj[key] = data.value\r\n        } else {\r\n            obj[key] = null\r\n        }\r\n        setStep2Data(obj)\r\n    }\r\n\r\n    return (\r\n        <Step2Styled>\r\n            <TextInput\r\n                label='Project Summary'\r\n                placeholder='Enter your project Summary (Limit to 100 characters)'\r\n                width='600px'\r\n                marginTop='0px'\r\n                defaultVal={step2Data.prosummary}\r\n                isRequire={true}\r\n                maxLength={100}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('prosummary', val)\r\n                }}\r\n            />\r\n\r\n            <TextInput\r\n                label='Technical highlight'\r\n                placeholder='Enter your project Technical highlight(Limit to 500 characters)'\r\n                width='600px'\r\n                maxLength={500}\r\n                defaultVal={step2Data.techhighlight}\r\n                isRequire={true}\r\n                onValueChange={(val) => {\r\n                    handelInputChange('techhighlight', val)\r\n                }}\r\n            />\r\n\r\n            <TextInput\r\n                label='Architecture'\r\n                placeholder='Enter your architecture'\r\n                width='600px'\r\n                defaultVal={step2Data.architecture}\r\n                isRequire={false}\r\n                maxLength={500}\r\n                name='architecture'\r\n                onValueChange={(val) => {\r\n                    console.log(val)\r\n                    handelInputChange('architecture', val)\r\n                }}\r\n            />\r\n\r\n            <ul className='add_append'>\r\n                {/* 添加附件 */}\r\n                <li>{wrapperToUpperCase('Add attachments')}</li>\r\n            </ul>\r\n\r\n            <div className=\"btn_group\">\r\n                <Button type='white' value='Last Step' width='164px' onClick={() => {\r\n                    setCurStep(1)\r\n                }} />\r\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\r\n                    setCurStep(3)\r\n                }} />\r\n            </div>\r\n        </Step2Styled>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\Card.jsx",["472","473","474","475"],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\HeaderTab\\config.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\ApplySale\\Step6.jsx",["476"],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Modal\\KYC_TIP.jsx",["477"],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\HeaderTab\\PersonalModal.jsx",["478","479","480"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { PerModalStyled } from './styled'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport copy_icon from '../../../assets/icons/copy-black.svg'\r\nimport bule_check from '../../../assets/images/bule-check.svg'\r\nimport { useVoteList } from \"../../CertifiedSales/hooks\";\r\nimport { queryIsKyc } from '../../../config/utils/END_FUN'\r\nimport { queryBotBalance } from '../../../config/utils/BOT_FUN'\r\nimport { myContext } from '../../../redux';\r\n\r\nexport default function PersonalModal({ show = false, userName }) {\r\n    const history = useHistory()\r\n    const { account, chainId, library } = useWeb3React()\r\n    const KYC_STATUS = window.localStorage.getItem('KYC_STATUS') || 0\r\n    const { state, dispatch } = useContext(myContext);\r\n    const { list } = useVoteList()\r\n    const [isKYC, setIsKYC] = useState(false)\r\n    const [balance, setBalance] = useState(0)\r\n\r\n    const myProject = list && list.filter(item => { return item.status === 'Active' && item.creator.toLowerCase() === account.toLowerCase() })[0]\r\n\r\n    useEffect(async () => {\r\n        if (!account) return\r\n        const isKYC = await queryIsKyc(account)\r\n        const balance = await queryBotBalance(library, account, chainId)\r\n        setIsKYC(isKYC)\r\n        setBalance(balance)\r\n    }, [account])\r\n\r\n    const handelClickLi = (type) => {\r\n        if (!type) return\r\n        switch (type) {\r\n            case 'kyc':\r\n                return history.push('/kyc')\r\n            case 'PersonalInfo':\r\n                return history.push('/PersonalInfo')\r\n            case 'applySale':\r\n                console.log(isKYC, balance)\r\n                console.log(state)\r\n                if (!isKYC) {\r\n                    return dispatch({\r\n                        type: 'MODAL',\r\n                        value: {\r\n                            name: 'CONFIRM',\r\n                            title: 'Bounce Decentralized',\r\n                            deputy: 'You are not KYC certified, please authenticate before adding the vote',\r\n                            cancel: {\r\n                                text: 'Not Now'\r\n                            },\r\n                            confirm: {\r\n                                text: 'Go',\r\n                                callback: () => {\r\n                                    dispatch({type: 'MODAL', value: null})\r\n                                    history.push('/kyc')\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n                } else if (balance < 0.3) {\r\n                    return dispatch({\r\n                        type: 'MODAL',\r\n                        value: {\r\n                            name: 'CONFIRM',\r\n                            title: 'Bounce Decentralized',\r\n                            deputy: `If you want to add a project vote, you must have more than 0.3 BOT. Your current balance is ${Number(balance)}, so you cannot create it`,\r\n                            cancel: {\r\n                                text: 'I Know'\r\n                            }\r\n                        }\r\n                    })\r\n                } else if (myProject) {\r\n                    return dispatch({\r\n                        type: 'MODAL',\r\n                        value: {\r\n                            name: 'CONFIRM',\r\n                            title: 'Bounce Decentralized',\r\n                            deputy: `You currently have a project running and cannot create two running pools`,\r\n                            cancel: {\r\n                                text: 'I Know'\r\n                            },\r\n                            confirm: {\r\n                                text: 'Show My Project',\r\n                                callback: () => {\r\n                                    return history.push(`/learn-more/${myProject.id}`)\r\n                                }\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                } else {\r\n                    return history.push('/applySale')\r\n                }\r\n                break\r\n            default:\r\n                return\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        show && <PerModalStyled>\r\n            <div className=\"account\">\r\n                <div className='account_name'>\r\n                    <h5>{userName}</h5>\r\n                    {KYC_STATUS === '1' && <img src={bule_check} alt=\"\" />}\r\n                </div>\r\n                <div className=\"account_address\">\r\n                    <p>{account || '0x00'} </p>\r\n                    <CopyToClipboard\r\n                        text={account}\r\n                        onCopy={() => { }}>\r\n                        <img className='ignore' src={copy_icon} alt=\"\" />\r\n                    </CopyToClipboard>\r\n                </div>\r\n            </div>\r\n            <ul>\r\n                {KYC_STATUS !== '1' && <li\r\n                    onClick={() => {\r\n                        handelClickLi('kyc')\r\n                    }}\r\n                >\r\n                    <i className='kyc'></i>\r\n                    <span>KYC</span>\r\n                </li>}\r\n\r\n                <li onClick={() => {\r\n                    handelClickLi('PersonalInfo')\r\n                }}>\r\n                    <i className='pi'></i>\r\n                    <span>Personal Info</span>\r\n                </li>\r\n\r\n                <li\r\n                    onClick={() => { handelClickLi('applySale') }}\r\n                >\r\n                    <i className='acs'></i>\r\n                    <span>{myProject ? 'Check Status' : 'Apply Certified Sale'}</span>\r\n                </li>\r\n            </ul>\r\n        </PerModalStyled>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\index.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\utils\\time.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\hooks\\useBalance.js",["481"],"import {getContract, useActiveWeb3React} from \"../web3\";\r\nimport {useEffect, useState} from \"react\";\r\nimport bounceERC20 from \"../web3/abi/bounceERC20.json\";\r\nimport {BOT} from \"../web3/address\";\r\n\r\nexport const useTokenBalance = (address) => {\r\n  const { active, account, library, chainId } = useActiveWeb3React();\r\n  const [balance, setBalance] = useState(null)\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    async function getBalance() {\r\n      try {\r\n        const tokenContract = getContract(library, bounceERC20.abi, address ? address : BOT(chainId))\r\n        const balance = await tokenContract.methods.balanceOf(account).call()\r\n        setBalance(balance)\r\n      } catch (e) {\r\n        console.log('useTokenBalance:', e)\r\n        setBalance(null)\r\n      }\r\n    }\r\n\r\n    if (active && account && chainId) {\r\n      getBalance()\r\n    } else {\r\n      setBalance(null)\r\n    }\r\n\r\n  }, [active, account, chainId])\r\n\r\n\r\n  return { balance }\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Exhibition\\index.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\components\\common\\TXModal.js",["482","483"],"import Modal, {ModalContent, ModalTitle} from \"./Modal\";\r\nimport Lottie from \"react-lottie\";\r\nimport {FormStatus} from \"./Form\";\r\nimport icon_success from \"../../assets/icons/icon-success.svg\";\r\nimport icon_error from \"../../assets/icons/icon-error.svg\";\r\nimport {Button} from \"./Button\";\r\nimport React from \"react\";\r\nimport bounce_loading from \"../../assets/bounce-loading.json\";\r\n\r\nexport const confirmStatus = {status: 1, title: 'Bounce requests wallet interaction', content: 'Please open your wallet and confirm in the transaction activity to proceed your order'}\r\nexport const pendingStatus = {status: 2, title: 'Bounce waiting for transaction settlement', content: 'Bounce is engaging with blockchain transaction, please wait patiently for on-chain transaction settlement'}\r\nexport const claimSuccessStatus = {status: 3, title: 'Settlement', content: 'Thanks for using Bounce Finance to create your auction. Your last auction is settled and you can create another one.'}\r\nexport const voteSuccessStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully participated in this prediction. Please come back to check results when the prediction pool is closed'}\r\nexport const successStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully participated in this auction. To proceed to next step, please read more instructions on auction in the bounce documentation'}\r\nexport const successVotedStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully voted for your favorite project. Please come back to claim tokens when voting process ends'}\r\nexport const successVoteClaimedStatus = {status: 3, title: 'Congratulations!', content: 'You have successfully claimed back your voted tokens'}\r\n\r\nexport const errorStatus = {status: -1, title: 'Transaction failed on Bounce', content: 'Oops! Your transaction is failed for on-chain approval and settlement. Please initiate another transaction'}\r\nexport const cancelStatus = {status: -2, title: 'Transaction canceled on Bounce', content: 'Sorry! Your transaction is canceled. Please try again'}\r\nexport const initStatus = {status: 0, title: '', content: ''}\r\n\r\n\r\nconst defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: bounce_loading,\r\n    rendererSettings: {\r\n        preserveAspectRatio: 'xMidYMid slice'\r\n    }\r\n};\r\n\r\nexport const TxModal = ({modalStatus, onDismiss}) =>{\r\n\r\n    const {status, title, content} = modalStatus\r\n    return (\r\n        <Modal isOpen={status !== 0} onDismiss={() => {\r\n            onDismiss()\r\n        }}>\r\n            <ModalTitle style={{textAlign: 'center'}}>{title}</ModalTitle>\r\n\r\n            {(status === 1 || status === 2) &&\r\n            <Lottie width={200} height={200} options={defaultOptions}/>}\r\n\r\n            {(status === 3 ) &&\r\n            <FormStatus ><img src={icon_success}/></FormStatus>}\r\n\r\n            {(status === -1 || status === -2) &&\r\n            <FormStatus><img src={icon_error}/></FormStatus>}\r\n\r\n            <ModalContent style={{width: 300, textAlign: 'center'}}>{content}</ModalContent>\r\n            {(status === 1 || status === 2) && <Button width={'320px'} black>Awaiting...</Button>}\r\n            {status === 3 && <Button width={'320px'} black onClick={()=>{\r\n              window.location.reload()\r\n            }}>Close</Button>}\r\n            {status === -1 && <Button onClick={()=>{onDismiss()}} width={'320px'} black>Try again</Button>}\r\n        </Modal>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\LearnMore\\InfoBox.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Modal\\Support.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\Progress.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\CardHeader.jsx",["484"],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\config\\utils\\BOT_FUN.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Select.jsx",["485","486"],"import React, { useState, useEffect } from 'react'\r\nimport { SelectStyled } from './styled'\r\nimport icon_down from '../../../assets/icons/down.svg'\r\n\r\nexport const Select = ({ isRequire, label, width, options = [], onChange, defaultVal }) => {\r\n    const [isPull, setIsPull] = useState(false)\r\n    const [selOption, setSelOption] = useState(0)\r\n\r\n    useEffect(() => {\r\n        if (selOption === null) return\r\n        if (options.length === 0) return\r\n        onChange && onChange(options[selOption])\r\n    }, [selOption])\r\n\r\n    useEffect(() => {\r\n        if (options.length === 0 && !defaultVal && selOption) return\r\n\r\n        console.log(options,defaultVal )\r\n        options.forEach((item, index) => {\r\n            if (defaultVal && ((defaultVal.name !== undefined && item.name === defaultVal.name) || (defaultVal.value !== undefined && item.value === defaultVal.value))) {\r\n                return setSelOption(index)\r\n            }\r\n        })\r\n    }, [defaultVal, options])\r\n\r\n    return (\r\n        <SelectStyled\r\n            width={width}\r\n        >\r\n            {label && <p>{label}\r\n                {isRequire && <span>*</span>}\r\n            </p>}\r\n\r\n            <div className='sel_wrapper'>\r\n                <div className=\"input\" onClick={() => {\r\n                    setIsPull(!isPull)\r\n                }}>\r\n                    <span>{options[selOption] ? options[selOption].name : ''}</span>\r\n                    <img className={isPull ? 'up' : 'down'} src={icon_down} alt=\"\" />\r\n                </div>\r\n                {isPull && <ul className='options'>\r\n                    {options.map((item, index) => {\r\n                        return <li\r\n                            key={index}\r\n                            className={index === selOption ? 'active' : ''}\r\n                            onClick={() => {\r\n                                setSelOption(index)\r\n                                setIsPull(false)\r\n                            }}>\r\n                            {item.name}\r\n                        </li>\r\n                    })}\r\n                </ul>}\r\n            </div>\r\n        </SelectStyled>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Text.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Upload.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Button.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Check.jsx",["487"],"import React, { useState, useEffect } from 'react'\r\nimport { RadioStyled } from './styled'\r\nimport icon_radio from '../../../assets/images/radio.svg'\r\nimport icon_radio_sel from '../../../assets/images/radio_sel.svg'\r\n\r\nexport const Radio = ({ label, width, onChange, options = [], defaultIndex = 0 }) => {\r\n    const [curSel, setCurSel] = useState(defaultIndex)\r\n\r\n    useEffect(() => {\r\n        onChange && onChange(options[curSel])\r\n    }, [curSel])\r\n\r\n    return (\r\n        <RadioStyled width={width}>\r\n            {label && <p>{label}</p>}\r\n\r\n            <ul>\r\n                {options.map((item, index) => {\r\n                    return <li\r\n                        key={index}\r\n                        onClick={() => {\r\n                            setCurSel(index)\r\n                        }}>\r\n                        <img src={curSel === index ? icon_radio_sel : icon_radio} alt=\"\" />\r\n                        <span>{item.name}</span>\r\n                        {item.append && curSel === index && item.append}\r\n                    </li>\r\n                })}\r\n            </ul>\r\n        </RadioStyled>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Input.jsx",["488","489","490","491","492"],"import React, { useEffect, useState } from 'react'\r\nimport { InputStyled, AmountStyled, TimeInputStyled } from './styled'\r\n\r\nexport const TextInput = ({ unit, upperCase, name, isNumber, isName, REG_rule, maxLength, disabled, defaultVal, placeholder, width, minHeight, marginTop, label, onChange, onValChange, onValueChange, isRequire = false, bottom }) => {\r\n    const [val, setVal] = useState('')\r\n    const [isError, setIsError] = useState(false)\r\n    const [errMsg, setErrMsg] = useState('')\r\n    const [sHeight, setSHeight] = useState('48px')\r\n\r\n    useEffect(() => {\r\n        if (!defaultVal) return\r\n        setVal(defaultVal)\r\n    }, [defaultVal])\r\n\r\n    useEffect(() => {\r\n        if (String(val).trim() === '' && !isError) return\r\n        onValueChange && onValueChange({\r\n            name: name,\r\n            value: val,\r\n            isError: isError,\r\n            errMsg: errMsg,\r\n            isRequire: isRequire ? isRequire : false\r\n        })\r\n\r\n\r\n        if (isRequire && val === '') {\r\n            onValChange && onValChange(null)\r\n        } else {\r\n            onValChange && onValChange(val)\r\n        }\r\n\r\n    }, [val, isError])\r\n\r\n    const regMatch = (val) => {\r\n        if (REG_rule) {\r\n            const reg = new RegExp(REG_rule.reg)\r\n            if (!reg.test(val)) {\r\n                setErrMsg(REG_rule.msg)\r\n                setIsError(true)\r\n            } else {\r\n                setErrMsg('')\r\n                setIsError(false)\r\n            }\r\n\r\n        } else {\r\n            setErrMsg('')\r\n            setIsError(false)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    const wrapperName = (str) => {\r\n        let reg = /[0-9]+/g;\r\n        let str1 = str.replace(reg, \"\");\r\n        if (str1 === '') return ''\r\n        let arr = str1.toLowerCase().split(\" \");\r\n        for (var i = 0; i < arr.length; i++) {\r\n            arr[i] = arr[i][0].toUpperCase() + arr[i].substring(1, arr[i].length);\r\n        }\r\n        return arr.join(\" \");\r\n    }\r\n\r\n    const wrapperNumber = (str) => {\r\n        let reg = /[\\D]+/g;\r\n        let str1 = str.replace(reg, \"\");\r\n        return str1\r\n    }\r\n\r\n    const wrapperUpperCase = (str) => {\r\n        let reg = /[a-zA-Z]+/g;\r\n        let str1 = str.replace(reg, (v) => {\r\n            if (v === ' ') return\r\n            return v.toUpperCase()\r\n        });\r\n        return str1\r\n    }\r\n\r\n\r\n    return (\r\n        <InputStyled\r\n            width={width}\r\n            height={sHeight}\r\n            marginTop={marginTop}\r\n        >\r\n            {label && <p>\r\n                {label}\r\n                {isRequire && <span className='require'>*</span>}\r\n            </p>}\r\n\r\n            <div className=\"input_area\">\r\n                <textarea\r\n                    name={name}\r\n                    style={{ resize: 'none', height: sHeight, minHeight: minHeight, marginBottom: bottom }}\r\n                    className={`${val !== '' ? 'isComplete' : ''} ${isError ? 'Error' : ''}`}\r\n                    value={val}\r\n                    // height\r\n                    placeholder={placeholder}\r\n                    disabled={disabled}\r\n                    maxLength={maxLength || 30}\r\n                    onChange={(e) => {\r\n                        const height = e.target.scrollHeight\r\n                        if ((height - 1) + 'px' !== sHeight) {\r\n                            console.log((height - 1) + 'px')\r\n                            setSHeight((height - 1) + 'px')\r\n                        }\r\n\r\n                        let val = e.target.value\r\n                        if (isName) {\r\n                            val = String(val).trim()\r\n                            val = wrapperName(val)\r\n                        }\r\n\r\n                        if (isNumber) {\r\n                            val = String(val).trim()\r\n                            val = wrapperNumber(val)\r\n                        }\r\n\r\n                        if (upperCase) {\r\n                            val = wrapperUpperCase(val)\r\n                        }\r\n                        regMatch(val)\r\n                        setVal(val)\r\n                        onChange && onChange(e)\r\n                    }}\r\n                    onBlur={(e) => {\r\n                        let val = e.target.value\r\n                        if (isRequire && String(e.target.value).trim() === '') {\r\n                            setIsError(true)\r\n                            setErrMsg('Please fill in this field')\r\n                        } else if (!isError) {\r\n                            setIsError(false)\r\n                            setErrMsg('')\r\n                        }\r\n                    }}\r\n                ></textarea>\r\n\r\n                {unit && <p className='unit'>{unit}</p>}\r\n            </div>\r\n            {isError && <p className=\"error_msg\">{errMsg}</p>}\r\n        </InputStyled>\r\n    )\r\n}\r\n\r\nexport const TimeInput = ({ label, width, marginTop, onChange, defaultVal }) => {\r\n    const [days, setDays] = useState('')\r\n    const [hours, setHours] = useState('')\r\n    const [minutes, setMinutes] = useState('')\r\n    const [isError, setIsError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (days === '' && hours === '' && minutes === '') return\r\n        const err = getSeconds(days, hours, minutes) < 60 * 5 ? true : false\r\n\r\n        setIsError(err)\r\n\r\n        const obj = {\r\n            days: days === '' ? 0 : days,\r\n            hours: hours === '' ? 0 : hours,\r\n            minutes: minutes === '' ? 0 : minutes,\r\n            seconds: getSeconds(days, hours, minutes),\r\n            timestamp: getSeconds(days, hours, minutes) * 1000,\r\n            isRequire: true,\r\n            isError: err,\r\n            value: String(getSeconds(days, hours, minutes))\r\n        }\r\n\r\n\r\n        onChange && onChange(obj)\r\n    }, [days, hours, minutes])\r\n\r\n    useEffect(() => {\r\n        if (!defaultVal) return\r\n        console.log(defaultVal)\r\n        const day = parseInt(defaultVal / (24 * 60 * 60))\r\n        const hour = parseInt((defaultVal / (60 * 60))) % 24\r\n        const minute = parseInt(defaultVal / 60) % 60\r\n\r\n        day && setDays(day)\r\n        hour && setHours(hour)\r\n        minute && setMinutes(minute)\r\n\r\n    }, [])\r\n\r\n    const getSeconds = (days = 0, hours = 0, minutes = 0) => {\r\n        const s1 = days * 24 * 60 * 60\r\n        const s2 = hours * 60 * 60\r\n        const s3 = minutes * 60\r\n\r\n        return s1 + s2 + s3\r\n    }\r\n\r\n    return <TimeInputStyled\r\n        width={width}\r\n        marginTop={marginTop}\r\n    >\r\n        {label && <p>\r\n            {label}\r\n            {<span className='require'>*</span>}\r\n        </p>}\r\n\r\n        <div className=\"input_box\">\r\n            <input type=\"number\" name='Days' placeholder='Days' value={days} onChange={(e) => {\r\n                let val = String(e.target.value).trim()\r\n                val = parseFloat(val).toString()\r\n                if (val !== 'NaN') {\r\n                    if (val > 6) {\r\n                        val = 6\r\n                    } else if (val < 1) {\r\n                        val = 0\r\n                    }\r\n                    setDays(val)\r\n                } else {\r\n                    setDays(0)\r\n                }\r\n            }} />\r\n            <input type=\"number\" name='Hours' placeholder='Hours' value={hours} onChange={(e) => {\r\n                let val = String(e.target.value).trim()\r\n                val = parseFloat(val).toString()\r\n                if (val !== 'NaN') {\r\n                    if (val > 23) {\r\n                        val = 23\r\n                    } else if (val < 1) {\r\n                        val = 0\r\n                    }\r\n                    setHours(val)\r\n                } else {\r\n                    setHours(0)\r\n                }\r\n            }} />\r\n            <input type=\"number\" name='Minutes' placeholder='Minutes' value={minutes} onChange={(e) => {\r\n                let val = String(e.target.value).trim()\r\n                val = parseFloat(val).toString()\r\n                if (val !== 'NaN') {\r\n                    if (val > 58) {\r\n                        val = 59\r\n                    } else if (val < 1) {\r\n                        val = 0\r\n                    }\r\n                    setMinutes(val)\r\n                } else {\r\n                    setMinutes(0)\r\n                }\r\n            }} />\r\n        </div>\r\n\r\n        {isError && <p className=\"error_msg\">5 minutes minimum input</p>}\r\n    </TimeInputStyled>\r\n}\r\n\r\nexport const AmountInput = ({ placeholder, width, defaultVal, onChange, maxValue }) => {\r\n    const [inputVal, setInputVal] = useState(defaultVal || '')\r\n    const [isError, setIsError] = useState(false)\r\n    const [errMsg, setErrmsg] = useState('')\r\n\r\n    useEffect(() => {\r\n        onChange && onChange({\r\n            isRequire: true,\r\n            isError: isError,\r\n            value: inputVal\r\n        })\r\n    }, [inputVal])\r\n\r\n    return <AmountStyled\r\n        width={width || '100px'}\r\n    >\r\n        <input\r\n            type=\"number\"\r\n            value={inputVal}\r\n            className={isError ? 'error' : ''}\r\n            placeholder={placeholder}\r\n            onChange={(e) => {\r\n                let val = e.target.value\r\n                if (maxValue && parseFloat(val) > maxValue) {\r\n                    val = maxValue\r\n                }\r\n                setInputVal(val)\r\n            }}\r\n\r\n            onBlur={(e) => {\r\n                const val = e.target.value\r\n                if (String(val).trim() === '') {\r\n                    setIsError(true)\r\n                    setErrmsg('Please Enter')\r\n                }\r\n            }}\r\n        />\r\n\r\n        {isError && <p className='errMsg'>{errMsg}</p>}\r\n    </AmountStyled>\r\n}","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\LearnMore\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Exhibition\\Crumbs.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Exhibition\\Passage.jsx",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Exhibition\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\config\\utils\\END_FUN.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\HeaderTab\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\components\\Table\\Form.jsx",["493"],"import React, { useEffect } from 'react'\r\nimport { FormStyled } from './styled'\r\n\r\nexport const Form = ({ title, width, children, marginTop }) => {\r\n    return (\r\n        <FormStyled width={width} marginTop={marginTop}>\r\n            {title && <h5>{title}</h5>}\r\n\r\n            <div className=\"children\">\r\n                {children}\r\n            </div>\r\n        </FormStyled>\r\n    )\r\n}\r\n\r\n\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\PersonalInfo\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Home\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\CertifiedSales\\Detail\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Kyc\\styled.js",[],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Kyc\\Step3.jsx",["494","495","496","497","498"],"C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Kyc\\Step2.jsx",["499"],"import React, { useState, useEffect } from 'react'\r\nimport { TextInput, Form, Button, Select } from '../components/Table'\r\nimport country from '../../config/country.json'\r\n\r\n\r\nexport default function Step2({ curStep, setCurStep, ReqData, setReqData }) {\r\n\r\n    const [isNext, setIsNext] = useState(false)\r\n\r\n    const requiredList = ['1_residentialaddr', '2_countryother']\r\n    const requiredList_json = requiredList\r\n        .sort((a1, a2) => {\r\n            return parseInt(a1) - parseInt(a2)\r\n        }).toString()\r\n    const [checkList, setCheckList] = useState([])\r\n\r\n    useEffect(() => {\r\n        const checkList_json = checkList.sort((a1, a2) => {\r\n            return parseInt(a1) - parseInt(a2)\r\n        }).toString()\r\n\r\n        console.log(checkList_json, requiredList_json)\r\n\r\n        if (checkList_json === requiredList_json) {\r\n            setIsNext(true)\r\n        } else {\r\n            setIsNext(false)\r\n        }\r\n    }, [checkList])\r\n\r\n    const handelValChange = (key, val) => {\r\n        const data = { ...ReqData }\r\n        data[key] = val\r\n        setReqData(data)\r\n    }\r\n\r\n    const checkValue = (data) => {\r\n        if (!data) return\r\n        if (data.isRequire) {\r\n            const arrList = [...checkList]\r\n            if (!data.isError && data.value !== '') {\r\n                if (!arrList.includes(data.name)) {\r\n                    arrList.push(data.name)\r\n                }\r\n            } else {\r\n                if (arrList.includes(data.name)) {\r\n                    const index = arrList.indexOf(data.name)\r\n                    arrList.splice(index, 1)\r\n                }\r\n            }\r\n            setCheckList(arrList)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form title={'Residental Address'}>\r\n            {/* <TextInput label='Country / Region'  onValChange={(val) => {\r\n                handelValChange('country', val)\r\n            }} /> */}\r\n            <Select\r\n                label='Country / Region'\r\n                width='600px'\r\n                options={country}\r\n                isRequire={true}\r\n                // defaultVal={{\r\n                //     name: 'Andorra'\r\n                // }}\r\n                onChange={(val) => {\r\n                    handelValChange('country', val.name)\r\n                }}\r\n\r\n            />\r\n\r\n\r\n            <TextInput\r\n                label='Address'\r\n                placeholder='Enter your Address'\r\n                name='1_residentialaddr'\r\n                defaultVal={ReqData && ReqData.residentialaddr}\r\n                onValueChange={(data) => {\r\n                    checkValue(data)\r\n                    handelValChange('residentialaddr', data.value)\r\n                }}\r\n                isRequire={true}\r\n            // REG_rule={[{\r\n            //     reg: /[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?/,\r\n            //     msg: 'The residential address is incorrect'\r\n            // }]}\r\n            />\r\n            <TextInput\r\n                label='Postal Code'\r\n                placeholder='Enter your Postal Code'\r\n                width='294px'\r\n                name='idtype'\r\n                defaultVal={ReqData && ReqData.idtype}\r\n                onValueChange={(data) => {\r\n                    checkValue(data)\r\n                    handelValChange('idtype', data.value)\r\n                }}\r\n            />\r\n            <TextInput\r\n                label='City'\r\n                placeholder='Enter your city'\r\n                width='294px'\r\n                isRequire={true}\r\n                name='2_countryother'\r\n                defaultVal={ReqData && ReqData.countryother}\r\n                onValueChange={(data) => {\r\n                    checkValue(data)\r\n                    handelValChange('countryother', data.value)\r\n                }}\r\n            />\r\n\r\n            <div className=\"btn_group\">\r\n                <Button type='white' value='Back' width='164px' onClick={() => {\r\n                    setCurStep(curStep - 1)\r\n                }} />\r\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\r\n                    setCurStep(curStep + 1)\r\n                }} />\r\n            </div>\r\n        </Form>\r\n    )\r\n}\r\n","C:\\Users\\Administrator\\Desktop\\bounce v2.0\\bounce-kyc\\src\\pages\\Kyc\\Step1.jsx",["500","501","502"],"import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { TextInput, Form, Button } from '../components/Table'\r\n\r\nexport default function Step1({ curStep, setCurStep, ReqData, setReqData }) {\r\n    const history = useHistory()\r\n    const [isNext, setIsNext] = useState(false)\r\n\r\n    const requiredList = ['1_username', '3_lastname', '4_birthday']\r\n    const requiredList_json = requiredList\r\n        .sort((a1, a2) => {\r\n            return parseInt(a1) - parseInt(a2)\r\n        }).toString()\r\n    const [checkList, setCheckList] = useState([])\r\n\r\n\r\n    useEffect(() => {\r\n        const checkList_json = checkList.sort((a1, a2) => {\r\n            return parseInt(a1) - parseInt(a2)\r\n        }).toString()\r\n\r\n        if (checkList_json === requiredList_json) {\r\n            setIsNext(true)\r\n        } else {\r\n            setIsNext(false)\r\n        }\r\n    }, [checkList])\r\n\r\n    const handelValChange = (key, val) => {\r\n        const data = { ...ReqData }\r\n        data[key] = val\r\n        setReqData(data)\r\n    }\r\n\r\n    const checkValue = (data) => {\r\n        if (!data) return\r\n        if (data.isRequire) {\r\n            const arrList = [...checkList]\r\n            if (!data.isError && data.value !== '') {\r\n                if (!arrList.includes(data.name)) {\r\n                    arrList.push(data.name)\r\n                }\r\n            } else {\r\n                if (arrList.includes(data.name)) {\r\n                    const index = arrList.indexOf(data.name)\r\n                    arrList.splice(index, 1)\r\n                }\r\n            }\r\n            setCheckList(arrList)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Form title={'Basic Info'}>\r\n            <TextInput\r\n                label='First Name'\r\n                width='294px'\r\n                placeholder='Enter first name'\r\n                name='1_username'\r\n                defaultVal={ReqData && ReqData.username}\r\n                onValueChange={(data) => {\r\n                    checkValue(data)\r\n                    handelValChange('username', data.value)\r\n                }}\r\n                isRequire={true}\r\n                isName={true}\r\n            />\r\n            <TextInput\r\n                label='Middle Name (if applicable)'\r\n                width='294px'\r\n                placeholder='Enter middle name'\r\n                name='2_middlename'\r\n                defaultVal={ReqData && ReqData.middlename}\r\n                onValueChange={(data) => {\r\n                    checkValue(data)\r\n                    handelValChange('middlename', data.value)\r\n                }}\r\n                isName={true}\r\n            />\r\n            <TextInput\r\n                label='Last Name'\r\n                placeholder='Enter last name'\r\n                name='3_lastname'\r\n                defaultVal={ReqData && ReqData.lastname}\r\n                onValueChange={(data) => {\r\n                    checkValue(data)\r\n                    handelValChange('lastname', data.value)\r\n                }}\r\n                isRequire={true}\r\n                isName={true}\r\n            />\r\n\r\n\r\n            <TextInput\r\n                label='Date of Birth'\r\n                placeholder='2021-1-1'\r\n                name='4_birthday'\r\n                isRequire={true}\r\n                defaultVal={ReqData && ReqData.birthday}\r\n                onValueChange={(data) => {\r\n                    checkValue(data)\r\n                    handelValChange('birthday', data.value)\r\n                }}\r\n                REG_rule={{\r\n                    reg: /^((19[2-9]\\d{1})|(20((0[0-2])|(1[0-8]))))\\-((0?[1-9])|(1[0-2]))\\-((0?[1-9])|([1-2][0-9])|30|31)$/,\r\n                    msg: 'Incorrect birth date format (yyyy-mm-dd) Or under the age of 18'\r\n                }}\r\n            />\r\n\r\n            <div className=\"btn_group\">\r\n                <Button type='white' value='Cancel' width='164px' onClick={() => {\r\n                    history.goBack(-1)\r\n                }} />\r\n                <Button type='black' value='Next Step' width='164px' disabled={!isNext} onClick={() => {\r\n                    setCurStep(curStep + 1)\r\n                }} />\r\n            </div>\r\n        </Form>\r\n    )\r\n}",{"ruleId":"503","replacedBy":"504"},{"ruleId":"505","replacedBy":"506"},{"ruleId":"507","severity":1,"message":"508","line":2,"column":10,"nodeType":"509","messageId":"510","endLine":2,"endColumn":23},{"ruleId":"507","severity":1,"message":"511","line":51,"column":9,"nodeType":"509","messageId":"510","endLine":51,"endColumn":25},{"ruleId":"512","severity":1,"message":"513","line":61,"column":8,"nodeType":"514","endLine":61,"endColumn":10,"suggestions":"515"},{"ruleId":"512","severity":1,"message":"516","line":62,"column":8,"nodeType":"514","endLine":62,"endColumn":29,"suggestions":"517"},{"ruleId":"512","severity":1,"message":"518","line":70,"column":8,"nodeType":"514","endLine":70,"endColumn":17,"suggestions":"519"},{"ruleId":"507","severity":1,"message":"520","line":47,"column":8,"nodeType":"509","messageId":"510","endLine":47,"endColumn":10},{"ruleId":"512","severity":1,"message":"521","line":82,"column":8,"nodeType":"514","endLine":82,"endColumn":46,"suggestions":"522"},{"ruleId":"512","severity":1,"message":"523","line":86,"column":17,"nodeType":"524","endLine":97,"endColumn":19},{"ruleId":"525","severity":1,"message":"526","line":302,"column":52,"nodeType":"527","messageId":"528","endLine":302,"endColumn":54},{"ruleId":"529","severity":1,"message":"530","line":360,"column":33,"nodeType":"531","endLine":360,"endColumn":47},{"ruleId":"532","severity":1,"message":"533","line":381,"column":65,"nodeType":"531","endLine":384,"endColumn":52},{"ruleId":"507","severity":1,"message":"534","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":27},{"ruleId":"507","severity":1,"message":"535","line":1,"column":29,"nodeType":"509","messageId":"510","endLine":1,"endColumn":38},{"ruleId":"507","severity":1,"message":"536","line":64,"column":9,"nodeType":"509","messageId":"510","endLine":64,"endColumn":15},{"ruleId":"512","severity":1,"message":"537","line":87,"column":6,"nodeType":"514","endLine":87,"endColumn":30,"suggestions":"538"},{"ruleId":"512","severity":1,"message":"539","line":116,"column":6,"nodeType":"514","endLine":116,"endColumn":23,"suggestions":"540"},{"ruleId":"507","severity":1,"message":"541","line":4,"column":8,"nodeType":"509","messageId":"510","endLine":4,"endColumn":16},{"ruleId":"512","severity":1,"message":"542","line":29,"column":8,"nodeType":"514","endLine":29,"endColumn":17,"suggestions":"543"},{"ruleId":"507","severity":1,"message":"544","line":3,"column":8,"nodeType":"509","messageId":"510","endLine":3,"endColumn":15},{"ruleId":"507","severity":1,"message":"545","line":39,"column":25,"nodeType":"509","messageId":"510","endLine":39,"endColumn":39},{"ruleId":"507","severity":1,"message":"546","line":12,"column":8,"nodeType":"509","messageId":"510","endLine":12,"endColumn":13},{"ruleId":"507","severity":1,"message":"547","line":22,"column":5,"nodeType":"509","messageId":"510","endLine":22,"endColumn":18},{"ruleId":"507","severity":1,"message":"548","line":3,"column":8,"nodeType":"509","messageId":"510","endLine":3,"endColumn":19},{"ruleId":"512","severity":1,"message":"549","line":38,"column":8,"nodeType":"514","endLine":38,"endColumn":14,"suggestions":"550"},{"ruleId":"507","severity":1,"message":"551","line":17,"column":13,"nodeType":"509","messageId":"510","endLine":17,"endColumn":18},{"ruleId":"507","severity":1,"message":"552","line":20,"column":18,"nodeType":"509","messageId":"510","endLine":20,"endColumn":25},{"ruleId":"507","severity":1,"message":"553","line":23,"column":21,"nodeType":"509","messageId":"510","endLine":23,"endColumn":31},{"ruleId":"507","severity":1,"message":"554","line":28,"column":23,"nodeType":"509","messageId":"510","endLine":28,"endColumn":35},{"ruleId":"507","severity":1,"message":"555","line":31,"column":22,"nodeType":"509","messageId":"510","endLine":31,"endColumn":33},{"ruleId":"507","severity":1,"message":"556","line":45,"column":11,"nodeType":"509","messageId":"510","endLine":45,"endColumn":24},{"ruleId":"512","severity":1,"message":"557","line":66,"column":8,"nodeType":"514","endLine":66,"endColumn":19,"suggestions":"558"},{"ruleId":"559","severity":1,"message":"560","line":176,"column":19,"nodeType":"561","messageId":"562","endLine":176,"endColumn":20},{"ruleId":"512","severity":1,"message":"563","line":183,"column":8,"nodeType":"514","endLine":183,"endColumn":34,"suggestions":"564"},{"ruleId":"507","severity":1,"message":"547","line":20,"column":5,"nodeType":"509","messageId":"510","endLine":20,"endColumn":18},{"ruleId":"507","severity":1,"message":"565","line":42,"column":40,"nodeType":"509","messageId":"510","endLine":42,"endColumn":46},{"ruleId":"512","severity":1,"message":"566","line":50,"column":8,"nodeType":"514","endLine":50,"endColumn":10,"suggestions":"567"},{"ruleId":"525","severity":1,"message":"526","line":163,"column":29,"nodeType":"527","messageId":"528","endLine":163,"endColumn":31},{"ruleId":"532","severity":1,"message":"533","line":53,"column":26,"nodeType":"531","endLine":53,"endColumn":51},{"ruleId":"532","severity":1,"message":"533","line":56,"column":25,"nodeType":"531","endLine":56,"endColumn":48},{"ruleId":"568","severity":1,"message":"569","line":44,"column":55,"nodeType":"570","messageId":"571","endLine":63,"endColumn":12},{"ruleId":"512","severity":1,"message":"572","line":76,"column":6,"nodeType":"514","endLine":76,"endColumn":14,"suggestions":"573"},{"ruleId":"507","severity":1,"message":"574","line":85,"column":9,"nodeType":"509","messageId":"510","endLine":85,"endColumn":18},{"ruleId":"568","severity":1,"message":"569","line":91,"column":55,"nodeType":"570","messageId":"571","endLine":108,"endColumn":12},{"ruleId":"512","severity":1,"message":"575","line":151,"column":6,"nodeType":"514","endLine":151,"endColumn":14,"suggestions":"576"},{"ruleId":"512","severity":1,"message":"572","line":191,"column":6,"nodeType":"514","endLine":191,"endColumn":14,"suggestions":"577"},{"ruleId":"507","severity":1,"message":"578","line":4,"column":10,"nodeType":"509","messageId":"510","endLine":4,"endColumn":19},{"ruleId":"507","severity":1,"message":"547","line":14,"column":5,"nodeType":"509","messageId":"510","endLine":14,"endColumn":18},{"ruleId":"507","severity":1,"message":"579","line":29,"column":8,"nodeType":"509","messageId":"510","endLine":29,"endColumn":16},{"ruleId":"507","severity":1,"message":"580","line":35,"column":13,"nodeType":"509","messageId":"510","endLine":35,"endColumn":20},{"ruleId":"507","severity":1,"message":"565","line":39,"column":40,"nodeType":"509","messageId":"510","endLine":39,"endColumn":46},{"ruleId":"507","severity":1,"message":"581","line":40,"column":19,"nodeType":"509","messageId":"510","endLine":40,"endColumn":27},{"ruleId":"512","severity":1,"message":"523","line":56,"column":21,"nodeType":"524","endLine":59,"endColumn":21},{"ruleId":"512","severity":1,"message":"582","line":26,"column":8,"nodeType":"514","endLine":26,"endColumn":10,"suggestions":"583"},{"ruleId":"512","severity":1,"message":"582","line":32,"column":8,"nodeType":"514","endLine":32,"endColumn":10,"suggestions":"584"},{"ruleId":"512","severity":1,"message":"582","line":29,"column":8,"nodeType":"514","endLine":29,"endColumn":10,"suggestions":"585"},{"ruleId":"512","severity":1,"message":"586","line":29,"column":8,"nodeType":"514","endLine":29,"endColumn":10,"suggestions":"587"},{"ruleId":"588","severity":1,"message":"589","line":91,"column":49,"nodeType":"590","messageId":"591","endLine":91,"endColumn":50,"suggestions":"592"},{"ruleId":"588","severity":1,"message":"593","line":91,"column":67,"nodeType":"590","messageId":"591","endLine":91,"endColumn":68,"suggestions":"594"},{"ruleId":"588","severity":1,"message":"595","line":91,"column":69,"nodeType":"590","messageId":"591","endLine":91,"endColumn":70,"suggestions":"596"},{"ruleId":"588","severity":1,"message":"589","line":114,"column":49,"nodeType":"590","messageId":"591","endLine":114,"endColumn":50,"suggestions":"597"},{"ruleId":"588","severity":1,"message":"593","line":114,"column":67,"nodeType":"590","messageId":"591","endLine":114,"endColumn":68,"suggestions":"598"},{"ruleId":"588","severity":1,"message":"595","line":114,"column":69,"nodeType":"590","messageId":"591","endLine":114,"endColumn":70,"suggestions":"599"},{"ruleId":"588","severity":1,"message":"589","line":131,"column":49,"nodeType":"590","messageId":"591","endLine":131,"endColumn":50,"suggestions":"600"},{"ruleId":"588","severity":1,"message":"593","line":131,"column":67,"nodeType":"590","messageId":"591","endLine":131,"endColumn":68,"suggestions":"601"},{"ruleId":"588","severity":1,"message":"595","line":131,"column":69,"nodeType":"590","messageId":"591","endLine":131,"endColumn":70,"suggestions":"602"},{"ruleId":"588","severity":1,"message":"589","line":151,"column":53,"nodeType":"590","messageId":"591","endLine":151,"endColumn":54,"suggestions":"603"},{"ruleId":"588","severity":1,"message":"593","line":151,"column":71,"nodeType":"590","messageId":"591","endLine":151,"endColumn":72,"suggestions":"604"},{"ruleId":"588","severity":1,"message":"595","line":151,"column":73,"nodeType":"590","messageId":"591","endLine":151,"endColumn":74,"suggestions":"605"},{"ruleId":"512","severity":1,"message":"582","line":30,"column":8,"nodeType":"514","endLine":30,"endColumn":10,"suggestions":"606"},{"ruleId":"507","severity":1,"message":"547","line":14,"column":5,"nodeType":"509","messageId":"510","endLine":14,"endColumn":18},{"ruleId":"507","severity":1,"message":"579","line":29,"column":8,"nodeType":"509","messageId":"510","endLine":29,"endColumn":16},{"ruleId":"507","severity":1,"message":"565","line":39,"column":40,"nodeType":"509","messageId":"510","endLine":39,"endColumn":46},{"ruleId":"512","severity":1,"message":"523","line":55,"column":21,"nodeType":"524","endLine":58,"endColumn":21},{"ruleId":"512","severity":1,"message":"582","line":35,"column":8,"nodeType":"514","endLine":35,"endColumn":10,"suggestions":"607"},{"ruleId":"529","severity":1,"message":"608","line":8,"column":9,"nodeType":"531","endLine":8,"endColumn":25},{"ruleId":"512","severity":1,"message":"609","line":24,"column":15,"nodeType":"570","endLine":30,"endColumn":6},{"ruleId":"512","severity":1,"message":"610","line":30,"column":8,"nodeType":"514","endLine":30,"endColumn":17,"suggestions":"611"},{"ruleId":"612","severity":1,"message":"613","line":95,"column":17,"nodeType":"614","messageId":"615","endLine":95,"endColumn":22},{"ruleId":"512","severity":1,"message":"616","line":30,"column":6,"nodeType":"514","endLine":30,"endColumn":32,"suggestions":"617"},{"ruleId":"532","severity":1,"message":"533","line":45,"column":26,"nodeType":"531","endLine":45,"endColumn":51},{"ruleId":"532","severity":1,"message":"533","line":48,"column":25,"nodeType":"531","endLine":48,"endColumn":48},{"ruleId":"532","severity":1,"message":"533","line":19,"column":17,"nodeType":"531","endLine":19,"endColumn":54},{"ruleId":"512","severity":1,"message":"618","line":13,"column":8,"nodeType":"514","endLine":13,"endColumn":19,"suggestions":"619"},{"ruleId":"512","severity":1,"message":"620","line":24,"column":8,"nodeType":"514","endLine":24,"endColumn":29,"suggestions":"621"},{"ruleId":"512","severity":1,"message":"618","line":11,"column":8,"nodeType":"514","endLine":11,"endColumn":16,"suggestions":"622"},{"ruleId":"512","severity":1,"message":"623","line":32,"column":8,"nodeType":"514","endLine":32,"endColumn":22,"suggestions":"624"},{"ruleId":"507","severity":1,"message":"625","line":127,"column":29,"nodeType":"509","messageId":"510","endLine":127,"endColumn":32},{"ruleId":"512","severity":1,"message":"626","line":170,"column":8,"nodeType":"514","endLine":170,"endColumn":30,"suggestions":"627"},{"ruleId":"512","severity":1,"message":"628","line":183,"column":8,"nodeType":"514","endLine":183,"endColumn":10,"suggestions":"629"},{"ruleId":"512","severity":1,"message":"630","line":262,"column":8,"nodeType":"514","endLine":262,"endColumn":18,"suggestions":"631"},{"ruleId":"507","severity":1,"message":"535","line":1,"column":17,"nodeType":"509","messageId":"510","endLine":1,"endColumn":26},{"ruleId":"507","severity":1,"message":"546","line":4,"column":8,"nodeType":"509","messageId":"510","endLine":4,"endColumn":13},{"ruleId":"507","severity":1,"message":"632","line":8,"column":8,"nodeType":"509","messageId":"510","endLine":8,"endColumn":12},{"ruleId":"507","severity":1,"message":"633","line":16,"column":30,"nodeType":"509","messageId":"510","endLine":16,"endColumn":37},{"ruleId":"634","severity":1,"message":"635","line":23,"column":49,"nodeType":"570","messageId":"636","endLine":23,"endColumn":51},{"ruleId":"512","severity":1,"message":"637","line":35,"column":8,"nodeType":"514","endLine":35,"endColumn":14,"suggestions":"638"},{"ruleId":"512","severity":1,"message":"639","line":29,"column":8,"nodeType":"514","endLine":29,"endColumn":19,"suggestions":"640"},{"ruleId":"512","severity":1,"message":"639","line":27,"column":8,"nodeType":"514","endLine":27,"endColumn":19,"suggestions":"641"},{"ruleId":"588","severity":1,"message":"642","line":106,"column":68,"nodeType":"590","messageId":"591","endLine":106,"endColumn":69,"suggestions":"643"},{"ruleId":"588","severity":1,"message":"642","line":106,"column":90,"nodeType":"590","messageId":"591","endLine":106,"endColumn":91,"suggestions":"644"},"no-native-reassign",["645"],"no-negated-in-lhs",["646"],"no-unused-vars","'WalletConnect' is defined but never used.","Identifier","unusedVar","'showConnectModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'activate'. Either include it or remove the dependency array.","ArrayExpression",["647"],"React Hook useEffect has a missing dependency: 'connector'. Either include it or remove the dependency array.",["648"],"React Hook useEffect has missing dependencies: 'active', 'dispatch', and 'library'. Either include them or remove the dependency array.",["649"],"'BN' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'errors'. Either include it or remove the dependency array. You can also do a functional update 'setErrors(e => ...)' if you only need 'errors' in the 'setErrors' call.",["650"],"Assignments to the 'timer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component topInfo must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useContext' is defined but never used.","'useEffect' is defined but never used.","'onSign' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'ethBalance' and 'library'. Either include them or remove the dependency array.",["651"],"React Hook useEffect has missing dependencies: 'address', 'chainId', and 'library'. Either include them or remove the dependency array.",["652"],"'SaleCard' is defined but never used.","React Hook useEffect has missing dependencies: 'active' and 'dispatch'. Either include them or remove the dependency array.",["653"],"'lattice' is defined but never used.","'setStepIsHover' is assigned a value but never used.","'axios' is defined but never used.","'successStatus' is defined but never used.","'numberToHex' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'calcuTime'. Either include it or remove the dependency array.",["654"],"'state' is assigned a value but never used.","'setName' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'setFromTotal' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'checkMyFSPool' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'queryTokenBalance'. Either include it or remove the dependency array.",["655"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'getFSPoolDetail'. Either include them or remove the dependency array.",["656"],"'active' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["657"],"no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pools', 'pools', 'pools'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has a missing dependency: 'fetchList'. Either include it or remove the dependency array.",["658"],"'fetchList' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchStatus'. Either include it or remove the dependency array.",["659"],["660"],"'TextInput' is defined but never used.","'API_HOST' is defined but never used.","'balance' is assigned a value but never used.","'setValue' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCurStep' and 'setTitle'. Either include them or remove the dependency array. If 'setTitle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["661"],["662"],["663"],"React Hook useEffect has a missing dependency: 'setTitle'. Either include it or remove the dependency array. If 'setTitle' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["664"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["665","666"],"Unnecessary escape character: \\+.",["667","668"],"Unnecessary escape character: \\%.",["669","670"],["671","672"],["673","674"],["675","676"],["677","678"],["679","680"],["681","682"],["683","684"],["685","686"],["687","688"],["689"],["690"],"Imported JSX component Kyc_Tip_Styled must be in PascalCase or SCREAMING_SNAKE_CASE","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has missing dependencies: 'chainId' and 'library'. Either include them or remove the dependency array.",["691"],"no-unreachable","Unreachable code.","BreakStatement","unreachableCode","React Hook useEffect has missing dependencies: 'address' and 'library'. Either include them or remove the dependency array.",["692"],"React Hook useEffect has missing dependencies: 'onChange' and 'options'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["693"],"React Hook useEffect has a missing dependency: 'selOption'. Either include it or remove the dependency array.",["694"],["695"],"React Hook useEffect has missing dependencies: 'errMsg', 'isRequire', 'name', 'onValChange', and 'onValueChange'. Either include them or remove the dependency array. If 'onValueChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["696"],"'val' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onChange'. Either include it or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["697"],"React Hook useEffect has a missing dependency: 'defaultVal'. Either include it or remove the dependency array.",["698"],"React Hook useEffect has missing dependencies: 'isError' and 'onChange'. Either include them or remove the dependency array. If 'onChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["699"],"'Web3' is defined but never used.","'library' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","React Hook useEffect has missing dependencies: 'isNext' and 'setReqData'. Either include them or remove the dependency array. If 'setReqData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["700"],"React Hook useEffect has a missing dependency: 'requiredList_json'. Either include it or remove the dependency array.",["701"],["702"],"Unnecessary escape character: \\-.",["703","704"],["705","706"],"no-global-assign","no-unsafe-negation",{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"729","fix":"733"},{"desc":"734","fix":"735"},{"desc":"734","fix":"736"},{"desc":"734","fix":"737"},{"desc":"738","fix":"739"},{"messageId":"740","fix":"741","desc":"742"},{"messageId":"743","fix":"744","desc":"745"},{"messageId":"740","fix":"746","desc":"742"},{"messageId":"743","fix":"747","desc":"745"},{"messageId":"740","fix":"748","desc":"742"},{"messageId":"743","fix":"749","desc":"745"},{"messageId":"740","fix":"750","desc":"742"},{"messageId":"743","fix":"751","desc":"745"},{"messageId":"740","fix":"752","desc":"742"},{"messageId":"743","fix":"753","desc":"745"},{"messageId":"740","fix":"754","desc":"742"},{"messageId":"743","fix":"755","desc":"745"},{"messageId":"740","fix":"756","desc":"742"},{"messageId":"743","fix":"757","desc":"745"},{"messageId":"740","fix":"758","desc":"742"},{"messageId":"743","fix":"759","desc":"745"},{"messageId":"740","fix":"760","desc":"742"},{"messageId":"743","fix":"761","desc":"745"},{"messageId":"740","fix":"762","desc":"742"},{"messageId":"743","fix":"763","desc":"745"},{"messageId":"740","fix":"764","desc":"742"},{"messageId":"743","fix":"765","desc":"745"},{"messageId":"740","fix":"766","desc":"742"},{"messageId":"743","fix":"767","desc":"745"},{"desc":"734","fix":"768"},{"desc":"734","fix":"769"},{"desc":"770","fix":"771"},{"desc":"772","fix":"773"},{"desc":"774","fix":"775"},{"desc":"776","fix":"777"},{"desc":"778","fix":"779"},{"desc":"780","fix":"781"},{"desc":"782","fix":"783"},{"desc":"784","fix":"785"},{"desc":"786","fix":"787"},{"desc":"788","fix":"789"},{"desc":"790","fix":"791"},{"desc":"790","fix":"792"},{"messageId":"740","fix":"793","desc":"742"},{"messageId":"743","fix":"794","desc":"745"},{"messageId":"740","fix":"795","desc":"742"},{"messageId":"743","fix":"796","desc":"745"},"Update the dependencies array to be: [activate]",{"range":"797","text":"798"},"Update the dependencies array to be: [activatingConnector, connector]",{"range":"799","text":"800"},"Update the dependencies array to be: [account, active, dispatch, library]",{"range":"801","text":"802"},"Update the dependencies array to be: [onlyBOT, balance, bidAmount, account, errors]",{"range":"803","text":"804"},"Update the dependencies array to be: [active, token, account, library, ethBalance]",{"range":"805","text":"806"},"Update the dependencies array to be: [active, account, library, address, chainId]",{"range":"807","text":"808"},"Update the dependencies array to be: [ReqData, active, dispatch]",{"range":"809","text":"810"},"Update the dependencies array to be: [calcuTime, time]",{"range":"811","text":"812"},"Update the dependencies array to be: [queryTokenBalance, toAddress]",{"range":"813","text":"814"},"Update the dependencies array to be: [active, chainId, account, getFSPoolDetail, dispatch]",{"range":"815","text":"816"},"Update the dependencies array to be: [dispatch]",{"range":"817","text":"818"},"Update the dependencies array to be: [active, fetchList]",{"range":"819","text":"820"},"Update the dependencies array to be: [active, fetchStatus]",{"range":"821","text":"822"},{"range":"823","text":"820"},"Update the dependencies array to be: [setCurStep, setTitle]",{"range":"824","text":"825"},{"range":"826","text":"825"},{"range":"827","text":"825"},"Update the dependencies array to be: [setTitle]",{"range":"828","text":"829"},"removeEscape",{"range":"830","text":"831"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"832","text":"833"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"834","text":"831"},{"range":"835","text":"833"},{"range":"836","text":"831"},{"range":"837","text":"833"},{"range":"838","text":"831"},{"range":"839","text":"833"},{"range":"840","text":"831"},{"range":"841","text":"833"},{"range":"842","text":"831"},{"range":"843","text":"833"},{"range":"844","text":"831"},{"range":"845","text":"833"},{"range":"846","text":"831"},{"range":"847","text":"833"},{"range":"848","text":"831"},{"range":"849","text":"833"},{"range":"850","text":"831"},{"range":"851","text":"833"},{"range":"852","text":"831"},{"range":"853","text":"833"},{"range":"854","text":"831"},{"range":"855","text":"833"},{"range":"856","text":"825"},{"range":"857","text":"825"},"Update the dependencies array to be: [account, chainId, library]",{"range":"858","text":"859"},"Update the dependencies array to be: [active, account, chainId, library, address]",{"range":"860","text":"861"},"Update the dependencies array to be: [onChange, options, selOption]",{"range":"862","text":"863"},"Update the dependencies array to be: [defaultVal, options, selOption]",{"range":"864","text":"865"},"Update the dependencies array to be: [curSel, onChange, options]",{"range":"866","text":"867"},"Update the dependencies array to be: [val, isError, onValueChange, name, errMsg, isRequire, onValChange]",{"range":"868","text":"869"},"Update the dependencies array to be: [days, hours, minutes, onChange]",{"range":"870","text":"871"},"Update the dependencies array to be: [defaultVal]",{"range":"872","text":"873"},"Update the dependencies array to be: [inputVal, isError, onChange]",{"range":"874","text":"875"},"Update the dependencies array to be: [data, isNext, setReqData]",{"range":"876","text":"877"},"Update the dependencies array to be: [checkList, requiredList_json]",{"range":"878","text":"879"},{"range":"880","text":"879"},{"range":"881","text":"831"},{"range":"882","text":"833"},{"range":"883","text":"831"},{"range":"884","text":"833"},[1855,1857],"[activate]",[1939,1960],"[activatingConnector, connector]",[2170,2179],"[account, active, dispatch, library]",[3266,3304],"[onlyBOT, balance, bidAmount, account, errors]",[2716,2740],"[active, token, account, library, ethBalance]",[3437,3454],"[active, account, library, address, chainId]",[833,842],"[ReqData, active, dispatch]",[1095,1101],"[calcuTime, time]",[2723,2734],"[queryTokenBalance, toAddress]",[7204,7230],"[active, chainId, account, getFSPoolDetail, dispatch]",[1822,1824],"[dispatch]",[2294,2302],"[active, fetchList]",[4548,4556],"[active, fetchStatus]",[5755,5763],[811,813],"[setCurStep, setTitle]",[1191,1193],[1046,1048],[968,970],"[setTitle]",[2850,2851],"",[2850,2850],"\\",[2868,2869],[2868,2868],[2870,2871],[2870,2870],[3672,3673],[3672,3672],[3690,3691],[3690,3690],[3692,3693],[3692,3692],[4300,4301],[4300,4300],[4318,4319],[4318,4318],[4320,4321],[4320,4320],[5020,5021],[5020,5020],[5038,5039],[5038,5038],[5040,5041],[5040,5040],[828,830],[1204,1206],[1432,1441],"[account, chainId, library]",[873,899],"[active, account, chainId, library, address]",[509,520],"[onChange, options, selOption]",[956,977],"[defaultVal, options, selOption]",[443,451],"[curSel, onChange, options]",[1131,1145],"[val, isError, onValueChange, name, errMsg, isRequire, onValChange]",[5716,5738],"[days, hours, minutes, onChange]",[6118,6120],"[defaultVal]",[8759,8769],"[inputVal, isError, onChange]",[1282,1288],"[data, isNext, setReqData]",[935,946],"[checkList, requiredList_json]",[902,913],[3572,3573],[3572,3572],[3594,3595],[3594,3594]]